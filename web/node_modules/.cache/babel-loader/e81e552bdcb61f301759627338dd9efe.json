{"ast":null,"code":"export default function refreshUserValidate(credentials) {\n  let errors = {};\n\n  if (credentials !== null) {\n    var _credentials$fullName, _credentials$fullName2, _credentials$phoneNum, _phoneNumbers$length;\n\n    if ((_credentials$fullName = !(credentials === null || credentials === void 0 ? void 0 : (_credentials$fullName2 = credentials.fullName) === null || _credentials$fullName2 === void 0 ? void 0 : _credentials$fullName2.length)) !== null && _credentials$fullName !== void 0 ? _credentials$fullName : 0) {\n      errors.fullName = \"Campo de nome é necessário\";\n    }\n\n    if (!(credentials === null || credentials === void 0 ? void 0 : credentials.email)) {\n      errors.email = \"Campo de e-mail é necessário\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(credentials === null || credentials === void 0 ? void 0 : credentials.email)) {\n      errors.email = \"E-mail inválido\";\n    }\n\n    const phoneNumbers = credentials === null || credentials === void 0 ? void 0 : (_credentials$phoneNum = credentials.phoneNumber) === null || _credentials$phoneNum === void 0 ? void 0 : _credentials$phoneNum.replace(/[-.() ]/g, \"\");\n\n    if (isNaN(parseInt(phoneNumbers))) {\n      errors.phoneNumber = \"Número de telefone inválido\";\n    } else if (phoneNumbers.length !== 11) {\n      errors.phoneNumber = \"Número de telefone inválido\";\n    } else if ((_phoneNumbers$length = !phoneNumbers.length) !== null && _phoneNumbers$length !== void 0 ? _phoneNumbers$length : 0) {\n      errors.phoneNumber = \"Campo de telefone é necessário\";\n    }\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/utils/refreshUserValidate.ts"],"names":["refreshUserValidate","credentials","errors","fullName","length","email","test","phoneNumbers","phoneNumber","replace","isNaN","parseInt"],"mappings":"AAMA,eAAe,SAASA,mBAAT,CAA6BC,WAA7B,EAAgD;AAC7D,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAID,WAAW,KAAK,IAApB,EAA0B;AAAA;;AACxB,iCAAI,EAACA,WAAD,aAACA,WAAD,iDAACA,WAAW,CAAEE,QAAd,2DAAC,uBAAuBC,MAAxB,CAAJ,yEAAsC,CAAtC,EAAyC;AACvCF,MAAAA,MAAM,CAACC,QAAP,GAAkB,4BAAlB;AACD;;AAED,QAAI,EAACF,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEI,KAAd,CAAJ,EAAyB;AACvBH,MAAAA,MAAM,CAACG,KAAP,GAAe,8BAAf;AACD,KAFD,MAEO,IACL,CAAC,2CAA2CC,IAA3C,CAAgDL,WAAhD,aAAgDA,WAAhD,uBAAgDA,WAAW,CAAEI,KAA7D,CADI,EAEL;AACAH,MAAAA,MAAM,CAACG,KAAP,GAAe,iBAAf;AACD;;AAED,UAAME,YAAY,GAAGN,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEO,WAAhB,0DAAG,sBAA0BC,OAA1B,CAAkC,UAAlC,EAA8C,EAA9C,CAArB;;AAEA,QAAIC,KAAK,CAACC,QAAQ,CAACJ,YAAD,CAAT,CAAT,EAAmC;AACjCL,MAAAA,MAAM,CAACM,WAAP,GAAqB,6BAArB;AACD,KAFD,MAEO,IAAID,YAAY,CAACH,MAAb,KAAwB,EAA5B,EAAgC;AACrCF,MAAAA,MAAM,CAACM,WAAP,GAAqB,6BAArB;AACD,KAFM,MAEA,4BAAI,CAACD,YAAY,CAACH,MAAlB,uEAA4B,CAA5B,EAA+B;AACpCF,MAAAA,MAAM,CAACM,WAAP,GAAqB,gCAArB;AACD;AACF;;AAED,SAAON,MAAP;AACD","sourcesContent":["interface User {\r\n  fullName: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n}\r\n\r\nexport default function refreshUserValidate(credentials: User) {\r\n  let errors = {} as User;\r\n\r\n  if (credentials !== null) {\r\n    if (!credentials?.fullName?.length ?? 0) {\r\n      errors.fullName = \"Campo de nome é necessário\";\r\n    }\r\n\r\n    if (!credentials?.email) {\r\n      errors.email = \"Campo de e-mail é necessário\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(credentials?.email)\r\n    ) {\r\n      errors.email = \"E-mail inválido\";\r\n    }\r\n\r\n    const phoneNumbers = credentials?.phoneNumber?.replace(/[-.() ]/g, \"\");\r\n\r\n    if (isNaN(parseInt(phoneNumbers))) {\r\n      errors.phoneNumber = \"Número de telefone inválido\";\r\n    } else if (phoneNumbers.length !== 11) {\r\n      errors.phoneNumber = \"Número de telefone inválido\";\r\n    } else if (!phoneNumbers.length ?? 0) {\r\n      errors.phoneNumber = \"Campo de telefone é necessário\";\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}