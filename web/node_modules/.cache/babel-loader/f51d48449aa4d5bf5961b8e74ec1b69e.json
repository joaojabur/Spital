{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\components\\\\MedicProfilePages\\\\Payment\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\nimport PaymentInfo from \"../../../components/PaymentInfo\";\nimport { useModal } from \"../../../context/ModalProvider\";\nimport { useEffect, useState } from \"react\";\nimport api from \"../../../services/api\";\nimport { useAuth } from \"../../../context/AuthProvider\";\nimport Loader from \"react-loader-spinner\";\nimport { useShareAppointmentForm } from \"../../../context/ShareAppointmentFormProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst pagarme = require(\"pagarme\");\n\nconst PaymentMedicProfile = ({\n  previousPage\n}) => {\n  _s();\n\n  const {\n    appointmentData,\n    setAppointmentData\n  } = useShareAppointmentForm();\n  const {\n    userID\n  } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const {\n    cvvError\n  } = useShareAppointmentForm();\n  const [error, setError] = useState(\"\");\n  const {\n    paymentMethod\n  } = useModal();\n  const [card, setCard] = useState({\n    id: \"\",\n    first_digits: \"\",\n    last_digits: \"\",\n    holder_name: \"\",\n    expiration_date: \"\",\n    card_cvv: \"\"\n  });\n  useEffect(() => {\n    setLoading(true);\n    api.get(`cards?userID=${userID}`).then(response => {\n      var _response$data$;\n\n      setCard((_response$data$ = response.data[0]) === null || _response$data$ === void 0 ? void 0 : _response$data$.card);\n      setLoading(false);\n    });\n  }, [userID, setCard]);\n\n  function handleSubmitAppointment() {\n    setLoading(true);\n\n    if (!(card === null || card === void 0 ? void 0 : card.card_cvv)) {\n      setError(\"Campo de CVV vazio\");\n      setLoading(false);\n    } else if ((cvvError === null || cvvError === void 0 ? void 0 : cvvError.length) === null || (cvvError === null || cvvError === void 0 ? void 0 : cvvError.length) > 0) {\n      setError(\"Campo de CVV invÃ¡lido\");\n      setLoading(false);\n    } else {\n      setError(\"\");\n      pagarme.client.connect({\n        api_key: \"ak_live_1LTY4ZT4KedK1k68VQRzmVM3znX40e\"\n      }).then(client => client.cards.find({\n        id: card.id\n      })).then(card => {\n        api.post(\"cards\", {\n          card,\n          appointmentData\n        }).then(() => {\n          setLoading(false);\n        });\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-platform\",\n    children: [/*#__PURE__*/_jsxDEV(SubHeaderPlatform, {\n      title: \"Pagamento\",\n      returnFunction: () => previousPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(PaymentInfo, {\n        card: card,\n        setCard: setCard,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"TailSpin\",\n        color: \"var(--color-button-primary)\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"green-button\",\n          style: {\n            backgroundColor: \"#8F2D56\"\n          },\n          onClick: e => {\n            paymentMethod.open({\n              card\n            });\n          },\n          children: \"Escolher forma de pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitAppointment,\n          className: \"green-button\",\n          style: {\n            marginTop: \"-1rem\"\n          },\n          children: \"Agendar consulta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentMedicProfile, \"hEk/sXbRxtzEy0nKtf2TIsHxLOI=\", false, function () {\n  return [useShareAppointmentForm, useAuth, useShareAppointmentForm, useModal];\n});\n\n_c = PaymentMedicProfile;\nexport default PaymentMedicProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMedicProfile\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/components/MedicProfilePages/Payment/index.tsx"],"names":["SubHeaderPlatform","PaymentInfo","useModal","useEffect","useState","api","useAuth","Loader","useShareAppointmentForm","pagarme","require","PaymentMedicProfile","previousPage","appointmentData","setAppointmentData","userID","loading","setLoading","cvvError","error","setError","paymentMethod","card","setCard","id","first_digits","last_digits","holder_name","expiration_date","card_cvv","get","then","response","data","handleSubmitAppointment","length","client","connect","api_key","cards","find","post","backgroundColor","e","open","marginTop"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,uBAAT,QAAwC,+CAAxC;;;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkC;AAAA;;AAC5D,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA0CN,uBAAuB,EAAvE;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaT,OAAO,EAA1B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAeV,uBAAuB,EAA5C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAAoBnB,QAAQ,EAAlC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAqB;AACnDoB,IAAAA,EAAE,EAAE,EAD+C;AAEnDC,IAAAA,YAAY,EAAE,EAFqC;AAGnDC,IAAAA,WAAW,EAAE,EAHsC;AAInDC,IAAAA,WAAW,EAAE,EAJsC;AAKnDC,IAAAA,eAAe,EAAE,EALkC;AAMnDC,IAAAA,QAAQ,EAAE;AANyC,GAArB,CAAhC;AASA1B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,IAAAA,GAAG,CAACyB,GAAJ,CAAS,gBAAef,MAAO,EAA/B,EAAkCgB,IAAlC,CAAwCC,QAAD,IAAmB;AAAA;;AACxDT,MAAAA,OAAO,oBAACS,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,oDAAC,gBAAkBX,IAAnB,CAAP;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GANQ,EAMN,CAACF,MAAD,EAASQ,OAAT,CANM,CAAT;;AAQA,WAASW,uBAAT,GAAmC;AACjCjB,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI,EAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,QAAP,CAAJ,EAAqB;AACnBT,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,MAGO,IAAI,CAAAC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEiB,MAAV,MAAqB,IAArB,IAA6B,CAAAjB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEiB,MAAV,IAAmB,CAApD,EAAuD;AAC5Df,MAAAA,QAAQ,CAAC,uBAAD,CAAR;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHM,MAGA;AACLG,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAX,MAAAA,OAAO,CAAC2B,MAAR,CACGC,OADH,CACW;AACPC,QAAAA,OAAO,EAAE;AADF,OADX,EAIGP,IAJH,CAISK,MAAD,IAAiBA,MAAM,CAACG,KAAP,CAAaC,IAAb,CAAkB;AAAEhB,QAAAA,EAAE,EAAEF,IAAI,CAACE;AAAX,OAAlB,CAJzB,EAKGO,IALH,CAKST,IAAD,IAAe;AACnBjB,QAAAA,GAAG,CACAoC,IADH,CACQ,OADR,EACiB;AACbnB,UAAAA,IADa;AAEbT,UAAAA;AAFa,SADjB,EAKGkB,IALH,CAKQ,MAAM;AACVd,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAPH;AAQD,OAdH;AAeD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE,QAAC,iBAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,cAAc,EAAE,MAAML,YAAY;AAFpC;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEU,IAAnB;AAAyB,QAAA,OAAO,EAAEC,OAAlC;AAA2C,QAAA,KAAK,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGH,OAAO,gBACN,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAC,6BAFR;AAGE,QAAA,MAAM,EAAE,GAHV;AAIE,QAAA,KAAK,EAAE;AAJT;AAAA;AAAA;AAAA;AAAA,cADM,gBAQN;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,KAAK,EAAE;AAAE0B,YAAAA,eAAe,EAAE;AAAnB,WAFT;AAGE,UAAA,OAAO,EAAGC,CAAD,IAAO;AACdtB,YAAAA,aAAa,CAACuB,IAAd,CAAmB;AAAEtB,cAAAA;AAAF,aAAnB;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AACE,UAAA,OAAO,EAAEY,uBADX;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,KAAK,EAAE;AAAEW,YAAAA,SAAS,EAAE;AAAb,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA5FD;;GAAMlC,mB;UAC4CH,uB,EAC7BF,O,EAEEE,uB,EAGKN,Q;;;KAPtBS,mB;AA8FN,eAAeA,mBAAf","sourcesContent":["import \"./styles.css\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport PaymentInfo from \"../../../components/PaymentInfo\";\r\nimport { useModal } from \"../../../context/ModalProvider\";\r\nimport { NamesProps } from \"../../Form/Steps/Names\";\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../../../services/api\";\r\nimport { useAuth } from \"../../../context/AuthProvider\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { PaymentMethodProps } from \"../../Modals/PaymentMethod\";\r\nimport { useShareAppointmentForm } from \"../../../context/ShareAppointmentFormProvider\";\r\nconst pagarme = require(\"pagarme\");\r\n\r\nconst PaymentMedicProfile = ({ previousPage }: NamesProps) => {\r\n  const { appointmentData, setAppointmentData } = useShareAppointmentForm();\r\n  const { userID } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const { cvvError } = useShareAppointmentForm();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { paymentMethod } = useModal();\r\n  const [card, setCard] = useState<PaymentMethodProps>({\r\n    id: \"\",\r\n    first_digits: \"\",\r\n    last_digits: \"\",\r\n    holder_name: \"\",\r\n    expiration_date: \"\",\r\n    card_cvv: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`cards?userID=${userID}`).then((response: any) => {\r\n      setCard(response.data[0]?.card);\r\n      setLoading(false);\r\n    });\r\n  }, [userID, setCard]);\r\n\r\n  function handleSubmitAppointment() {\r\n    setLoading(true);\r\n    if (!card?.card_cvv) {\r\n      setError(\"Campo de CVV vazio\");\r\n      setLoading(false);\r\n    } else if (cvvError?.length === null || cvvError?.length > 0) {\r\n      setError(\"Campo de CVV invÃ¡lido\");\r\n      setLoading(false);\r\n    } else {\r\n      setError(\"\");\r\n      pagarme.client\r\n        .connect({\r\n          api_key: \"ak_live_1LTY4ZT4KedK1k68VQRzmVM3znX40e\",\r\n        })\r\n        .then((client: any) => client.cards.find({ id: card.id }))\r\n        .then((card: any) => {\r\n          api\r\n            .post(\"cards\", {\r\n              card,\r\n              appointmentData,\r\n            })\r\n            .then(() => {\r\n              setLoading(false);\r\n            });\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title=\"Pagamento\"\r\n        returnFunction={() => previousPage()}\r\n      />\r\n      <div className=\"container\">\r\n        <PaymentInfo card={card} setCard={setCard} error={error} />\r\n        {loading ? (\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <>\r\n            <button\r\n              className=\"green-button\"\r\n              style={{ backgroundColor: \"#8F2D56\" }}\r\n              onClick={(e) => {\r\n                paymentMethod.open({ card });\r\n              }}\r\n            >\r\n              Escolher forma de pagamento\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleSubmitAppointment}\r\n              className=\"green-button\"\r\n              style={{ marginTop: \"-1rem\" }}\r\n            >\r\n              Agendar consulta\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentMedicProfile;\r\n"]},"metadata":{},"sourceType":"module"}