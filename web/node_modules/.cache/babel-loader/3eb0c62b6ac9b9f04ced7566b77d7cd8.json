{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\components\\\\FormMedic\\\\Steps\\\\Schedule.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport Select from \"../../Select\";\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicSchedule = ({\n  nextPage,\n  previousPage\n}) => {\n  _s();\n\n  const {\n    setMedicData\n  } = useShareFormMedic();\n  const weekDays = [{\n    value: \"0\",\n    label: \"Domingo\"\n  }, {\n    value: \"1\",\n    label: \"Segunda-feira\"\n  }, {\n    value: \"2\",\n    label: \"Terça-feira\"\n  }, {\n    value: \"3\",\n    label: \"Quarta-feira\"\n  }, {\n    value: \"4\",\n    label: \"Quinta-feira\"\n  }, {\n    value: \"5\",\n    label: \"Sexta-feira\"\n  }, {\n    value: \"6\",\n    label: \"Sábado\"\n  }];\n  const [scheduleItems, setScheduleItems] = useState([{\n    week_day: 0,\n    from: \"08:30\",\n    to: \"17:00\"\n  }]);\n  useEffect(() => {\n    console.log(scheduleItems);\n    setMedicData(previousState => ({ ...previousState,\n      schedule: scheduleItems\n    }));\n  }, [scheduleItems, setMedicData]);\n\n  function addNewScheduleItem() {\n    if (scheduleItems.length >= 7) {\n      console.log(\"Are you living on Earth? Here we have only seven days in a week!\");\n    } else {\n      setScheduleItems([...scheduleItems, {\n        week_day: scheduleItems.length,\n        from: \"08:30\",\n        to: \"17:00\"\n      }]);\n    }\n  }\n\n  function setScheduleItemValue(position, field, value) {\n    const newScheduleItems = scheduleItems.map((scheduleItem, index) => {\n      if (index === position) {\n        return { ...scheduleItem,\n          [field]: value\n        };\n      }\n\n      return scheduleItem;\n    });\n    setScheduleItems(newScheduleItems);\n  }\n\n  function deleteScheduleItem(position) {\n    let newScheduleItems = [...scheduleItems];\n    const index = newScheduleItems.findIndex(item => item === position);\n    newScheduleItems.splice(index, 1);\n    setScheduleItems(newScheduleItems);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hor\\xE1rios dispon\\xEDveis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-button\",\n        onClick: addNewScheduleItem,\n        children: \"+ Novo hor\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), scheduleItems.map((scheduleItem, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schedule-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"schedule-item-label\",\n          children: \"Dia da semana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"week_day\",\n          onChange: e => setScheduleItemValue(index, \"week_day\", e.target.value),\n          value: scheduleItem.week_day,\n          options: weekDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-item-horizontal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"schedule-item-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"schedule-item-label\",\n              children: \"Das\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: scheduleItem.from,\n              name: \"from\",\n              type: \"time\",\n              onChange: e => {\n                setScheduleItemValue(index, \"from\", e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"schedule-item-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"schedule-item-label\",\n              children: \"At\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: scheduleItem.to,\n              name: \"to\",\n              type: \"time\",\n              onChange: e => {\n                setScheduleItemValue(index, \"to\", e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            deleteScheduleItem(index);\n          },\n          className: \"line-gray\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Excluir hor\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, scheduleItem.week_day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"secondary\",\n      onClick: e => previousPage(),\n      children: \"Anterior\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary\",\n      onClick: e => nextPage(),\n      children: \"Pr\\xF3ximo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MedicSchedule, \"bfCqe+PDHk9zW8l61SJklM1fX1k=\", false, function () {\n  return [useShareFormMedic];\n});\n\n_c = MedicSchedule;\nexport default MedicSchedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicSchedule\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/components/FormMedic/Steps/Schedule.tsx"],"names":["React","useEffect","useState","Select","useShareFormMedic","MedicSchedule","nextPage","previousPage","setMedicData","weekDays","value","label","scheduleItems","setScheduleItems","week_day","from","to","console","log","previousState","schedule","addNewScheduleItem","length","setScheduleItemValue","position","field","newScheduleItems","map","scheduleItem","index","deleteScheduleItem","findIndex","item","splice","e","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport Select from \"../../Select\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface ISchedule {\r\n  week_day: number;\r\n  from: string;\r\n  to: string;\r\n}\r\ninterface MedicScheduleProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicSchedule = ({ nextPage, previousPage }: MedicScheduleProps) => {\r\n  const { setMedicData } = useShareFormMedic();\r\n\r\n  const weekDays = [\r\n    {\r\n      value: \"0\",\r\n      label: \"Domingo\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"Segunda-feira\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"Terça-feira\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"Quarta-feira\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"Quinta-feira\",\r\n    },\r\n    {\r\n      value: \"5\",\r\n      label: \"Sexta-feira\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"Sábado\",\r\n    },\r\n  ];\r\n\r\n  const [scheduleItems, setScheduleItems] = useState([\r\n    {\r\n      week_day: 0,\r\n      from: \"08:30\",\r\n      to: \"17:00\",\r\n    },\r\n  ] as Array<ISchedule>);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(scheduleItems);\r\n    setMedicData((previousState) => ({ ...previousState, schedule: scheduleItems}))\r\n  }, [scheduleItems, setMedicData])\r\n\r\n\r\n  function addNewScheduleItem() {\r\n    if (scheduleItems.length >= 7) {\r\n      console.log(\r\n        \"Are you living on Earth? Here we have only seven days in a week!\"\r\n      );\r\n    } else {\r\n      setScheduleItems([\r\n        ...scheduleItems,\r\n        {\r\n          week_day: scheduleItems.length,\r\n          from: \"08:30\",\r\n          to: \"17:00\",\r\n        },\r\n      ]);\r\n    }\r\n  }\r\n\r\n  function setScheduleItemValue(\r\n    position: number,\r\n    field: string,\r\n    value: string\r\n  ) {\r\n    const newScheduleItems = scheduleItems.map((scheduleItem, index) => {\r\n      if (index === position) {\r\n        return { ...scheduleItem, [field]: value };\r\n      }\r\n\r\n      return scheduleItem;\r\n    });\r\n\r\n    setScheduleItems(newScheduleItems);\r\n  }\r\n\r\n  function deleteScheduleItem(position: number) {\r\n    let newScheduleItems = [...scheduleItems];\r\n    const index = newScheduleItems.findIndex((item: any) => item === position);\r\n\r\n    newScheduleItems.splice(index, 1);\r\n\r\n    setScheduleItems(newScheduleItems);\r\n  }\r\n  return (\r\n    <form className=\"form-container\">\r\n      <div className=\"form-container-flex\">\r\n        <h2>Horários disponíveis</h2>\r\n\r\n        <div className=\"add-button\" onClick={addNewScheduleItem}>\r\n          + Novo horário\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\"></div>\r\n\r\n      {scheduleItems.map((scheduleItem, index) => {\r\n        return (\r\n          <div key={scheduleItem.week_day} className=\"schedule-item\">\r\n            <span className=\"schedule-item-label\">Dia da semana</span>\r\n            <Select\r\n              name=\"week_day\"\r\n              onChange={(e: any) =>\r\n                setScheduleItemValue(index, \"week_day\", e.target.value)\r\n              }\r\n              value={scheduleItem.week_day}\r\n              options={weekDays}\r\n            />\r\n\r\n            <div className=\"schedule-item-horizontal\">\r\n              <div className=\"schedule-item-input\">\r\n                <span className=\"schedule-item-label\">Das</span>\r\n                <input\r\n                  value={scheduleItem.from}\r\n                  name=\"from\"\r\n                  type=\"time\"\r\n                  onChange={(e: any) => {\r\n                    setScheduleItemValue(index, \"from\", e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"schedule-item-input\">\r\n                <span className=\"schedule-item-label\">Até</span>\r\n                <input\r\n                  value={scheduleItem.to}\r\n                  name=\"to\"\r\n                  type=\"time\"\r\n                  onChange={(e: any) => {\r\n                    setScheduleItemValue(index, \"to\", e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              onClick={(e: any) => {\r\n                deleteScheduleItem(index);\r\n              }}\r\n              className=\"line-gray\"\r\n            >\r\n              <span>Excluir horário</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <button className=\"secondary\" \r\n        onClick={(e) => previousPage()}>\r\n          Anterior\r\n      </button>\r\n      <button className=\"primary\"\r\n        onClick={(e) => nextPage()}>\r\n          Próximo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MedicSchedule;\r\n"]},"metadata":{},"sourceType":"module"}