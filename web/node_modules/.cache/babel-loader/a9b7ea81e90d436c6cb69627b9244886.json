{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\pages\\\\ForgetPassword\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useModal } from \"../../context/ModalProvider\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgetPassword() {\n  _s();\n\n  const {\n    spinner\n  } = useModal();\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [successfull, setSuccesfull] = useState(\"\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setError(\"\");\n    spinner.open();\n\n    try {\n      let response = await api.post(\"/users/recover/\", {\n        email\n      });\n\n      if (response.status === 200) {// Email enviado\n      }\n\n      setSuccesfull(\"E-mail enviado!\");\n    } catch (error) {\n      if (error.response.data === \"Not Found\") {\n        setSuccesfull(\"\");\n        setError(\"Usuário não encontrado\");\n      }\n    }\n\n    spinner.close();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-container\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Seu e-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: email,\n      name: \"firstName\",\n      label: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"1.5rem\"\n        },\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this),\n      variant: \"outlined\",\n      fullWidth: true,\n      onChange: e => {\n        setEmail(e.target.value);\n      },\n      autoComplete: \"off\",\n      required: true,\n      error: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"recover-password-button\",\n      children: \"Recuperar senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"red\",\n        fontSize: \"2rem\"\n      },\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : null, successfull.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"#3EB713\",\n        marginTop: \"2rem\",\n        fontSize: \"2rem\",\n        position: \"relative\",\n        textAlign: \"center\"\n      },\n      children: successfull\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgetPassword, \"IYkThZ0w1weTMIIu0qZocm3HxYA=\", false, function () {\n  return [useModal];\n});\n\n_c = ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/pages/ForgetPassword/index.tsx"],"names":["TextField","React","useState","useModal","api","ForgetPassword","spinner","email","setEmail","error","setError","successfull","setSuccesfull","handleSubmit","e","preventDefault","open","response","post","status","data","close","fontSize","target","value","length","color","marginTop","position","textAlign"],"mappings":"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","sourcesContent":["import { TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport api from \"../../services/api\";\r\nimport \"./styles.css\";\r\n\r\nexport default function ForgetPassword() {\r\n  const { spinner } = useModal();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [successfull, setSuccesfull] = useState(\"\");\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n\r\n    setError(\"\");\r\n    spinner.open();\r\n\r\n    try {\r\n      let response = await api.post(\"/users/recover/\", { email });\r\n\r\n      if (response.status === 200) {\r\n        // Email enviado\r\n      }\r\n\r\n      setSuccesfull(\"E-mail enviado!\");\r\n    } catch (error) {\r\n      if (error.response.data === \"Not Found\") {\r\n        setSuccesfull(\"\");\r\n        setError(\"Usuário não encontrado\");\r\n      }\r\n    }\r\n\r\n    spinner.close();\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit}>\r\n      <h2>Seu e-mail</h2>\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        value={email}\r\n        name=\"firstName\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={false}\r\n      />\r\n      <button className=\"recover-password-button\">Recuperar senha</button>\r\n      {error.length ? (\r\n        <h1 style={{ color: \"red\", fontSize: \"2rem\" }}> {error} </h1>\r\n      ) : null}\r\n\r\n      {successfull.length > 0 && (\r\n        <span\r\n          style={{\r\n            color: \"#3EB713\",\r\n            marginTop: \"2rem\",\r\n            fontSize: \"2rem\",\r\n            position: \"relative\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          {successfull}\r\n        </span>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}