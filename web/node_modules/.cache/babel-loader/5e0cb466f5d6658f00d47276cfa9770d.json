{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\context\\\\ModalProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from \"react\";\nimport CadastroSucesso from \"../components/Modals/CadastroSucesso\";\nimport Filtro from \"../components/Modals/Filtro\";\nimport PaymentMethod from \"../components/Modals/PaymentMethod\";\nimport Spinner from \"../components/Modals/Spinner\";\nimport AreYouSure from \"../components/Modals/AreYouSure\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext({});\nexport default function ModalProvider({\n  children\n}) {\n  _s();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modal, setModal] = useState(null);\n\n  function openModal(Modal) {\n    setModal(Modal);\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  let value = {\n    spinner: {\n      open: () => openModal( /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this)),\n      close: closeModal\n    },\n    sucesso: {\n      open: ({\n        name,\n        close,\n        description\n      }) => openModal( /*#__PURE__*/_jsxDEV(CadastroSucesso, {\n        description: description,\n        name: name,\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)),\n      close: closeModal\n    },\n    paymentMethod: {\n      open: ({\n        card\n      }) => openModal( /*#__PURE__*/_jsxDEV(PaymentMethod, {\n        card: card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 42\n      }, this)),\n      close: closeModal\n    },\n    filter: {\n      open: ({\n        changePrice,\n        changeDistance,\n        currentPrice,\n        currentDistance\n      }) => openModal( /*#__PURE__*/_jsxDEV(Filtro, {\n        changeDistance: changeDistance,\n        changePrice: changePrice,\n        currentDistance: currentDistance,\n        currentPrice: currentPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)),\n      close: closeModal\n    },\n    areYouSure: {\n      open: ({\n        close,\n        message,\n        sureFunction\n      }) => openModal( /*#__PURE__*/_jsxDEV(AreYouSure, {\n        close: close,\n        message: message,\n        sureFunction: sureFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)),\n      close: closeModal\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: value,\n    children: [children, isModalOpen && modal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalProvider, \"IK/S9QZ8/9d6737cXGkcLGOht8o=\");\n\n_c = ModalProvider;\nexport function useModal() {\n  _s2();\n\n  return useContext(ModalContext);\n}\n\n_s2(useModal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/context/ModalProvider.tsx"],"names":["React","createContext","useContext","useState","CadastroSucesso","Filtro","PaymentMethod","Spinner","AreYouSure","ModalContext","ModalProvider","children","isModalOpen","setIsModalOpen","modal","setModal","openModal","Modal","closeModal","value","spinner","open","close","sucesso","name","description","paymentMethod","card","filter","changePrice","changeDistance","currentPrice","currentDistance","areYouSure","message","sureFunction","useModal"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport { AreYouSureProps } from \"../components/Modals/AreYouSure\";\r\nimport CadastroSucesso, {\r\n  CadastroSucessoProps as sucessoProps,\r\n} from \"../components/Modals/CadastroSucesso\";\r\nimport Filtro, { FiltroProps } from \"../components/Modals/Filtro\";\r\nimport PaymentMethod, {\r\n  PaymentMethodProps,\r\n} from \"../components/Modals/PaymentMethod\";\r\nimport Spinner from \"../components/Modals/Spinner\";\r\nimport AreYouSure from \"../components/Modals/AreYouSure\";\r\n\r\ninterface ModalProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\ninterface ModalContextProps {\r\n  spinner: {\r\n    open: () => void;\r\n    close: () => void;\r\n  };\r\n  sucesso: {\r\n    open: ({ name, close, description }: sucessoProps) => void;\r\n    close: () => void;\r\n  };\r\n  paymentMethod: {\r\n    open: ({ card }: any) => void;\r\n    close: () => void;\r\n  };\r\n  filter: {\r\n    open: ({\r\n      changePrice,\r\n      changeDistance,\r\n      currentPrice,\r\n      currentDistance,\r\n    }: FiltroProps) => void;\r\n    close: () => void;\r\n  };\r\n  areYouSure: {\r\n    open: ({ close, message, sureFunction }: AreYouSureProps) => void;\r\n    close: () => void;\r\n  };\r\n}\r\n\r\nconst ModalContext = createContext({} as ModalContextProps);\r\n\r\nexport default function ModalProvider({ children }: ModalProviderProps) {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [modal, setModal] = useState<JSX.Element | null>(null);\r\n\r\n  function openModal(Modal: any) {\r\n    setModal(Modal);\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  let value = {\r\n    spinner: {\r\n      open: () => openModal(<Spinner />),\r\n      close: closeModal,\r\n    },\r\n    sucesso: {\r\n      open: ({ name, close, description }: sucessoProps) =>\r\n        openModal(\r\n          <CadastroSucesso\r\n            description={description}\r\n            name={name}\r\n            close={close}\r\n          />\r\n        ),\r\n      close: closeModal,\r\n    },\r\n    paymentMethod: {\r\n      open: ({ card }: any) => openModal(<PaymentMethod card={card} />),\r\n      close: closeModal,\r\n    },\r\n\r\n    filter: {\r\n      open: ({\r\n        changePrice,\r\n        changeDistance,\r\n        currentPrice,\r\n        currentDistance,\r\n      }: FiltroProps) =>\r\n        openModal(\r\n          <Filtro\r\n            changeDistance={changeDistance}\r\n            changePrice={changePrice}\r\n            currentDistance={currentDistance}\r\n            currentPrice={currentPrice}\r\n          />\r\n        ),\r\n      close: closeModal,\r\n    },\r\n\r\n    areYouSure: {\r\n      open: ({ close, message, sureFunction }: AreYouSureProps) =>\r\n        openModal(\r\n          <AreYouSure\r\n            close={close}\r\n            message={message}\r\n            sureFunction={sureFunction}\r\n          />\r\n        ),\r\n      close: closeModal,\r\n    },\r\n  } as ModalContextProps;\r\n\r\n  return (\r\n    <ModalContext.Provider value={value}>\r\n      {children}\r\n      {isModalOpen && modal}\r\n    </ModalContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useModal() {\r\n  return useContext(ModalContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}