{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\routes\\\\PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const {\n    authenticated\n  } = useAuth();\n\n  if (authenticated) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PrivateRoute, \"bQCfH9eGArgiSUkc5JVdk8s2VAA=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/routes/PrivateRoute.tsx"],"names":["Redirect","Route","useAuth","PrivateRoute","component","Component","rest","authenticated","props"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAA8D;AAAA;;AAC3E,QAAM;AAAEC,IAAAA;AAAF,MAAoBL,OAAO,EAAjC;;AAEA,MAAIK,aAAJ,EAAmB;AACjB,wBAAO,QAAC,KAAD,OAAWD,IAAX;AAAiB,MAAA,MAAM,EAAGE,KAAD,iBAAW,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GARuBL,Y;UACID,O;;;KADJC,Y","sourcesContent":["import { Redirect, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthProvider\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: any) {\r\n  const { authenticated } = useAuth();\r\n\r\n  if (authenticated) {\r\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n  }\r\n\r\n  return <Redirect to=\"/\" />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}