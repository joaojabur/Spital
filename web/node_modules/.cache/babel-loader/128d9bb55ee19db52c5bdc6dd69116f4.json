{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\components\\\\GreenButton\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { useShareAppointmentForm } from \"../../context/ShareAppointmentFormProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GreenButton = ({\n  label,\n  getMonth,\n  year,\n  monthDay,\n  nextPage\n}) => {\n  _s();\n\n  const {\n    appointmentData,\n    setAppointmentData\n  } = useShareAppointmentForm();\n  const [error, setError] = useState(\"\");\n  const month = getMonth();\n\n  function verifyAppointmentData() {\n    if (!(appointmentData === null || appointmentData === void 0 ? void 0 : appointmentData.type) || !(appointmentData === null || appointmentData === void 0 ? void 0 : appointmentData.time)) {\n      setError(\"Consulta ou horário não selecionado(s)\");\n    } else {\n      setError(\"\");\n      setAppointmentData({ ...appointmentData,\n        date: `${monthDay}/${month}/${year}`\n      });\n      nextPage();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: verifyAppointmentData,\n      className: \"green-button\",\n      type: \"button\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GreenButton, \"c+fCJr01cTTL0/YLTzu679qnLqM=\", false, function () {\n  return [useShareAppointmentForm];\n});\n\n_c = GreenButton;\nexport default GreenButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GreenButton\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/components/GreenButton/index.tsx"],"names":["React","useState","useShareAppointmentForm","GreenButton","label","getMonth","year","monthDay","nextPage","appointmentData","setAppointmentData","error","setError","month","verifyAppointmentData","type","time","date","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,SAASC,uBAAT,QAAwC,4CAAxC;;;;AAUA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,QAFmB;AAGnBC,EAAAA,IAHmB;AAInBC,EAAAA,QAJmB;AAKnBC,EAAAA;AALmB,CAAD,KAMQ;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA0CR,uBAAuB,EAAvE;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMY,KAAK,GAAGR,QAAQ,EAAtB;;AAEA,WAASS,qBAAT,GAAiC;AAC/B,QAAI,EAACL,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEM,IAAlB,KAA0B,EAACN,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEO,IAAlB,CAA9B,EAAsD;AACpDJ,MAAAA,QAAQ,CAAC,wCAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,MAAAA,kBAAkB,CAAC,EACjB,GAAGD,eADc;AAEjBQ,QAAAA,IAAI,EAAG,GAAEV,QAAS,IAAGM,KAAM,IAAGP,IAAK;AAFlB,OAAD,CAAlB;AAIAE,MAAAA,QAAQ;AACT;AACF;;AAED,sBACE;AAAA,eACGG,KAAK,CAACO,MAAN,KAAiB,CAAjB,gBACC;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAA,kBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJJ,eASE;AACE,MAAA,OAAO,EAAEG,qBADX;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA,gBAKGV;AALH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAmBD,CA5CD;;GAAMD,W;UAO4CD,uB;;;KAP5CC,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { useShareAppointmentForm } from \"../../context/ShareAppointmentFormProvider\";\r\n\r\ninterface GreenButtonInterface {\r\n  label: string;\r\n  getMonth: () => number;\r\n  year: string;\r\n  monthDay: string;\r\n  nextPage: () => void;\r\n}\r\n\r\nconst GreenButton = ({\r\n  label,\r\n  getMonth,\r\n  year,\r\n  monthDay,\r\n  nextPage,\r\n}: GreenButtonInterface) => {\r\n  const { appointmentData, setAppointmentData } = useShareAppointmentForm();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const month = getMonth();\r\n\r\n  function verifyAppointmentData() {\r\n    if (!appointmentData?.type || !appointmentData?.time) {\r\n      setError(\"Consulta ou horário não selecionado(s)\");\r\n    } else {\r\n      setError(\"\");\r\n      setAppointmentData({\r\n        ...appointmentData,\r\n        date: `${monthDay}/${month}/${year}`,\r\n      });\r\n      nextPage();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error.length === 0 ? (\r\n        <span></span>\r\n      ) : (\r\n        <div className=\"error-container\">\r\n          <span>{error}</span>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        onClick={verifyAppointmentData}\r\n        className=\"green-button\"\r\n        type=\"button\"\r\n      >\r\n        {label}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GreenButton;\r\n"]},"metadata":{},"sourceType":"module"}