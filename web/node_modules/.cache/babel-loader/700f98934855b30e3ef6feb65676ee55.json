{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\platform-pages\\\\HomeClient\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Categories from \"../../components/Categories\";\nimport DoctorList from \"../../components/DoctorList\";\nimport HeaderPlatform from \"../../components/HeaderPlatform\";\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\nimport api from \"../../services/api\";\nimport Geocode from \"react-geocode\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomeClient = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(0);\n  const [medics, setMedics] = useState([]);\n  const [location, setLocation] = useState(null);\n\n  async function loadMore() {\n    setLoading(true);\n    let {\n      data\n    } = await api.get(`medics?offset=${page}&lat=${location === null || location === void 0 ? void 0 : location.coords.latitude}&lon=${location === null || location === void 0 ? void 0 : location.coords.longitude}`);\n    data = data.map(medic => medic);\n    Geocode.fromLatLng(`${location === null || location === void 0 ? void 0 : location.coords.latitude}`, `${location === null || location === void 0 ? void 0 : location.coords.longitude}`).then(response => {\n      try {\n        const address = response.results;\n        console.log(address);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    setMedics(previousState => [...previousState, ...data]);\n    setPage(page + 1);\n    setLoading(false);\n  }\n\n  async function getUserLocation() {\n    if (navigator.geolocation) {\n      let permission = await navigator.permissions.query({\n        name: \"geolocation\"\n      });\n\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\n        navigator.geolocation.getCurrentPosition(pos => {\n          console.log(pos);\n          setLocation(pos);\n        }, () => {}, {\n          enableHighAccuracy: true\n        });\n      } else if (permission.state === \"denied\") {\n        console.log(\"Você precisa ativar sua localização\");\n      }\n\n      permission.onchange = () => {\n        console.log(\"Estado alterado\");\n        console.log(permission.state);\n      };\n    }\n  }\n\n  useEffect(() => {\n    getUserLocation();\n  }, []);\n  useEffect(() => {\n    loadMore();\n  }, [location]);\n  Geocode.setApiKey(\"AIzaSyAHU3nGBAYTXAVknTd_OZuyj2k9d9B0i98\");\n  Geocode.setLanguage(\"pt\");\n  Geocode.setRegion(\"br\");\n  Geocode.enableDebug();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-platform\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderPlatform, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoctorList, {\n        loading: loading,\n        medics: medics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n        onClick: loadMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeClient, \"guzJR2EeZdS8A/k9OxtTiH8+fwc=\");\n\n_c = HomeClient;\nexport default HomeClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeClient\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/platform-pages/HomeClient/index.tsx"],"names":["useState","useEffect","Categories","DoctorList","HeaderPlatform","LoadMoreButton","api","Geocode","HomeClient","loading","setLoading","page","setPage","medics","setMedics","location","setLocation","loadMore","data","get","coords","latitude","longitude","map","medic","fromLatLng","then","response","address","results","console","log","error","previousState","getUserLocation","navigator","geolocation","permission","permissions","query","name","state","getCurrentPosition","pos","enableHighAccuracy","onchange","setApiKey","setLanguage","setRegion","enableDebug"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Categories from \"../../components/Categories\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport HeaderPlatform from \"../../components/HeaderPlatform\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport api from \"../../services/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport \"./styles.css\";\r\n\r\nconst HomeClient = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  const [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n\r\n  async function loadMore() {\r\n    setLoading(true);\r\n    let { data } = await api.get(\r\n      `medics?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    Geocode.fromLatLng(\r\n      `${location?.coords.latitude}`,\r\n      `${location?.coords.longitude}`\r\n    ).then((response: any) => {\r\n      try {\r\n        const address = response.results;\r\n        console.log(address);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            console.log(pos);\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        console.log(\"Você precisa ativar sua localização\");\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n        console.log(permission.state);\r\n      };\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadMore();\r\n  }, [location]);\r\n\r\n  Geocode.setApiKey(\"AIzaSyAHU3nGBAYTXAVknTd_OZuyj2k9d9B0i98\");\r\n  Geocode.setLanguage(\"pt\");\r\n  Geocode.setRegion(\"br\");\r\n  Geocode.enableDebug();\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <HeaderPlatform />\r\n      <div className=\"container\">\r\n        <Categories />\r\n        <DoctorList loading={loading} medics={medics} />\r\n        <LoadMoreButton onClick={loadMore} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeClient;\r\n"]},"metadata":{},"sourceType":"module"}