{"ast":null,"code":"export default function validateNewPassword(credentials) {\n  var _credentials$password, _credentials$password2;\n\n  let errors = {};\n\n  if (!(credentials === null || credentials === void 0 ? void 0 : credentials.password) && 0) {\n    errors.password = \"Campo de senha é necessário\";\n  } else if (!(((_credentials$password = credentials === null || credentials === void 0 ? void 0 : (_credentials$password2 = credentials.password) === null || _credentials$password2 === void 0 ? void 0 : _credentials$password2.length) !== null && _credentials$password !== void 0 ? _credentials$password : 0) > 7)) {\n    errors.password = \"Senha muito pequena\";\n  }\n\n  if (!(credentials === null || credentials === void 0 ? void 0 : credentials.confirmPassword) && 0) {\n    errors.confirmPassword = \"Campo de confirmação de senha é necessário\";\n  } else if ((credentials === null || credentials === void 0 ? void 0 : credentials.confirmPassword) !== (credentials === null || credentials === void 0 ? void 0 : credentials.password)) {\n    errors.confirmPassword = \"Campos não batem\";\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/utils/validateNewPassword.ts"],"names":["validateNewPassword","credentials","errors","password","length","confirmPassword"],"mappings":"AAKA,eAAe,SAASA,mBAAT,CAA6BC,WAA7B,EAAuD;AAAA;;AACpE,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,EAACD,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEE,QAAd,KAA0B,CAA9B,EAAiC;AAC/BD,IAAAA,MAAM,CAACC,QAAP,GAAkB,6BAAlB;AACD,GAFD,MAEO,IAAI,EAAE,0BAACF,WAAD,aAACA,WAAD,iDAACA,WAAW,CAAEE,QAAd,2DAAC,uBAAuBC,MAAxB,yEAAkC,CAAlC,IAAuC,CAAzC,CAAJ,EAAiD;AACtDF,IAAAA,MAAM,CAACC,QAAP,GAAkB,qBAAlB;AACD;;AAED,MAAI,EAACF,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEI,eAAd,KAAiC,CAArC,EAAwC;AACtCH,IAAAA,MAAM,CAACG,eAAP,GAAyB,4CAAzB;AACD,GAFD,MAEO,IAAI,CAAAJ,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEI,eAAb,OAAiCJ,WAAjC,aAAiCA,WAAjC,uBAAiCA,WAAW,CAAEE,QAA9C,CAAJ,EAA4D;AACjED,IAAAA,MAAM,CAACG,eAAP,GAAyB,kBAAzB;AACD;;AAED,SAAOH,MAAP;AACD","sourcesContent":["interface newPassword {\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\nexport default function validateNewPassword(credentials: newPassword) {\r\n  let errors = {} as newPassword;\r\n\r\n  if (!credentials?.password && 0) {\r\n    errors.password = \"Campo de senha é necessário\";\r\n  } else if (!((credentials?.password?.length ?? 0) > 7)) {\r\n    errors.password = \"Senha muito pequena\";\r\n  }\r\n\r\n  if (!credentials?.confirmPassword && 0) {\r\n    errors.confirmPassword = \"Campo de confirmação de senha é necessário\";\r\n  } else if (credentials?.confirmPassword !== credentials?.password) {\r\n    errors.confirmPassword = \"Campos não batem\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}