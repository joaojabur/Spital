{"ast":null,"code":"export default function validateInfo(credentials) {\n  let errors = {};\n\n  if (credentials !== null) {\n    var _credentials$firstNam, _credentials$firstNam2, _credentials$lastName, _credentials$phoneNum, _phoneNumbers$length;\n\n    if ((_credentials$firstNam = !(credentials === null || credentials === void 0 ? void 0 : (_credentials$firstNam2 = credentials.firstName) === null || _credentials$firstNam2 === void 0 ? void 0 : _credentials$firstNam2.length)) !== null && _credentials$firstNam !== void 0 ? _credentials$firstNam : 0) {\n      errors.firstName = \"Campo de nome é necessário\";\n    }\n\n    if (!(credentials === null || credentials === void 0 ? void 0 : (_credentials$lastName = credentials.lastName) === null || _credentials$lastName === void 0 ? void 0 : _credentials$lastName.trim())) {\n      errors.lastName = \"Campo de sobrenome é necessário\";\n    }\n\n    if (!(credentials === null || credentials === void 0 ? void 0 : credentials.email)) {\n      errors.email = \"Campo de e-mail é necessário\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(credentials === null || credentials === void 0 ? void 0 : credentials.email)) {\n      errors.email = \"E-mail inválido\";\n    }\n\n    if (!(credentials === null || credentials === void 0 ? void 0 : credentials.password)) {\n      errors.password = \"Campo de senha é necessário\";\n    } else if ((credentials === null || credentials === void 0 ? void 0 : credentials.password.length) < 6) {\n      errors.password = \"A senha precisa de 6 ou mais caracteres\";\n    }\n\n    if (!(credentials === null || credentials === void 0 ? void 0 : credentials.confirmPassword)) {\n      errors.confirmPassword = \"Campo de confirmação de senha é necessário\";\n    } else if (credentials.confirmPassword !== credentials.password) {\n      errors.confirmPassword = \"As senhas não combinam\";\n    }\n\n    const phoneNumbers = credentials === null || credentials === void 0 ? void 0 : (_credentials$phoneNum = credentials.phoneNumber) === null || _credentials$phoneNum === void 0 ? void 0 : _credentials$phoneNum.replace(/[-.() ]/g, \"\");\n\n    if (isNaN(parseInt(phoneNumbers))) {\n      errors.phoneNumber = \"Número de telefone inválido\";\n    } else if (phoneNumbers.length !== 11) {\n      errors.phoneNumber = \"Número de telefone inválido\";\n    } else if ((_phoneNumbers$length = !phoneNumbers.length) !== null && _phoneNumbers$length !== void 0 ? _phoneNumbers$length : 0) {\n      errors.phoneNumber = \"Campo de telefone é necessário\";\n    }\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/utils/validateInfo.ts"],"names":["validateInfo","credentials","errors","firstName","length","lastName","trim","email","test","password","confirmPassword","phoneNumbers","phoneNumber","replace","isNaN","parseInt"],"mappings":"AAUA,eAAe,SAASA,YAAT,CAAsBC,WAAtB,EAAyC;AACtD,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAID,WAAW,KAAK,IAApB,EAAyB;AAAA;;AACvB,iCAAI,EAACA,WAAD,aAACA,WAAD,iDAACA,WAAW,CAAEE,SAAd,2DAAC,uBAAwBC,MAAzB,CAAJ,yEAAuC,CAAvC,EAA0C;AACxCF,MAAAA,MAAM,CAACC,SAAP,GAAmB,4BAAnB;AACD;;AAED,QAAI,EAACF,WAAD,aAACA,WAAD,gDAACA,WAAW,CAAEI,QAAd,0DAAC,sBAAuBC,IAAvB,EAAD,CAAJ,EAAoC;AAClCJ,MAAAA,MAAM,CAACG,QAAP,GAAkB,iCAAlB;AACD;;AAED,QAAI,EAACJ,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEM,KAAd,CAAJ,EAAyB;AACvBL,MAAAA,MAAM,CAACK,KAAP,GAAe,8BAAf;AACD,KAFD,MAEO,IACL,CAAC,2CAA2CC,IAA3C,CAAgDP,WAAhD,aAAgDA,WAAhD,uBAAgDA,WAAW,CAAEM,KAA7D,CADI,EAEL;AACAL,MAAAA,MAAM,CAACK,KAAP,GAAe,iBAAf;AACD;;AAED,QAAI,EAACN,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEQ,QAAd,CAAJ,EAA4B;AAC1BP,MAAAA,MAAM,CAACO,QAAP,GAAkB,6BAAlB;AACD,KAFD,MAEO,IAAI,CAAAR,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEQ,QAAb,CAAsBL,MAAtB,IAA+B,CAAnC,EAAsC;AAC3CF,MAAAA,MAAM,CAACO,QAAP,GAAkB,yCAAlB;AACD;;AAED,QAAI,EAACR,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAES,eAAd,CAAJ,EAAmC;AACjCR,MAAAA,MAAM,CAACQ,eAAP,GAAyB,4CAAzB;AACD,KAFD,MAEO,IAAIT,WAAW,CAACS,eAAZ,KAAgCT,WAAW,CAACQ,QAAhD,EAA0D;AAC/DP,MAAAA,MAAM,CAACQ,eAAP,GAAyB,wBAAzB;AACD;;AAED,UAAMC,YAAY,GAAGV,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEW,WAAhB,0DAAG,sBAA0BC,OAA1B,CAAkC,UAAlC,EAA8C,EAA9C,CAArB;;AAEA,QAAIC,KAAK,CAACC,QAAQ,CAACJ,YAAD,CAAT,CAAT,EAAmC;AACjCT,MAAAA,MAAM,CAACU,WAAP,GAAqB,6BAArB;AACD,KAFD,MAEO,IAAID,YAAY,CAACP,MAAb,KAAwB,EAA5B,EAAgC;AACrCF,MAAAA,MAAM,CAACU,WAAP,GAAqB,6BAArB;AACD,KAFM,MAEA,4BAAI,CAACD,YAAY,CAACP,MAAlB,uEAA4B,CAA5B,EAA+B;AACpCF,MAAAA,MAAM,CAACU,WAAP,GAAqB,gCAArB;AACD;AACF;;AAED,SAAOV,MAAP;AACD","sourcesContent":["interface User {\r\n  firstName: string,\r\n  lastName: string,\r\n  email: string,\r\n  password: string,\r\n  confirmPassword: string,\r\n  phoneNumber: string,\r\n  image: string,\r\n}\r\n\r\nexport default function validateInfo(credentials: User) {\r\n  let errors = {} as User;\r\n\r\n  if (credentials !== null){\r\n    if (!credentials?.firstName?.length ?? 0) {\r\n      errors.firstName = \"Campo de nome é necessário\";\r\n    }\r\n  \r\n    if (!credentials?.lastName?.trim()) {\r\n      errors.lastName = \"Campo de sobrenome é necessário\";\r\n    }\r\n  \r\n    if (!credentials?.email) {\r\n      errors.email = \"Campo de e-mail é necessário\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(credentials?.email)\r\n    ) {\r\n      errors.email = \"E-mail inválido\";\r\n    }\r\n  \r\n    if (!credentials?.password) {\r\n      errors.password = \"Campo de senha é necessário\";\r\n    } else if (credentials?.password.length < 6) {\r\n      errors.password = \"A senha precisa de 6 ou mais caracteres\";\r\n    }\r\n  \r\n    if (!credentials?.confirmPassword) {\r\n      errors.confirmPassword = \"Campo de confirmação de senha é necessário\";\r\n    } else if (credentials.confirmPassword !== credentials.password) {\r\n      errors.confirmPassword = \"As senhas não combinam\";\r\n    }\r\n  \r\n    const phoneNumbers = credentials?.phoneNumber?.replace(/[-.() ]/g, \"\");\r\n    \r\n    if (isNaN(parseInt(phoneNumbers))) {\r\n      errors.phoneNumber = \"Número de telefone inválido\";\r\n    } else if (phoneNumbers.length !== 11) {\r\n      errors.phoneNumber = \"Número de telefone inválido\";\r\n    } else if (!phoneNumbers.length ?? 0) {\r\n      errors.phoneNumber = \"Campo de telefone é necessário\";\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}