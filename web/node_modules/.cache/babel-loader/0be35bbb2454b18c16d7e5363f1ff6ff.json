{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\platform-pages\\\\MedicArea\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useParams } from \"react-router-dom\";\nimport SearchInput from \"../../components/SearchInput\";\nimport api from \"../../services/api\";\nimport { useEffect, useState } from \"react\";\nimport DoctorList from \"../../components/DoctorList\";\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\nimport SubHeaderPlatform from \"../../components/SubHeaderPlatform\";\nimport { useHistory } from \"react-router-dom\";\nimport { IoFilterOutline } from \"react-icons/io5\";\nimport { useModal } from \"../../context/ModalProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicArea = () => {\n  _s();\n\n  const {\n    filter\n  } = useModal();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(0);\n  const [medics, setMedics] = useState([]);\n  const [location, setLocation] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(500);\n  const [maxDistance, setMaxDistance] = useState(100);\n\n  function changePrice(price) {\n    setMaxPrice(price);\n  }\n\n  function changeDistance(distance) {\n    setMaxDistance(distance);\n  }\n\n  async function loadMore() {\n    let {\n      data\n    } = await api.get(`medics/${capitalizeArea}?offset=${page}&lat=${location === null || location === void 0 ? void 0 : location.coords.latitude}&lon=${location === null || location === void 0 ? void 0 : location.coords.longitude}&distance=${maxDistance}`);\n    data = data.map(medic => medic);\n    setMedics(previousState => [...previousState, ...data]);\n    setPage(page + 1);\n    setLoading(false);\n  }\n\n  async function reload() {\n    let {\n      data\n    } = await api.get(`medics/${capitalizeArea}?lat=${location === null || location === void 0 ? void 0 : location.coords.latitude}&lon=${location === null || location === void 0 ? void 0 : location.coords.longitude}&distance=${maxDistance}`);\n    data = data.map(medic => medic);\n    setMedics(data);\n    setPage(1);\n    setLoading(false);\n  }\n\n  async function getUserLocation() {\n    if (navigator.geolocation) {\n      let permission = await navigator.permissions.query({\n        name: \"geolocation\"\n      });\n\n      if (permission.state === 'granted' || permission.state === 'prompt') {\n        navigator.geolocation.getCurrentPosition(pos => {\n          setLocation(pos);\n        }, () => {}, {\n          enableHighAccuracy: true\n        });\n      } else if (permission.state === 'denied') {\n        //\n        console.log(\"Você precisa ativar sua localização\");\n      }\n\n      permission.onchange = () => {\n        console.log(\"Estado alterado\");\n        console.log(permission.state);\n      };\n    }\n  }\n\n  const {\n    area\n  } = useParams();\n  let capitalizeArea = area.charAt(0).toUpperCase() + area.slice(1);\n\n  if (capitalizeArea === \"Alergistas-e-imunologista\") {\n    capitalizeArea = \"Alergista-e-Imunologista\";\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getUserLocation();\n  }, [capitalizeArea]);\n  useEffect(() => {\n    if ((location === null || location === void 0 ? void 0 : location.coords.latitude) !== undefined) {\n      reload();\n    }\n  }, [location, maxPrice, maxDistance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-platform\",\n    children: [/*#__PURE__*/_jsxDEV(SubHeaderPlatform, {\n      title: `Busque os melhores ${area}s da sua região!`,\n      returnFunction: () => history.goBack()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-flex-input\",\n          children: /*#__PURE__*/_jsxDEV(SearchInput, {\n            placeholder: \"Busque pelo nome do m\\xE9dico...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => filter.open({\n            changePrice,\n            changeDistance,\n            currentDistance: maxDistance,\n            currentPrice: maxPrice\n          }),\n          className: \"search-flex-filter-button\",\n          children: /*#__PURE__*/_jsxDEV(IoFilterOutline, {\n            size: 22,\n            color: \"#000000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoctorList, {\n        medics: medics,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n        onClick: loadMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MedicArea, \"Z+3LqiSF2AlAc9KqT6n5hopfXIU=\", false, function () {\n  return [useModal, useHistory, useParams];\n});\n\n_c = MedicArea;\nexport default MedicArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicArea\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/platform-pages/MedicArea/index.tsx"],"names":["useParams","SearchInput","api","useEffect","useState","DoctorList","LoadMoreButton","SubHeaderPlatform","useHistory","IoFilterOutline","useModal","MedicArea","filter","history","loading","setLoading","page","setPage","medics","setMedics","location","setLocation","maxPrice","setMaxPrice","maxDistance","setMaxDistance","changePrice","price","changeDistance","distance","loadMore","data","get","capitalizeArea","coords","latitude","longitude","map","medic","previousState","reload","getUserLocation","navigator","geolocation","permission","permissions","query","name","state","getCurrentPosition","pos","enableHighAccuracy","console","log","onchange","area","charAt","toUpperCase","slice","undefined","goBack","open","currentDistance","currentPrice"],"mappings":"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","sourcesContent":["import \"./styles.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SearchInput from \"../../components/SearchInput\";\r\nimport api from \"../../services/api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport SubHeaderPlatform from \"../../components/SubHeaderPlatform\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IoFilterOutline } from \"react-icons/io5\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\ninterface ParamTypes {\r\n  area: string;\r\n}\r\n\r\nconst MedicArea = () => {\r\n  const { filter } = useModal();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  const [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n\r\n  const [maxPrice, setMaxPrice] = useState<number>(500);\r\n  const [maxDistance, setMaxDistance] = useState<number>(100);\r\n\r\n  function changePrice(price: number){\r\n    setMaxPrice(price);\r\n  }\r\n\r\n  function changeDistance(distance: number){\r\n    setMaxDistance(distance);\r\n  }\r\n\r\n  async function loadMore() {\r\n    let { data } = await api.get(`medics/${capitalizeArea}?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}`);\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function reload(){\r\n    let { data } = await api.get(`medics/${capitalizeArea}?lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}`);\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics(data);\r\n    setPage(1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation){\r\n      let permission = await navigator.permissions.query({ name: \"geolocation\"});\r\n\r\n      if (permission.state === 'granted' || permission.state === 'prompt'){\r\n        navigator.geolocation.getCurrentPosition((pos: GeolocationPosition) => {\r\n          setLocation(pos);\r\n        }, () => {}, { enableHighAccuracy: true});\r\n      } else if (permission.state === 'denied') {\r\n        //\r\n        console.log(\"Você precisa ativar sua localização\")\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\")\r\n        console.log(permission.state);\r\n      };\r\n    }\r\n  }\r\n\r\n  const { area } = useParams<ParamTypes>();\r\n\r\n  let capitalizeArea = area.charAt(0).toUpperCase() + area.slice(1);\r\n  if (capitalizeArea === \"Alergistas-e-imunologista\") {\r\n    capitalizeArea = \"Alergista-e-Imunologista\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUserLocation()\r\n  }, [capitalizeArea]);\r\n\r\n  useEffect(() => {\r\n    if (location?.coords.latitude !== undefined){\r\n      reload();\r\n    }\r\n  }, [location, maxPrice, maxDistance])\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Busque os melhores ${area}s da sua região!`}\r\n        returnFunction={() => history.goBack()}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"search-flex\">\r\n          <div className=\"search-flex-input\">\r\n            <SearchInput placeholder=\"Busque pelo nome do médico...\" />\r\n          </div>\r\n          <div onClick={() => filter.open({changePrice, changeDistance, currentDistance: maxDistance, currentPrice: maxPrice})} className=\"search-flex-filter-button\">\r\n            <IoFilterOutline size={22} color=\"#000000\" />\r\n          </div>\r\n        </div>\r\n\r\n        <DoctorList medics={medics} loading={loading}/>\r\n        <LoadMoreButton onClick={loadMore}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicArea;\r\n"]},"metadata":{},"sourceType":"module"}