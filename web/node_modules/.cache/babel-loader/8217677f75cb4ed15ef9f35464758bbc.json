{"ast":null,"code":"export default function validateCard(credentials) {\n  var _credentials$card_num, _card_number_formatte, _card_number_formatte2, _credentials$card_exp, _card_expiration_date, _card_expiration_date2, _credentials$card_cvv, _credentials$card_cvv2, _credentials$card_cvv3, _credentials$card_hol;\n\n  let errors = {};\n  const card_number_formatted = credentials === null || credentials === void 0 ? void 0 : (_credentials$card_num = credentials.card_number) === null || _credentials$card_num === void 0 ? void 0 : _credentials$card_num.replace(/[ ]/g, \"\");\n\n  if ((_card_number_formatte = !card_number_formatted.length) !== null && _card_number_formatte !== void 0 ? _card_number_formatte : 0) {\n    errors.card_number = \"Campo de número do cartão é necessário\";\n  } else if (isNaN(parseInt(card_number_formatted))) {\n    errors.card_number = \"Número do cartão inválido\";\n  } else if (!(((_card_number_formatte2 = card_number_formatted === null || card_number_formatted === void 0 ? void 0 : card_number_formatted.length) !== null && _card_number_formatte2 !== void 0 ? _card_number_formatte2 : 0) === 16)) {\n    errors.card_number = \"Campo de número de cartão inválido\";\n  }\n\n  const card_expiration_date_formatted = credentials === null || credentials === void 0 ? void 0 : (_credentials$card_exp = credentials.card_expiration_date) === null || _credentials$card_exp === void 0 ? void 0 : _credentials$card_exp.replace(/[/]/g, \"\");\n\n  if ((_card_expiration_date = !card_expiration_date_formatted.length) !== null && _card_expiration_date !== void 0 ? _card_expiration_date : 0) {\n    errors.card_expiration_date = \"Campo de data de validade é necessário\";\n  } else if (isNaN(parseInt(card_expiration_date_formatted))) {\n    errors.card_expiration_date = \"Data de validade é composta por números\";\n  } else if (!(((_card_expiration_date2 = card_expiration_date_formatted === null || card_expiration_date_formatted === void 0 ? void 0 : card_expiration_date_formatted.length) !== null && _card_expiration_date2 !== void 0 ? _card_expiration_date2 : 0) === 4)) {\n    errors.card_number = \"Campo de número de cartão inválido\";\n  }\n\n  if (isNaN(parseInt(credentials === null || credentials === void 0 ? void 0 : credentials.card_cvv))) {\n    errors.card_cvv = \"CVV é composto por números\";\n  } else if ((_credentials$card_cvv = !(credentials === null || credentials === void 0 ? void 0 : credentials.card_cvv.length)) !== null && _credentials$card_cvv !== void 0 ? _credentials$card_cvv : 0) {\n    errors.card_cvv = \"Campo de CVV é necessário\";\n  } else if (!(((_credentials$card_cvv2 = credentials === null || credentials === void 0 ? void 0 : (_credentials$card_cvv3 = credentials.card_cvv) === null || _credentials$card_cvv3 === void 0 ? void 0 : _credentials$card_cvv3.length) !== null && _credentials$card_cvv2 !== void 0 ? _credentials$card_cvv2 : 0) === 3)) {\n    errors.card_number = \"Campo de número de cartão inválido\";\n  }\n\n  if ((_credentials$card_hol = !(credentials === null || credentials === void 0 ? void 0 : credentials.card_holder_name.length)) !== null && _credentials$card_hol !== void 0 ? _credentials$card_hol : 0) {\n    errors.card_holder_name = \"Campo de nome é necessário\";\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/utils/validateCard.ts"],"names":["validateCard","credentials","errors","card_number_formatted","card_number","replace","length","isNaN","parseInt","card_expiration_date_formatted","card_expiration_date","card_cvv","card_holder_name"],"mappings":"AAQA,eAAe,SAASA,YAAT,CAAsBC,WAAtB,EAAyC;AAAA;;AACtD,MAAIC,MAAM,GAAG,EAAb;AAEA,QAAMC,qBAAqB,GAAGF,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEG,WAAhB,0DAAG,sBAA0BC,OAA1B,CAAkC,MAAlC,EAA0C,EAA1C,CAA9B;;AAEA,+BAAI,CAACF,qBAAqB,CAACG,MAA3B,yEAAqC,CAArC,EAAwC;AACtCJ,IAAAA,MAAM,CAACE,WAAP,GAAqB,wCAArB;AACD,GAFD,MAEO,IAAIG,KAAK,CAACC,QAAQ,CAACL,qBAAD,CAAT,CAAT,EAA4C;AACjDD,IAAAA,MAAM,CAACE,WAAP,GAAqB,2BAArB;AACD,GAFM,MAEA,IAAI,EAAE,2BAACD,qBAAD,aAACA,qBAAD,uBAACA,qBAAqB,CAAEG,MAAxB,2EAAkC,CAAlC,MAAyC,EAA3C,CAAJ,EAAoD;AACzDJ,IAAAA,MAAM,CAACE,WAAP,GAAqB,oCAArB;AACD;;AAED,QAAMK,8BAA8B,GAClCR,WADkC,aAClCA,WADkC,gDAClCA,WAAW,CAAES,oBADqB,0DAClC,sBAAmCL,OAAnC,CAA2C,MAA3C,EAAmD,EAAnD,CADF;;AAGA,+BAAI,CAACI,8BAA8B,CAACH,MAApC,yEAA8C,CAA9C,EAAiD;AAC/CJ,IAAAA,MAAM,CAACQ,oBAAP,GAA8B,wCAA9B;AACD,GAFD,MAEO,IAAIH,KAAK,CAACC,QAAQ,CAACC,8BAAD,CAAT,CAAT,EAAqD;AAC1DP,IAAAA,MAAM,CAACQ,oBAAP,GAA8B,yCAA9B;AACD,GAFM,MAEA,IAAI,EAAE,2BAACD,8BAAD,aAACA,8BAAD,uBAACA,8BAA8B,CAAEH,MAAjC,2EAA2C,CAA3C,MAAkD,CAApD,CAAJ,EAA4D;AACjEJ,IAAAA,MAAM,CAACE,WAAP,GAAqB,oCAArB;AACD;;AAED,MAAIG,KAAK,CAACC,QAAQ,CAACP,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEU,QAAd,CAAT,CAAT,EAA4C;AAC1CT,IAAAA,MAAM,CAACS,QAAP,GAAkB,4BAAlB;AACD,GAFD,MAEO,6BAAI,EAACV,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEU,QAAb,CAAsBL,MAAvB,CAAJ,yEAAqC,CAArC,EAAwC;AAC7CJ,IAAAA,MAAM,CAACS,QAAP,GAAkB,2BAAlB;AACD,GAFM,MAEA,IAAI,EAAE,2BAACV,WAAD,aAACA,WAAD,iDAACA,WAAW,CAAEU,QAAd,2DAAC,uBAAuBL,MAAxB,2EAAkC,CAAlC,MAAyC,CAA3C,CAAJ,EAAmD;AACxDJ,IAAAA,MAAM,CAACE,WAAP,GAAqB,oCAArB;AACD;;AAED,+BAAI,EAACH,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEW,gBAAb,CAA8BN,MAA/B,CAAJ,yEAA6C,CAA7C,EAAgD;AAC9CJ,IAAAA,MAAM,CAACU,gBAAP,GAA0B,4BAA1B;AACD;;AAED,SAAOV,MAAP;AACD","sourcesContent":["interface Card {\r\n  card_number: string;\r\n  card_holder_name: string;\r\n  card_expiration_date: string;\r\n  card_cvv: string;\r\n  client_id: string;\r\n}\r\n\r\nexport default function validateCard(credentials: Card) {\r\n  let errors = {} as Card;\r\n\r\n  const card_number_formatted = credentials?.card_number?.replace(/[ ]/g, \"\");\r\n\r\n  if (!card_number_formatted.length ?? 0) {\r\n    errors.card_number = \"Campo de número do cartão é necessário\";\r\n  } else if (isNaN(parseInt(card_number_formatted))) {\r\n    errors.card_number = \"Número do cartão inválido\";\r\n  } else if (!((card_number_formatted?.length ?? 0) === 16)) {\r\n    errors.card_number = \"Campo de número de cartão inválido\";\r\n  }\r\n\r\n  const card_expiration_date_formatted =\r\n    credentials?.card_expiration_date?.replace(/[/]/g, \"\");\r\n\r\n  if (!card_expiration_date_formatted.length ?? 0) {\r\n    errors.card_expiration_date = \"Campo de data de validade é necessário\";\r\n  } else if (isNaN(parseInt(card_expiration_date_formatted))) {\r\n    errors.card_expiration_date = \"Data de validade é composta por números\";\r\n  } else if (!((card_expiration_date_formatted?.length ?? 0) === 4)) {\r\n    errors.card_number = \"Campo de número de cartão inválido\";\r\n  }\r\n\r\n  if (isNaN(parseInt(credentials?.card_cvv))) {\r\n    errors.card_cvv = \"CVV é composto por números\";\r\n  } else if (!credentials?.card_cvv.length ?? 0) {\r\n    errors.card_cvv = \"Campo de CVV é necessário\";\r\n  } else if (!((credentials?.card_cvv?.length ?? 0) === 3)) {\r\n    errors.card_number = \"Campo de número de cartão inválido\";\r\n  }\r\n\r\n  if (!credentials?.card_holder_name.length ?? 0) {\r\n    errors.card_holder_name = \"Campo de nome é necessário\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}