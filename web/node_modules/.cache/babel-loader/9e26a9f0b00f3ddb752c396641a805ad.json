{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Spital\\\\web\\\\src\\\\components\\\\FormMedic\\\\Steps\\\\Credentials.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { IconButton } from \"@material-ui/core\";\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicCredentials = ({\n  nextPage,\n  previousPage\n}) => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const {\n    medicData,\n    setMedicData\n  } = useShareFormMedic();\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\n  useEffect(() => {\n    setErrors(validateMedicInfo(medicData));\n  }, [medicData]);\n\n  function handleShowPassword() {\n    setShowPassword(!showPassword);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Credenciais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          handleShowPassword();\n        },\n        className: \"show-password-button\",\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: showPassword ? \"Esconder senha\" : \"Mostrar senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"email90@gmail.com\",\n      value: medicData === null || medicData === void 0 ? void 0 : medicData.email,\n      name: \"email\",\n      label: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"1.5rem\"\n        },\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this),\n      variant: \"outlined\",\n      fullWidth: true,\n      autoComplete: \"off\",\n      type: \"email\",\n      onChange: e => {\n        setMedicData({ ...medicData,\n          email: e.target.value\n        });\n      },\n      error: (errors === null || errors === void 0 ? void 0 : errors.email) ? true : false,\n      helperText: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"1rem\"\n        },\n        children: errors === null || errors === void 0 ? void 0 : errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"*********\",\n      value: medicData === null || medicData === void 0 ? void 0 : medicData.password,\n      name: \"password\",\n      label: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"1.5rem\"\n        },\n        children: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }, this),\n      variant: \"outlined\",\n      fullWidth: true,\n      autoComplete: \"off\",\n      style: {\n        marginTop: \"1rem\"\n      },\n      type: showPassword ? \"text\" : \"password\",\n      onChange: e => {\n        setMedicData({ ...medicData,\n          password: e.target.value\n        });\n      },\n      error: (errors === null || errors === void 0 ? void 0 : errors.password) ? true : false,\n      helperText: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"1rem\"\n        },\n        children: errors === null || errors === void 0 ? void 0 : errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"*********\",\n      value: medicData === null || medicData === void 0 ? void 0 : medicData.confirmPassword,\n      name: \"confirmPassword\",\n      label: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"1.5rem\"\n        },\n        children: \"Confirmar Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this),\n      variant: \"outlined\",\n      fullWidth: true,\n      style: {\n        marginTop: \"1rem\"\n      },\n      type: showPassword ? \"text\" : \"password\",\n      onChange: e => {\n        setMedicData({ ...medicData,\n          confirmPassword: e.target.value\n        });\n      },\n      error: (errors === null || errors === void 0 ? void 0 : errors.confirmPassword) ? true : false,\n      helperText: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: \"1rem\"\n        },\n        children: errors === null || errors === void 0 ? void 0 : errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"secondary\",\n      onClick: e => previousPage(),\n      children: \"Anterior\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary\",\n      onClick: e => nextPage(),\n      children: \"Pr\\xF3ximo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MedicCredentials, \"U8vac7iqYXhJWGWYJsbnWVW6ONk=\", false, function () {\n  return [useShareFormMedic];\n});\n\n_c = MedicCredentials;\nexport default MedicCredentials;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicCredentials\");","map":{"version":3,"sources":["C:/Projetos/Spital/web/src/components/FormMedic/Steps/Credentials.tsx"],"names":["useState","useEffect","TextField","IconButton","validateMedicInfo","useShareFormMedic","MedicCredentials","nextPage","previousPage","showPassword","setShowPassword","medicData","setMedicData","errors","setErrors","handleShowPassword","email","fontSize","e","target","value","password","marginTop","confirmPassword"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicCredentialsProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicCredentials = ({ nextPage, previousPage}: MedicCredentialsProps) => {\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { medicData, setMedicData }= useShareFormMedic();\r\n  const [ errors, setErrors ] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [ medicData ])\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <div className=\"form-container-flex\">\r\n        <h2>Credenciais</h2>\r\n        <IconButton\r\n          onClick={() => {\r\n            handleShowPassword();\r\n          }}\r\n          className=\"show-password-button\"\r\n          color=\"primary\"\r\n        >\r\n          <span>{showPassword ? \"Esconder senha\" : \"Mostrar senha\"}</span>\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        placeholder=\"email90@gmail.com\"\r\n        value={medicData?.email}\r\n        name=\"email\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        autoComplete=\"off\"\r\n        type=\"email\"\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, email: e.target.value });\r\n        }}\r\n        error={errors?.email ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.email}</span>}\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"*********\"\r\n        value={medicData?.password}\r\n        name=\"password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        autoComplete=\"off\"\r\n        style={{ marginTop: \"1rem\" }}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, password: e.target.value });\r\n        }}\r\n        error={errors?.password ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.password}</span>}\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"*********\"\r\n        value={medicData?.confirmPassword}\r\n        name=\"confirmPassword\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Confirmar Senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        style={{ marginTop: \"1rem\" }}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, confirmPassword: e.target.value });\r\n        }}\r\n        error={errors?.confirmPassword ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.confirmPassword}</span>\r\n        }\r\n      />\r\n\r\n      <button className=\"secondary\" \r\n        onClick={(e) => previousPage()}>\r\n          Anterior\r\n      </button>\r\n      <button className=\"primary\"\r\n        onClick={(e) => nextPage()}>\r\n          Próximo\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicCredentials;\r\n"]},"metadata":{},"sourceType":"module"}