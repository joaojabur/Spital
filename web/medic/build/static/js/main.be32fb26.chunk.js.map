{"version":3,"sources":["services/api.ts","context/AuthProvider.tsx","routes/PublicRoute.tsx","components/Benefits/index.tsx","assets/images/logo.svg","components/Header/index.tsx","components/LeftSideBenefit/index.tsx","assets/images/doctor.svg","components/Presentation/index.tsx","components/Title/index.tsx","assets/images/booking.svg","assets/images/checkbox.svg","assets/images/interview.svg","assets/images/wallet.svg","components/RightSideBenefit/index.tsx","components/Tax/index.tsx","components/Refund/index.tsx","assets/icons/apple.svg","assets/icons/google-play.svg","components/Footer/index.tsx","pages/LandingPage/index.tsx","assets/icons/return.svg","components/MainHeader/index.tsx","components/Modals/Overlay/index.tsx","components/Modals/CadastroSucesso/index.tsx","components/Modals/Spinner/index.tsx","context/ModalProvider.tsx","pages/LoginPage/index.tsx","utils/validateCpf.ts","utils/convertHourToMinute.ts","utils/validateMedicInfo.ts","utils/mask.js","context/ShareMedicFormProvider.tsx","components/Form/Steps/Names.tsx","components/Form/Steps/Credentials.tsx","components/Select/index.tsx","components/Form/Steps/AcademicData.tsx","components/Form/Steps/PersonalData.tsx","components/Form/Steps/Schedule.tsx","utils/HashPassword.js","components/Form/Steps/Review.tsx","pages/RegisterMedic/index.tsx","assets/images/email.svg","pages/ConfirmEmail/index.tsx","assets/images/verified.svg","pages/VerifyEmail/index.tsx","routes/PrivateRoute.tsx","components-platform/HorizontalHeader/index.tsx","assets/icons/medicine.png","components-platform/VerticalHeader/index.tsx","platform-pages/Agenda/index.tsx","components/Box/index.tsx","components/Stars/index.tsx","platform-pages/Profile/index.tsx","platform-pages/Appointments/index.tsx","platform-pages/Configurations/index.tsx","context/ShareMedicConfigureFormProvider.tsx","utils/validateConfigureMedic.ts","components-platform/ConfigureMedicPages/AppointmentInfo/index.tsx","components-platform/ConfigureMedicPages/BankData/index.tsx","components-platform/ConfigureMedicPages/ClinicAddress/index.tsx","components-platform/ConfigureMedicPages/InvoiceAddress/index.tsx","assets/images/schedule-meeting.svg","components-platform/ConfigureMedicPages/Landing/index.tsx","assets/images/happy.svg","components-platform/ConfigureMedicPages/Success/index.tsx","platform-pages/ConfigureMedic/index.tsx","utils/validateNewPassword.ts","pages/RecoverPassword/index.tsx","pages/ForgetPassword/index.tsx","assets/images/404.svg","platform-pages/404/index.tsx","utils/validateRefreshConsult.ts","platform-pages/ConfigurationsConsult/index.tsx","utils/validateRefreshAddress.ts","platform-pages/ConfigurationsAddress/index.tsx","utils/validateRefreshSchedule.ts","platform-pages/ConfigurationsMedicSchedule/index.tsx","routes/Router.tsx","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","history","useHistory","useState","user","setUser","userID","setUserID","confirmed","setConfirmed","loading","setLoading","getUserData","id","a","get","response","data","replace","Cookies","remove","window","location","reload","email","password","post","token","set","Error","error","message","headers","Authorization","auth","useEffect","loginWithToken","value","authenticated","signup","login","logout","Provider","useAuth","useContext","PublicRoute","Component","component","rest","to","render","props","Benefits","className","label","map","list","index","links","goTo","icon","style","marginLeft","color","size","Header","link","display","src","logo","alt","LeftSideBenefit","title","image","description","Presentation","doctorImg","onClick","push","Title","RightSideBenefit","Tax","Refund","Footer","apple","marginTop","googlePlay","LandingPage","booking","interview","checkbox","wallet","MainHeader","subTitle","returnFunction","returnIcon","e","Overlay","CadastroSucesso","name","close","Spinner","type","height","width","ModalContext","ModalProvider","isModalOpen","setIsModalOpen","modal","setModal","openModal","Modal","closeModal","spinner","open","sucesso","useModal","LoginPage","setError","preventDefault","showPassword","setShowPassword","IconButton","TextField","fullWidth","onChange","target","variant","fontSize","placeholder","fontWeight","position","top","validateCPF","cpf","getDigit","lastDigit","i","length","parseInt","validatedCpf","substring","convertHourToMinutes","time","split","Number","validateMedicInfo","credentials","errors","schedule","Array","firstName","lastName","test","confirmPassword","phoneNumbers","phoneNumber","isNaN","area","graduation","masterDegree","doctorateDegree","crm","cpfNumbers","rg","rgNumbers","birthDate","year","Date","getFullYear","month","getMonth","day","getDate","appointment","from","mask","pattern","v","toString","ShareMedicFormContext","ShareClientFormProvider","week_day","medicData","setMedicData","useShareFormMedic","MedicNames","nextPage","previousPage","setErrors","autoComplete","required","helperText","MedicCredentials","Select","options","disabled","hidden","option","MedicAcademicData","areaOptions","previousState","MedicPersonalData","MedicSchedule","console","log","weekDays","setScheduleItemValue","field","newScheduleItem","scheduleItem","margin","textAlign","newScheduleItems","findIndex","item","splice","deleteScheduleItem","getPasswordAsterisk","RenderAccordion","summary","medicInfo","changePage","Accordion","AccordionSummary","expandIcon","AccordionDetails","ListItemText","marginRight","info","MedicReview","setIsThereBackendError","backendError","setBackEndError","isLoading","setIsLoading","agreement","setAgreement","Object","values","setHasError","xp","then","success","hasError","hashedPassword","formatedBirthDate","left","FormControlLabel","control","Checkbox","checked","cursor","timeout","RegisterMedicalSpitalNames","currentPage","setCurrentPage","pages","ConfirmEmail","VerifyEmail","useParams","status","setTimeout","sendEmailVerification","verified","PrivateRoute","HorizontalHeader","VerticalHeader","colorIcon","items","transition","medicine","marginBottom","AgendaComponent","appointments","setAppointments","date","hour","minutes","appointmentsCopy","Subject","StartTime","EndTime","configured","eventSettings","dataSource","actionBegin","services","Day","Week","WorkWeek","Month","Agenda","DragAndDrop","Resize","Box","Stars","rating","background","stars","star","Math","random","slice","id2","percentage","clipPath","backgroundClip","zIndex","Profile","setSchedule","today_week_day","filter","getWeekday","flexDirection","alignItems","padding","string","formatedFrom","formatedTo","hours","min","hoursTo","minutesTo","minTo","PinDropOutlined","address","justifyContent","ListOutlined","StraightenOutlined","lat","lon","ExploreOutlined","toFixed","doctorageDegree","Appointments","rows","setRows","backgroundColor","columns","headerName","pageSize","checkboxSelection","onCellClick","Configurations","consults","setConsults","medicSchedule","setMedicSchedule","loadingConsults","setLoadingConsults","number","consult","price","dayNumber","getWeekDay","totalFromHour","totalFromMinute","formattedTotalFromMinute","FromMinute","totalToHour","totalToMinute","formattedTotalToMinute","ToMinute","ShareMedicConfigureFormContext","bankData","bankNumber","agencyNumber","accountNumber","accountCheckNumber","fullName","invoiceAddress","street","streetNumber","district","zipCode","city","state","medicDataConfigure","setMedicDataConfigure","useShareFormMedicConfigure","refreshUserValidate","complement","AppointmentInfo","appointmentError","setAppointmentError","validateConfigureMedic","setAppointmentItemValue","newAppointmentItems","BankData","ClinicAddress","handleSelect","onSelect","getInputProps","suggestions","getSuggestionItemProps","suggestion","active","border","InvoiceAddress","medicID","setMedicID","defaultValue","moipAccountId","accessToken","res","catch","err","Landing","scheduleMeeting","Success","happyImg","ConfigureMedic","goBack","validateNewPassword","RecoverPassword","isValid","setIsValid","newPassword","setNewPassword","validate","verifyToken","useCallback","put","onSubmit","ForgetPassword","setEmail","successfull","setSuccesfull","Page404","image404","refreshConsultValidate","ConfigurationsConsult","refreshConsult","setRefreshConsult","formError","setFormError","refreshAddressValidate","ConfigurationsAddress","addressID","setAddressID","refreshAddress","setRefreshAddress","geocodeByAddress","refreshScheduleValidate","ConfigurationsMedicSchedule","refreshSchedule","setRefreshSchedule","fromHour","fromMinute","TotalFromMinute","toHour","toMinute","TotalToMinute","Router","exact","path","RegisterMedic","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be32fb26.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL =\r\n  process.env.NODE_ENV === \"production\" ? \"/api/\" : \"http://localhost:3333/\";\r\n\r\nconst api = axios.create({\r\n  baseURL,\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, useEffect, createContext, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../services/api\";\r\nimport Cookies from \"js-cookie\";\r\n\r\ninterface Medic {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n  image: string;\r\n  xp: number;\r\n  confirmed: boolean;\r\n  configured: boolean;\r\n  birthDate: Date;\r\n  crm: string;\r\n  area: string;\r\n  graduation: string;\r\n  masterDegree?: string;\r\n  doctorageDegree?: string;\r\n  id: number;\r\n  userID: number;\r\n  rating: string;\r\n  location: {\r\n    address: string;\r\n    lat: string;\r\n    lon: string;\r\n    number: number;\r\n  };\r\n}\r\n\r\ninterface MedicData {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  phoneNumber: string;\r\n  area: string;\r\n  graduation: string;\r\n  masterDegree: string;\r\n  configured: boolean;\r\n  doctorateDegree: string;\r\n  cpf: string;\r\n  rg: string;\r\n  birthDate: string;\r\n  crm: string;\r\n  schedule: Array<Schedule>;\r\n  xp: 0;\r\n  location: {\r\n    address: string;\r\n    lat: string;\r\n    lon: string;\r\n    number: number;\r\n  };\r\n}\r\n\r\ninterface Schedule {\r\n  week_day: number;\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\ninterface AuthContextData {\r\n  user: Medic;\r\n  authenticated: boolean;\r\n  login: (email: string, password: string) => any;\r\n  signup: (medic: MedicData) => Promise<any>;\r\n  logout: () => void;\r\n  confirmed: boolean;\r\n  userID: number;\r\n}\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AuthContext = createContext({} as AuthContextData);\r\n\r\nexport default function AuthProvider({ children }: AuthProviderProps) {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState<Medic | null>(null);\r\n  const [userID, setUserID] = useState<number | null>(null);\r\n  const [confirmed, setConfirmed] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  async function getUserData(id: number) {\r\n    try {\r\n      let response = await api.get(`medics?id=${id}`);\r\n\r\n      setUser({\r\n        ...response.data,\r\n      });\r\n    } catch (error) {\r\n      if (error) {\r\n        history?.replace(\"/404\");\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function logout() {\r\n    Cookies.remove(\"access-token\");\r\n    window.location.reload();\r\n  }\r\n\r\n  async function login(email: string, password: string) {\r\n    let response;\r\n    try {\r\n      response = await api.post(\"/medics/login\", {\r\n        email: email,\r\n        password: password,\r\n      });\r\n\r\n      let { token, id, confirmed } = response.data;\r\n\r\n      if (confirmed) {\r\n        Cookies.set(\"access-token\", token);\r\n        setUserID(id);\r\n\r\n        setConfirmed(confirmed);\r\n\r\n        getUserData(id);\r\n      } else {\r\n        throw new Error(\"Usuário não verificado\");\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      return error?.response?.data ?? { error: error.message };\r\n    }\r\n  }\r\n\r\n  async function loginWithToken() {\r\n    let response = await api.get(\"medics/auth\", {\r\n      headers: {\r\n        Authorization: Cookies.get(\"access-token\"),\r\n      },\r\n    });\r\n\r\n    let { auth, userID, confirmed } = response.data;\r\n\r\n    if (auth) {\r\n      setUserID(userID);\r\n      setConfirmed(confirmed);\r\n      getUserData(userID);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function signup(user: MedicData) {\r\n    return await api.post(\"medics\", {\r\n      ...user,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Cookies.get(\"access-token\")) {\r\n      loginWithToken();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  let value = {\r\n    user,\r\n    authenticated: user !== null,\r\n    signup,\r\n    login,\r\n    logout,\r\n    confirmed,\r\n    userID,\r\n  } as AuthContextData;\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthProvider\";\r\n\r\nexport default function PublicRoute({ component: Component, ...rest }: any) {\r\n  const { authenticated } = useAuth();\r\n\r\n  if (!authenticated) {\r\n    return <Route {...rest} render={(props: any) => <Component {...props} />} />;\r\n  }\r\n\r\n  return <Redirect to=\"/agenda\" />;\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst Benefits = () => {\r\n  const lists = [\r\n    {\r\n      label:\r\n        \"A plataforma intermediará o agendamento de consultas entre você e seus pacientes;\",\r\n    },\r\n    {\r\n      label: \"Seu perfil aparecerá para milhares de pacientes de sua região;\",\r\n    },\r\n    {\r\n      label: \"Todas as consultas serão particulares (sem convênio médico);\",\r\n    },\r\n    {\r\n      label: \"Um aplicativo/site de gestão de clínicas totalmente gratuito.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"benefits\">\r\n      <div className=\"container\">\r\n        <h1>Como proporcionaremos tais benefícios?</h1>\r\n        <ul>\r\n          {lists.map((list, index) => {\r\n            return (\r\n              <li className=\"benefit\" key={index}>\r\n                <div className=\"small-list-style\"></div>\r\n                {list.label}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Benefits;\r\n","export default __webpack_public_path__ + \"static/media/logo.644ebe89.svg\";","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport { MdAssignment } from \"react-icons/md\";\r\nimport { GoSignIn } from \"react-icons/go\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst links = [\r\n  {\r\n    label: \"Crie sua conta gratuita!\",\r\n    goTo: \"/registrar\",\r\n    icon: <MdAssignment style={{ marginLeft: \"1rem\" }} color=\"#fff\" size={30} />,\r\n  },\r\n  {\r\n    label: \"Entrar\",\r\n    goTo: \"/entrar\",\r\n    icon: <GoSignIn style={{ marginLeft: \"1rem\" }} color=\"#fff\" size={30} />,\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <ul>\r\n        {links.map((link, index) => {\r\n          return (\r\n            <Link style={{ display: \"flex\" }} to={link.goTo} key={index}>\r\n              {link.label}\r\n              {link.icon}\r\n            </Link>\r\n          );\r\n        })}\r\n      </ul>\r\n      <img src={logo} alt=\"Spital\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\ninterface BenefitProps {\r\n  title: string;\r\n  image: any;\r\n  description: string;\r\n}\r\n\r\nconst LeftSideBenefit = ({ title, image, description }: BenefitProps) => {\r\n  return (\r\n    <div className=\"left-side-benefit\">\r\n      <div className=\"left-side-benefit-presentation\">\r\n        <h2>{title}</h2>\r\n        <img src={image} alt=\"Imagem de título\" />\r\n      </div>\r\n      <p>{description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftSideBenefit;\r\n","export default __webpack_public_path__ + \"static/media/doctor.ff187400.svg\";","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport doctorImg from \"../../assets/images/doctor.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Presentation = () => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div className=\"presentation\">\r\n      <img src={doctorImg} alt=\"Médico e paciente\" />\r\n      <div className=\"presentation-message\">\r\n        <h2>Plataforma grátis para encontrar pacientes!</h2>\r\n        <p>\r\n          Nossa plataforma oferece o melhor serviço para aumentar seu\r\n          faturamento em até 200%. Você sabe o melhor de tudo isso? A plataforma\r\n          é totalmente gratuita! Gostaria de saber como te proporcionamos tudo\r\n          isso? Clique no botão abaixo.\r\n        </p>\r\n        <button onClick={() => history.push('/entrar')}>Venha descobrir</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Presentation;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>O que nosso aplicativo/site de gestão de clínicas proporcionará? </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","export default __webpack_public_path__ + \"static/media/booking.15be5999.svg\";","export default __webpack_public_path__ + \"static/media/checkbox.ccc094eb.svg\";","export default __webpack_public_path__ + \"static/media/interview.3baf685a.svg\";","export default __webpack_public_path__ + \"static/media/wallet.e6765ac8.svg\";","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\ninterface BenefitProps {\r\n  title: string;\r\n  image: any;\r\n  description: string;\r\n}\r\n\r\nconst RightSideBenefit = ({ title, image, description }: BenefitProps) => {\r\n  return (\r\n    <div className=\"right-side-benefit\">\r\n      <p>{description}</p>\r\n      <div className=\"right-side-benefit-presentation\">\r\n        <h2>{title}</h2>\r\n        <img src={image} alt=\"Imagem de título\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightSideBenefit;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst Tax = () => {\r\n  return (\r\n    <div className=\"tax\">\r\n      <h1>Taxas cobradas: 10% de cada transação</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tax;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst Refund = () => {\r\n  return (\r\n    <div className=\"refund\">\r\n      <h1>Se por algum motivo a consulta for cancelada, o reembolso é automático </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Refund;\r\n","export default __webpack_public_path__ + \"static/media/apple.0aeeb631.svg\";","export default __webpack_public_path__ + \"static/media/google-play.a93cfd50.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport apple from \"../../assets/icons/apple.svg\";\r\nimport googlePlay from \"../../assets/icons/google-play.svg\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-app\">\r\n        <h2>Baixe o app Spital</h2>\r\n        <Link to=\"/\">\r\n          <img src={apple} alt=\"Apple\" />\r\n          <div>\r\n            <h3>DISPONÍVEL NO</h3>\r\n            <p>Apple Store</p>\r\n          </div>\r\n        </Link>\r\n\r\n        <Link style={{ marginTop: \"1rem\" }} to=\"/\">\r\n          <img src={googlePlay} alt=\"Google Play\" />\r\n          <div>\r\n            <h3>DISPONÍVEL NO</h3>\r\n            <p>Apple Store</p>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"footer-pacients\">\r\n        <h2>Pacientes</h2>\r\n        <Link to=\"/\">Entrar</Link>\r\n        <Link to=\"/\">Registrar</Link>\r\n      </div>\r\n      <div className=\"footer-terms\">\r\n        <h2>Termos de uso</h2>\r\n        <button>Clique aqui</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Benefits from \"../../components/Benefits\";\r\nimport Header from \"../../components/Header\";\r\nimport LeftSideBenefit from \"../../components/LeftSideBenefit\";\r\nimport Presentation from \"../../components/Presentation\";\r\nimport Title from \"../../components/Title\";\r\nimport \"./styles.css\";\r\nimport booking from \"../../assets/images/booking.svg\";\r\nimport checkbox from \"../../assets/images/checkbox.svg\";\r\nimport interview from \"../../assets/images/interview.svg\";\r\nimport wallet from \"../../assets/images/wallet.svg\";\r\nimport RightSideBenefit from \"../../components/RightSideBenefit\";\r\nimport Tax from \"../../components/Tax\";\r\nimport Refund from \"../../components/Refund\";\r\nimport Footer from \"../../components/Footer\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <Header />\r\n      <Presentation />\r\n      <Benefits />\r\n      <Title />\r\n      <LeftSideBenefit\r\n        title=\"Agenda\"\r\n        image={booking}\r\n        description=\"Aqui temos uma agenda que listará todos os compromissos do médico de forma automática ou manual!\"\r\n      />\r\n      <RightSideBenefit\r\n        title=\"Histórico de pacientes\"\r\n        image={interview}\r\n        description=\"O histórico de todos os clientes será guardado na nuvem e podem ser consultados a qualquer momento\"\r\n      />\r\n      <LeftSideBenefit\r\n        title=\"Histórico de consultas\"\r\n        image={checkbox}\r\n        description=\"Informações como preços, data e hora das consultas é importante. Por conta disso disponibilizamos o histórico de suas consultas.\"\r\n      />\r\n      <RightSideBenefit\r\n        title=\"Sistema de pagamento\"\r\n        image={wallet}\r\n        description=\"No Spital, utilizamos um sistema de pagamento desenvolvido pela Stripe. Com um clique você consegue sacar seu dinheiro das consultas!\"\r\n      />\r\n      <Tax />\r\n      <Refund />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","export default __webpack_public_path__ + \"static/media/return.6e875963.svg\";","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport returnIcon from \"../../assets/icons/return.svg\";\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n  subTitle?: string;\r\n  returnFunction: () => void;\r\n}\r\n\r\nconst MainHeader: React.FC<HeaderProps> = ({ title, subTitle, returnFunction }) => {\r\n  return (\r\n    <div className=\"main-header\">\r\n      <div className=\"container main-header-context\">\r\n        <img \r\n          src={returnIcon} \r\n          alt=\"Retornar\" \r\n          className=\"return\" \r\n          onClick={(e) => returnFunction()}/>\r\n        <div className=\"main-header-title\">\r\n          <h1>{title}</h1>\r\n          <h3>{subTitle}</h3>\r\n        </div>\r\n        <img className=\"logo\" src={logo} alt=\"Spital\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\ninterface OverlayProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function Overlay({ children }: OverlayProps) {\r\n  return <div className=\"modal-overlay\">{children}</div>;\r\n}\r\n","import { IoClose } from \"react-icons/io5\";\r\nimport Overlay from \"../Overlay\";\r\nimport \"./styles.css\";\r\nimport { IoCheckmarkOutline } from \"react-icons/io5\";\r\n\r\nexport interface CadastroSucessoProps {\r\n  name: string;\r\n  description: string;\r\n  close?: () => any;\r\n}\r\nexport default function CadastroSucesso({\r\n  name,\r\n  close,\r\n  description,\r\n}: CadastroSucessoProps) {\r\n  return (\r\n    <Overlay>\r\n      <div className=\"modal-success\">\r\n        <div className=\"success-icon\">\r\n          <IoCheckmarkOutline color=\"#fff\" size=\"7rem\" />\r\n        </div>\r\n        <h1>{name}!</h1>\r\n\r\n        <p>{description}</p>\r\n\r\n        <button onClick={close}>Continuar</button>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Overlay from \"../Overlay\";\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <Overlay>\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"var(--color-button-primary)\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    </Overlay>\r\n  );\r\n}\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport CadastroSucesso, { CadastroSucessoProps as sucessoProps} from \"../components/Modals/CadastroSucesso\";\r\nimport Spinner from \"../components/Modals/Spinner\";\r\n\r\ninterface ModalProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\ninterface ModalContextProps {\r\n  spinner: {\r\n    open: () => void;\r\n    close: () => void;\r\n  };\r\n  sucesso: {\r\n    open: ({ name, close, description }: sucessoProps) => void;\r\n    close: () => void;\r\n  };\r\n}\r\n\r\nconst ModalContext = createContext({} as ModalContextProps);\r\n\r\nexport default function ModalProvider({ children }: ModalProviderProps) {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [modal, setModal] = useState<JSX.Element | null>(null);\r\n\r\n  function openModal(Modal: any) {\r\n    setModal(Modal);\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  let value = {\r\n    spinner: {\r\n      open: () => openModal(<Spinner />),\r\n      close: closeModal,\r\n    },\r\n    sucesso: {\r\n      open: ({ name, close, description }: sucessoProps) =>\r\n        openModal(\r\n          <CadastroSucesso\r\n            description={description}\r\n            name={name}\r\n            close={close}\r\n          />\r\n        ),\r\n      close: closeModal,\r\n    },\r\n  } as ModalContextProps;\r\n\r\n  return (\r\n    <ModalContext.Provider value={value}>\r\n      {children}\r\n      {isModalOpen && modal}\r\n    </ModalContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useModal() {\r\n  return useContext(ModalContext);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport MainHeader from \"../../components/MainHeader\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function LoginPage() {\r\n  let history = useHistory();\r\n\r\n  const { spinner } = useModal();\r\n  const { login } = useAuth();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  async function handleSubmitLogin(e: any) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n\r\n    const { error } = await login(user.email, user.password);\r\n\r\n    spinner.close();\r\n    setError(error);\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-spital-account-container\">\r\n      <MainHeader\r\n        title=\"Insira suas informações para que consigamos realizar o seu cadastro\"\r\n        returnFunction={() => {\r\n          history.push(\"/\");\r\n        }}\r\n      />\r\n      <div className=\"login-spital-account\">\r\n        <div className=\"login-spital-account-credentials\">\r\n          <form className=\"login-spital-account-form\">\r\n            <div className=\"login-spital-account-form-flex\">\r\n              <h2>Entre com seu e-mail e senha</h2>\r\n\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleShowPassword();\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                <span>{showPassword ? \"Esconder senha\" : \"Mostrar senha\"}</span>\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"gray-line\"></div>\r\n\r\n            <div className=\"login-spital-account-form-inputs\">\r\n              <TextField\r\n                type=\"email\"\r\n                value={user.email}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setUser({ ...user, email: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n                placeholder=\"Digite seu e-mail\"\r\n              />\r\n\r\n              <TextField\r\n                value={user.password}\r\n                style={{ marginTop: \"2rem\" }}\r\n                fullWidth\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                onChange={(e) => {\r\n                  setUser({ ...user, password: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>Senha</span>}\r\n                placeholder=\"Digite sua senha\"\r\n              />\r\n            </div>\r\n\r\n            <p\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                color: \"red\",\r\n                position: \"relative\",\r\n                top: \"-10px\",\r\n              }}\r\n            >\r\n              {error}\r\n            </p>\r\n\r\n            <div className=\"gray-line\" id=\"gray-line-2\"></div>\r\n            <Link\r\n              style={{\r\n                color: \"#07B3D6\",\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                marginTop: \"1.5rem\",\r\n              }}\r\n              to=\"/recuperar\"\r\n            >\r\n              Esqueci minha senha\r\n            </Link>\r\n\r\n            <button onClick={handleSubmitLogin} className=\"login-button\">\r\n              Entrar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","interface validateCPFProps {\r\n  cpf: string;\r\n}\r\n\r\nexport default function validateCPF({ cpf }: validateCPFProps) {\r\n  function getDigit(cpf: string) {\r\n    let lastDigit = 0;\r\n\r\n    for (let i = 0; i < cpf.length; i++) {\r\n      lastDigit += parseInt(cpf[cpf.length - i - 1]) * (i + 2);\r\n    }\r\n\r\n    lastDigit = (lastDigit * 10) % 11;\r\n\r\n    if (lastDigit === 10) {\r\n      return 0;\r\n    }\r\n\r\n    return lastDigit;\r\n  }\r\n\r\n  if (cpf.length === 11) {\r\n    let validatedCpf = cpf.substring(0, 9);\r\n\r\n    validatedCpf += getDigit(validatedCpf);\r\n    validatedCpf += getDigit(validatedCpf);\r\n\r\n    if (cpf === validatedCpf) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","export default function convertHourToMinutes(time: string) {\r\n  const [hour, minutes] = time.split(\":\").map(Number);\r\n  const timeInMinutes = hour * 60 + minutes;\r\n\r\n  return timeInMinutes;\r\n};\r\n","import validateCPF from \"./validateCpf\";\r\nimport convertHourToMinutes from \"./convertHourToMinute\";\r\n\r\ninterface MedicError {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  phoneNumber: string;\r\n  area: string;\r\n  graduation: string;\r\n  masterDegree: string;\r\n  doctorateDegree: string;\r\n  cpf: string;\r\n  rg: string;\r\n  birthDate: string;\r\n  crm: string;\r\n  schedule: Array<string>;\r\n}\r\n\r\ninterface Medic {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  phoneNumber: string;\r\n  area: string;\r\n  graduation: string;\r\n  masterDegree: string;\r\n  doctorateDegree: string;\r\n  cpf: string;\r\n  rg: string;\r\n  birthDate: string;\r\n  crm: string;\r\n  schedule: Array<Schedule>;\r\n}\r\n\r\ninterface Schedule {\r\n  week_day: number;\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\nexport default function validateMedicInfo(credentials?: Medic) {\r\n  let errors = { schedule: new Array<string>() } as MedicError;\r\n\r\n  if (credentials !== null) {\r\n    if (!credentials?.firstName?.length ?? 0) {\r\n      errors.firstName = \"Campo de nome é necessário\";\r\n    }\r\n\r\n    if (!credentials?.lastName?.length ?? 0) {\r\n      errors.lastName = \"Campo de sobrenome é necessário\";\r\n    }\r\n\r\n    if (!credentials?.email?.length ?? 0) {\r\n      errors.email = \"Campo de e-mail é necessário\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(credentials?.email ?? \"\")\r\n    ) {\r\n      errors.email = \"E-mail inválido\";\r\n    }\r\n\r\n    if (!credentials?.password?.length ?? 0) {\r\n      errors.password = \"Campo de senha é necessário\";\r\n    } else if (credentials?.password?.length < 6) {\r\n      errors.password = \"A senha precisa de 6 ou mais caracteres\";\r\n    }\r\n\r\n    if (!credentials?.confirmPassword?.length ?? 0) {\r\n      errors.confirmPassword = \"Campo de confirmação de senha é necessário\";\r\n    } else if (credentials?.confirmPassword !== credentials?.password) {\r\n      errors.confirmPassword = \"As senhas não combinam\";\r\n    }\r\n\r\n    const phoneNumbers =\r\n      credentials?.phoneNumber?.replace(/[-.() ]/g, \"\") ?? \"0\";\r\n\r\n    if (isNaN(parseInt(phoneNumbers))) {\r\n      errors.phoneNumber = \"Número de telefone inválido\";\r\n    } else if (phoneNumbers.length !== 11) {\r\n      errors.phoneNumber = \"Número de telefone inválido\";\r\n    } else if (!phoneNumbers.length ?? 0) {\r\n      errors.phoneNumber = \"Campo de telefone é necessário\";\r\n    }\r\n\r\n    if (!credentials?.area?.length ?? 0) {\r\n      errors.area = \"Campo de área é necessário\";\r\n    }\r\n\r\n    if (!credentials?.graduation?.length ?? 0) {\r\n      errors.graduation = \"Campo de graduação é necessário\";\r\n    } else if ((credentials?.graduation?.length ?? 0) < 4) {\r\n      errors.graduation = \"Campo de graduação com poucos caracteres\";\r\n    }\r\n\r\n    if (\r\n      (credentials?.masterDegree?.length ?? 0) >= 1 &&\r\n      (credentials?.masterDegree?.length ?? 0) <= 4\r\n    ) {\r\n      errors.masterDegree = \"Campo de mestrado com poucos caracteres\";\r\n    }\r\n\r\n    if (\r\n      (credentials?.doctorateDegree?.length ?? 0) >= 1 &&\r\n      (credentials?.doctorateDegree?.length ?? 0) <= 4\r\n    ) {\r\n      errors.doctorateDegree = \"Campo de doutorado com poucos caracteres\";\r\n    }\r\n\r\n    if (!credentials?.crm?.length ?? 0) {\r\n      errors.crm = \"Campo de CRM é necessário\";\r\n    }\r\n\r\n    const cpfNumbers = credentials?.cpf?.replace(/[-. ]/g, \"\") ?? \"0\";\r\n\r\n    if (!cpfNumbers?.length ?? 0) {\r\n      errors.cpf = \"Campo de CPF é necessário\";\r\n    } else if (isNaN(parseInt(cpfNumbers))) {\r\n      errors.rg = \"Caracteres não aceitos\";\r\n    } else if (validateCPF({ cpf: cpfNumbers })) {\r\n      errors.cpf = \"CPF inválido\";\r\n    }\r\n    const rgNumbers = credentials?.rg?.replace(/[-. ]/g, \"\") ?? \"0\";\r\n\r\n    if (!rgNumbers?.length ?? 0) {\r\n      errors.rg = \"Campo de RG é necessário\";\r\n    } else if (rgNumbers?.length !== 9) {\r\n      errors.rg = \"RG inválido\";\r\n    } else if (isNaN(parseInt(rgNumbers))) {\r\n      errors.rg = \"Caracteres não aceitos\";\r\n    }\r\n\r\n    if (!credentials?.birthDate?.length ?? 0) {\r\n      errors.birthDate = \"Campo de data de nascimento é necessário\";\r\n    } else {\r\n      let year = new Date(credentials?.birthDate).getFullYear();\r\n      let month = new Date(credentials?.birthDate).getMonth() + 1;\r\n      let day = new Date(credentials?.birthDate).getDate();\r\n      if (new Date().getFullYear() - year >= 18) {\r\n        if (new Date().getFullYear() - year === 18) {\r\n          if (new Date().getMonth() + 1 - month >= 0) {\r\n            if (new Date().getDate() - day <= 0) {\r\n              errors.birthDate = \"Você precisa ser maior de 18 anos\";\r\n            }\r\n          } else {\r\n            errors.birthDate = \"Você precisa ser maior de 18 anos\";\r\n          }\r\n        }\r\n      } else {\r\n        errors.birthDate = \"Você precisa ser maior de 18 anos\";\r\n      }\r\n    }\r\n\r\n    if (!credentials?.schedule?.length ?? 0) {\r\n      if (errors.schedule.length > 0) {\r\n        errors.schedule[0] =\r\n          \"Você precisa informar pelo menos um dia da semana.\";\r\n      } else {\r\n        errors.schedule.push(\r\n          \"Você precisa informar pelo menos um dia da semana.\"\r\n        );\r\n      }\r\n    } else if (typeof credentials.schedule !== \"string\") {\r\n      let i = 0;\r\n      for (let appointment of credentials?.schedule) {\r\n        if (appointment.from.length === 0 || appointment.to.length === 0) {\r\n          if (errors?.schedule?.length < i) {\r\n            errors.schedule[i] = \"Campo não pode ser vazio\";\r\n          } else {\r\n            errors.schedule.push(\"Campo não pode ser vazio\");\r\n          }\r\n        } else {\r\n          const from = convertHourToMinutes(appointment.from);\r\n          const to = convertHourToMinutes(appointment.to);\r\n\r\n          if (from > to) {\r\n            if (errors?.schedule?.length < i) {\r\n              errors.schedule[i] = \"Carga horária inválida\";\r\n            } else {\r\n              errors.schedule.push(\"Carga horária inválida\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n","function mask(value, pattern) {\r\n  let i = 0;\r\n  const v = value.toString().replace(/[^a-zA-Z0-9]/g, \"\");\r\n  return pattern.replace(/#/g, () => v[i++] || \"\");\r\n}\r\n\r\nexport default mask;\r\n","import React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface MedicData {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  phoneNumber: string;\r\n  area: string;\r\n  graduation: string;\r\n  masterDegree: string;\r\n  doctorateDegree: string;\r\n  cpf: string;\r\n  rg: string;\r\n  birthDate: string;\r\n  crm: string;\r\n  schedule: Array<Schedule>;\r\n}\r\n\r\ninterface Schedule {\r\n  week_day: number;\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\ninterface ShareMedicFormContextData {\r\n  medicData: MedicData;\r\n  setMedicData: React.Dispatch<React.SetStateAction<MedicData>>;\r\n}\r\n\r\ninterface ShareClientFormProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ShareMedicFormContext = createContext(\r\n  {} as ShareMedicFormContextData\r\n);\r\n\r\nexport default function ShareClientFormProvider({\r\n  children,\r\n}: ShareClientFormProviderProps) {\r\n  const [medicData, setMedicData] = useState<MedicData>({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    phoneNumber: \"\",\r\n    area: \"\",\r\n    graduation: \"\",\r\n    masterDegree: \"\",\r\n    doctorateDegree: \"\",\r\n    cpf: \"\",\r\n    rg: \"\",\r\n    birthDate: \"\",\r\n    crm: \"\",\r\n    schedule: [\r\n      {\r\n        week_day: 0,\r\n        from: \"08:30\",\r\n        to: \"17:00\",\r\n      },\r\n    ],\r\n  } as MedicData);\r\n\r\n  let value = {\r\n    medicData,\r\n    setMedicData,\r\n  } as ShareMedicFormContextData;\r\n\r\n  return (\r\n    <ShareMedicFormContext.Provider value={value}>\r\n      {children}\r\n    </ShareMedicFormContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useShareFormMedic() {\r\n  return useContext(ShareMedicFormContext);\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./styles.css\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport mask from \"../../../utils/mask\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicNamesProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicNames = ({ nextPage, previousPage }: MedicNamesProps) => {\r\n  const { medicData, setMedicData } = useShareFormMedic();\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  return (\r\n    <form className=\"form-container\">\r\n      <h2>Nome e telefone</h2>\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        placeholder=\"João\"\r\n        value={medicData?.firstName}\r\n        name=\"firstName\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, firstName: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors?.firstName ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.firstName}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"Nogueira\"\r\n        value={medicData?.lastName}\r\n        name=\"lastName\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Sobrenome</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, lastName: e.target.value });\r\n        }}\r\n        style={{ marginTop: \"1rem\" }}\r\n        required\r\n        error={errors?.lastName ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.lastName}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"16 99999999\"\r\n        value={medicData?.phoneNumber}\r\n        name=\"lastName\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Telefone celular</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({\r\n            ...medicData,\r\n            phoneNumber: mask(e.target.value, \"(##) # ####-####\"),\r\n          });\r\n        }}\r\n        style={{ marginTop: \"1rem\" }}\r\n        required\r\n        error={errors?.phoneNumber ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.phoneNumber}</span>\r\n        }\r\n      />\r\n\r\n      <button className=\"primary\" type=\"submit\" onClick={(e) => nextPage()}>\r\n        Próximo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MedicNames;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicCredentialsProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicCredentials = ({\r\n  nextPage,\r\n  previousPage,\r\n}: MedicCredentialsProps) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { medicData, setMedicData } = useShareFormMedic();\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <div className=\"form-container-flex\">\r\n        <h2>Credenciais</h2>\r\n        <IconButton\r\n          onClick={() => {\r\n            handleShowPassword();\r\n          }}\r\n          className=\"show-password-button\"\r\n          color=\"primary\"\r\n        >\r\n          <span>{showPassword ? \"Esconder senha\" : \"Mostrar senha\"}</span>\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        placeholder=\"email90@gmail.com\"\r\n        value={medicData?.email}\r\n        name=\"email\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        autoComplete=\"off\"\r\n        type=\"email\"\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, email: e.target.value });\r\n        }}\r\n        error={errors?.email ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.email}</span>}\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"*********\"\r\n        value={medicData?.password}\r\n        name=\"password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        autoComplete=\"off\"\r\n        style={{ marginTop: \"1rem\" }}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, password: e.target.value });\r\n        }}\r\n        error={errors?.password ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.password}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"*********\"\r\n        value={medicData?.confirmPassword}\r\n        name=\"confirmPassword\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Confirmar Senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        style={{ marginTop: \"1rem\" }}\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, confirmPassword: e.target.value });\r\n        }}\r\n        error={errors?.confirmPassword ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.confirmPassword}</span>\r\n        }\r\n      />\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button className=\"primary\" onClick={(e) => nextPage()}>\r\n        Próximo\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicCredentials;\r\n","import React, { SelectHTMLAttributes } from \"react\";\r\nimport \"./styles.css\";\r\n\r\ninterface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  name: string;\r\n  options: Array<{\r\n    value: string;\r\n    label: string;\r\n  }>;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ name, options, ...rest }) => {\r\n  return (\r\n    <div className=\"select-block\">\r\n      <select value=\"\" id={name} {...rest}>\r\n        <option value=\"\" disabled hidden>Selecione uma opção</option>\r\n        {\r\n          options.map(option => {\r\n            return <option key={option.value} value={option.value}>{option.label}</option>\r\n          })\r\n        }\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"../../Select\";\r\nimport \"./styles.css\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicNamesProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicAcademicData = ({ nextPage, previousPage }: MedicNamesProps) => {\r\n  const areaOptions = [\r\n    {\r\n      label: \"Alergista e Imunologista\",\r\n      value: \"Alergista e Imunologista\",\r\n    },\r\n    {\r\n      label: \"Angiologista\",\r\n      value: \"Angiologista\",\r\n    },\r\n    {\r\n      label: \"Cardiologista\",\r\n      value: \"Cardiologista\",\r\n    },\r\n    {\r\n      label: \"Coloproctologista\",\r\n      value: \"Coloproctologista\",\r\n    },\r\n    {\r\n      label: \"Dermatologista\",\r\n      value: \"Dermatologista\",\r\n    },\r\n    {\r\n      label: \"Endocrinologista\",\r\n      value: \"Endocrinologista\",\r\n    },\r\n    {\r\n      label: \"Endoscopista\",\r\n      value: \"Endoscopista\",\r\n    },\r\n    {\r\n      label: \"Gastroenterologista\",\r\n      value: \"Gastroenterologista\",\r\n    },\r\n    {\r\n      label: \"Geriatra\",\r\n      value: \"Geriatra\",\r\n    },\r\n    {\r\n      label: \"Ginecologista\",\r\n      value: \"Ginecologista\",\r\n    },\r\n    {\r\n      label: \"Hematologista\",\r\n      value: \"Hematologista\",\r\n    },\r\n    {\r\n      label: \"Infectologista\",\r\n      value: \"Infectologista\",\r\n    },\r\n    {\r\n      label: \"Nefrologista\",\r\n      value: \"Nefrologista\",\r\n    },\r\n    {\r\n      label: \"Neurologista\",\r\n      value: \"Neurologista\",\r\n    },\r\n    {\r\n      label: \"Nutrologo\",\r\n      value: \"Nutrologo\",\r\n    },\r\n    {\r\n      label: \"Obstetricista\",\r\n      value: \"Obstetricista\",\r\n    },\r\n    {\r\n      label: \"Oftalmologista\",\r\n      value: \"Oftalmologista\",\r\n    },\r\n    {\r\n      label: \"Ortopedista\",\r\n      value: \"Ortopedista\",\r\n    },\r\n    {\r\n      label: \"Otorrinolaringologista\",\r\n      value: \"Otorrinolaringologista\",\r\n    },\r\n    {\r\n      label: \"Pediatra\",\r\n      value: \"Pediatra\",\r\n    },\r\n    {\r\n      label: \"Pneumologista\",\r\n      value: \"Pneumologista\",\r\n    },\r\n    {\r\n      label: \"Radiologista\",\r\n      value: \"Radiologista\",\r\n    },\r\n    {\r\n      label: \"Radioterapista\",\r\n      value: \"Radioterapista\",\r\n    },\r\n    {\r\n      label: \"Reumatologista\",\r\n      value: \"Reumatologista\",\r\n    },\r\n    {\r\n      label: \"Urologista\",\r\n      value: \"Urologista\",\r\n    },\r\n  ];\r\n\r\n  const { medicData, setMedicData } = useShareFormMedic();\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  if (!medicData.area) {\r\n    setMedicData((previousState) => ({\r\n      ...previousState,\r\n      area: areaOptions[0].label,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Dados Acadêmicos</h2>\r\n      <div className=\"line\"></div>\r\n      <Select\r\n        name=\"week_day\"\r\n        onChange={(e: any) =>\r\n          setMedicData({ ...medicData, area: e.target.value })\r\n        }\r\n        value={medicData?.area}\r\n        options={areaOptions}\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"Universidade de São Paulo\"\r\n        value={medicData?.graduation}\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Graduação</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, graduation: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"graduação\"\r\n        error={errors?.graduation ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.graduation}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.masterDegree}\r\n        placeholder=\"Universidade de Campinas\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Mestrado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, masterDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"mestrado\"\r\n        error={errors?.masterDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.masterDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.doctorateDegree}\r\n        placeholder=\"Universidade Estadual Paulista\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Doutorado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, doctorateDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.doctorateDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.doctorateDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.crm}\r\n        placeholder=\"010201/SP\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>CRM</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, crm: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.crm ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.crm}</span>}\r\n      />\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button className=\"primary\" onClick={(e) => nextPage()}>\r\n        Próximo\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicAcademicData;\r\n","import { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./styles.css\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport mask from \"../../../utils/mask\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicPersonalDataProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicPersonalData = ({\r\n  nextPage,\r\n  previousPage,\r\n}: MedicPersonalDataProps) => {\r\n  const { medicData, setMedicData } = useShareFormMedic();\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  return (\r\n    <form className=\"form-container\">\r\n      <h2>Dados pessoais</h2>\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        value={medicData?.cpf}\r\n        placeholder=\"123.456.789-10\"\r\n        name=\"firstName\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>CPF</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({\r\n            ...medicData,\r\n            cpf: mask(e.target.value, \"###.###.###-##\"),\r\n          });\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors?.cpf ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.cpf}</span>}\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.rg}\r\n        placeholder=\"12.345.678-9\"\r\n        name=\"lastName\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>RG</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({\r\n            ...medicData,\r\n            rg: mask(e.target.value, \"##.###.###-#\"),\r\n          });\r\n        }}\r\n        style={{ marginTop: \"1rem\" }}\r\n        required\r\n        error={errors?.rg ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.rg}</span>}\r\n      />\r\n\r\n      <input\r\n        value={medicData?.birthDate}\r\n        type=\"date\"\r\n        style={{ marginTop: \"1rem\" }}\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, birthDate: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n      />\r\n\r\n      <p\r\n        style={{\r\n          color: \"#f44336\",\r\n          fontSize: \"1rem\",\r\n          marginLeft: \"1.5rem\",\r\n          fontWeight: \"bold\",\r\n          marginTop: \"0.5rem\",\r\n        }}\r\n      >\r\n        {errors?.birthDate}\r\n      </p>\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button className=\"primary\" onClick={(e) => nextPage()}>\r\n        Próximo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MedicPersonalData;\r\n","import \"./styles.css\";\r\n\r\nimport Select from \"../../Select\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\nimport { useEffect, useState } from \"react\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\n\r\ninterface MedicScheduleProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicSchedule = ({ nextPage, previousPage }: MedicScheduleProps) => {\r\n  const { setMedicData, medicData } = useShareFormMedic();\r\n  const [error, setError] = useState(false);\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  console.log(errors);\r\n\r\n  const weekDays = [\r\n    {\r\n      value: \"0\",\r\n      label: \"Domingo\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"Segunda-feira\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"Terça-feira\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"Quarta-feira\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"Quinta-feira\",\r\n    },\r\n    {\r\n      value: \"5\",\r\n      label: \"Sexta-feira\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"Sábado\",\r\n    },\r\n  ];\r\n\r\n  function addNewScheduleItem() {\r\n    if (medicData.schedule.length >= 7) {\r\n      // Send message\r\n    } else {\r\n      setMedicData({\r\n        ...medicData,\r\n        schedule: [\r\n          ...medicData.schedule,\r\n          {\r\n            week_day: medicData.schedule.length,\r\n            from: \"13:00\",\r\n            to: \"20:30\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  function setScheduleItemValue(\r\n    position: number,\r\n    field: string,\r\n    value: string\r\n  ) {\r\n    const newScheduleItem = medicData.schedule.map((scheduleItem, index) => {\r\n      if (index === position) {\r\n        return { ...scheduleItem, [field]: value };\r\n      }\r\n\r\n      return scheduleItem;\r\n    });\r\n\r\n    setMedicData({ ...medicData, schedule: newScheduleItem });\r\n  }\r\n\r\n  function deleteScheduleItem(position: number) {\r\n    let newScheduleItems = [...medicData.schedule];\r\n    const index = newScheduleItems.findIndex((item: any) => item === position);\r\n\r\n    newScheduleItems.splice(index, 1);\r\n\r\n    setMedicData({ ...medicData, schedule: newScheduleItems });\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-container\">\r\n      <div className=\"form-container-flex\">\r\n        <h2>Horários disponíveis</h2>\r\n\r\n        <div className=\"add-button\" onClick={addNewScheduleItem}>\r\n          + Novo horário\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\"></div>\r\n\r\n      {medicData.schedule.map((scheduleItem, index) => {\r\n        return (\r\n          <div key={scheduleItem.week_day} className=\"schedule-item\">\r\n            <span className=\"schedule-item-label\">Dia da semana</span>\r\n            <Select\r\n              name=\"week_day\"\r\n              onChange={(e: any) =>\r\n                setScheduleItemValue(index, \"week_day\", e.target.value)\r\n              }\r\n              value={scheduleItem.week_day}\r\n              options={weekDays}\r\n            />\r\n\r\n            <div className=\"schedule-item-horizontal\">\r\n              <div className=\"schedule-item-input\">\r\n                <span className=\"schedule-item-label\">Das</span>\r\n                <input\r\n                  value={scheduleItem.from}\r\n                  name=\"from\"\r\n                  type=\"time\"\r\n                  onChange={(e: any) => {\r\n                    setScheduleItemValue(index, \"from\", e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"schedule-item-input\">\r\n                <span className=\"schedule-item-label\">Até</span>\r\n                <input\r\n                  value={scheduleItem.to}\r\n                  name=\"to\"\r\n                  type=\"time\"\r\n                  onChange={(e: any) => {\r\n                    setScheduleItemValue(index, \"to\", e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <p\r\n              style={{\r\n                margin: \"2rem 0\",\r\n                color: \"#f00\",\r\n                fontSize: \"2rem\",\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {errors.schedule.length >= index ? errors.schedule[index] : null}\r\n            </p>\r\n            <div\r\n              onClick={(e: any) => {\r\n                deleteScheduleItem(index);\r\n              }}\r\n              className=\"line-gray\"\r\n            >\r\n              <span>Excluir horário</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <p\r\n        style={{\r\n          fontSize: \"2rem\",\r\n          color: \"#f00\",\r\n          fontWeight: \"bold\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {medicData.schedule.length === 0 ? \"Você precisa informar pelo menos um dia da semana.\" : null}\r\n      </p>\r\n\r\n\r\n\r\n      <button className=\"secondary\" onClick={previousPage}>\r\n        Anterior\r\n      </button>\r\n      <button className=\"primary\" onClick={nextPage}>\r\n        Próximo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MedicSchedule;\r\n","function getPasswordAsterisk(password) {\r\n  const asteriskPassword = password.replace(/./g, \"*\");\r\n  return asteriskPassword;\r\n}\r\n\r\nexport default getPasswordAsterisk;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport api from \"../../../services/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { IconButton, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport getPasswordAsterisk from \"../../../utils/HashPassword\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\nimport { useModal } from \"../../../context/ModalProvider\";\r\n\r\ninterface MedicReviewProps {\r\n  changePage: (index: number) => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicReview = ({ changePage, previousPage }: MedicReviewProps) => {\r\n  const [isThereBackendError, setIsThereBackendError] = useState(false);\r\n  const [backendError, setBackEndError] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { sucesso } = useModal();\r\n  const { medicData } = useShareFormMedic();\r\n\r\n  const history = useHistory();\r\n\r\n  const [agreement, setAgreement] = useState(false);\r\n\r\n  async function handleSubmitForm(e: any) {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    if (!errors?.schedule?.length) {\r\n      //@ts-ignore\r\n      delete errors.schedule;\r\n    }\r\n\r\n    console.log(errors);\r\n\r\n    const loopedErrors = Object.values(errors);\r\n    if (loopedErrors.length > 0) {\r\n      setHasError(true);\r\n    } else {\r\n      setHasError(false);\r\n      await api\r\n        .post(\"medics\", {\r\n          ...medicData,\r\n          xp: 0,\r\n        })\r\n        .then((response: any) => {\r\n          if (response.data.success) {\r\n            setIsThereBackendError(false);\r\n            setBackEndError(\"\");\r\n            sucesso.open({\r\n              name:\r\n                \"Parabéns \" + medicData.firstName + \" \" + medicData.lastName,\r\n              close: () => {\r\n                sucesso.close();\r\n                history.push(\"/confirmar-email\");\r\n              },\r\n              description: \"Conta criada com sucesso.\",\r\n            });\r\n            setIsLoading(false);\r\n          } else {\r\n            setIsThereBackendError(true);\r\n            setBackEndError(response.data.message);\r\n\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const hashedPassword = getPasswordAsterisk(medicData?.password ?? \"\");\r\n\r\n  let [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  const formatedBirthDate = medicData?.birthDate?.replace(/[-]/g, \"/\");\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Revise seus dados</h2>\r\n      <div className=\"line\"></div>\r\n      <RenderAccordion\r\n        summary=\"Nome e telefone\"\r\n        medicInfo={[\r\n          { type: \"Nome\", info: medicData?.firstName },\r\n          { type: \"Sobrenome\", info: medicData?.lastName },\r\n          { type: \"Telefone\", info: medicData?.phoneNumber },\r\n        ]}\r\n        index={0}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Credenciais\"\r\n        medicInfo={[\r\n          { type: \"E-mail\", info: medicData?.email },\r\n          { type: \"Senha\", info: hashedPassword },\r\n        ]}\r\n        index={1}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados acadêmicos\"\r\n        medicInfo={[\r\n          { type: \"Área médica\", info: medicData?.area },\r\n          { type: \"Graduação\", info: medicData?.graduation },\r\n          { type: \"Mestrado\", info: medicData?.masterDegree },\r\n          { type: \"Doutorado\", info: medicData?.doctorateDegree },\r\n        ]}\r\n        index={2}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados pessoais\"\r\n        medicInfo={[\r\n          { type: \"CPF\", info: medicData?.cpf },\r\n          { type: \"RG\", info: medicData?.rg },\r\n          { type: \"Data de nascimento\", info: formatedBirthDate },\r\n        ]}\r\n        index={3}\r\n        changePage={changePage}\r\n      />\r\n\r\n      <p>\r\n        {hasError ? (\r\n          <span\r\n            style={{\r\n              color: \"red\",\r\n              position: \"relative\",\r\n              top: \"1rem\",\r\n              left: \"1rem\",\r\n            }}\r\n          >\r\n            O formulário possui erros...\r\n          </span>\r\n        ) : (\r\n          <span></span>\r\n        )}\r\n      </p>\r\n\r\n      <p\r\n        style={{\r\n          color: \"red\",\r\n          position: \"relative\",\r\n          top: \"1rem\",\r\n          left: \"1rem\",\r\n        }}\r\n      >\r\n        {backendError}\r\n      </p>\r\n\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={agreement}\r\n            onChange={(e) => setAgreement(e.target.checked)}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Clique aqui para aceitar nossos Termos e Serviços\"\r\n      />\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button\r\n        style={!agreement ? { cursor: \"not-allowed\" } : {}}\r\n        className=\"primary\"\r\n        onClick={handleSubmitForm}\r\n        disabled={!agreement}\r\n      >\r\n        {isLoading ? (\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n          />\r\n        ) : (\r\n          <p>Cadastrar</p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface RenderAccorditionProps {\r\n  summary: string;\r\n  medicInfo: Array<{\r\n    type: string;\r\n    info: string;\r\n  }>;\r\n  index: number;\r\n  changePage: (index: number) => void;\r\n}\r\n\r\nexport const RenderAccordion: React.FC<RenderAccorditionProps> = ({\r\n  summary,\r\n  medicInfo,\r\n  index,\r\n  changePage,\r\n}) => {\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        {summary}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <div>\r\n          <ListItemText>\r\n            {medicInfo.map((data, index) => {\r\n              return (\r\n                <span\r\n                  style={{ display: \"block\", fontWeight: \"normal\" }}\r\n                  key={index}\r\n                  className=\"dados\"\r\n                >\r\n                  <span style={{ fontWeight: \"bold\", marginRight: \"1rem\" }}>\r\n                    {data.type}:\r\n                  </span>\r\n                  {data.info}\r\n                </span>\r\n              );\r\n            })}\r\n          </ListItemText>\r\n          <button onClick={(e) => changePage(index)}>\r\n            <IconButton component=\"span\" color=\"primary\">\r\n              <EditIcon className=\"editar-icone\" />\r\n            </IconButton>\r\n          </button>\r\n        </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default MedicReview;\r\n","import { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport MainHeader from \"../../components/MainHeader\";\r\nimport MedicNames from \"../../components/Form/Steps/Names\";\r\n\r\nimport ShareMedicFormProvider from \"../../context/ShareMedicFormProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MedicCredentials from \"../../components/Form/Steps/Credentials\";\r\nimport MedicAcademicData from \"../../components/Form/Steps/AcademicData\";\r\nimport MedicPersonalData from \"../../components/Form/Steps/PersonalData\";\r\nimport MedicSchedule from \"../../components/Form/Steps/Schedule\";\r\nimport MedicReview from \"../../components/Form/Steps/Review\";\r\n\r\nconst RegisterMedicalSpitalNames = () => {\r\n  const history = useHistory();\r\n  const [ currentPage, setCurrentPage ] = useState(0);\r\n  let pages: Array<JSX.Element> = [\r\n    <MedicNames nextPage={nextPage} previousPage={previousPage}/>,\r\n    <MedicCredentials nextPage={nextPage} previousPage={previousPage}/>,\r\n    <MedicAcademicData nextPage={nextPage} previousPage={previousPage}/>,\r\n    <MedicPersonalData nextPage={nextPage} previousPage={previousPage}/>,\r\n    <MedicSchedule nextPage={nextPage} previousPage={previousPage}/>,\r\n    <MedicReview changePage={changePage} previousPage={previousPage}/>\r\n  ]\r\n\r\n  function changePage(index: number){\r\n    setCurrentPage(index);\r\n  }\r\n  function previousPage(){\r\n    if (currentPage === 0){\r\n      history.replace('/');\r\n    }\r\n\r\n    setCurrentPage(currentPage - 1)\r\n  }\r\n\r\n  function nextPage(){\r\n    if (currentPage + 1 < pages.length){\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-spital-container\">\r\n      <ShareMedicFormProvider>\r\n        <MainHeader\r\n          title=\"Insira suas informações para que a gente consiga realizar seu cadastro\"\r\n          returnFunction={previousPage}\r\n        />\r\n\r\n        {\r\n          pages[currentPage]\r\n        }\r\n      </ShareMedicFormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterMedicalSpitalNames;\r\n","export default __webpack_public_path__ + \"static/media/email.04b807a4.svg\";","import \"./styles.css\";\r\n\r\nimport email from \"../../assets/images/email.svg\";\r\n\r\nconst ConfirmEmail = () => {\r\n  return (\r\n    <div className=\"confirm-email\">\r\n      <div className=\"confirm-email-content\">\r\n        <h1>Cadastro realizado com sucesso!</h1>\r\n        <img src={email} alt=\"E-mail\" />\r\n        <h2>\r\n          Precisamos agora que você confirme seu e-mail para realizar-mos o\r\n          login.\r\n        </h2>\r\n        <p>Leia vosso e-mail e clique em confirmar e-mail</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmEmail;\r\n","export default __webpack_public_path__ + \"static/media/verified.640e4d6a.svg\";","import { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport verified from \"../../assets/images/verified.svg\";\r\nimport api from \"../../services/api\";\r\n\r\nimport \"./styles.css\";\r\n\r\ninterface VerifyEmailParams {\r\n  token: string;\r\n}\r\n\r\nexport default function VerifyEmail() {\r\n  const history = useHistory();\r\n  const { token } = useParams<VerifyEmailParams>();\r\n\r\n  async function sendEmailVerification() {\r\n    try {\r\n      let response = await api.get(`/users/${token}`);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(response.data.error);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        history.replace(\"/entrar\");\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    sendEmailVerification();\r\n  }, []);\r\n  return (\r\n    <div className=\"confirm-email\">\r\n      <div className=\"confirm-email-content\">\r\n        <h1>E-mail verificado!</h1>\r\n        <img src={verified} alt=\"E-mail\" />\r\n        <h2>\r\n          Espere 3 segundos e será redirecionado para a página de login...\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Redirect, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthProvider\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: any) {\r\n  const { authenticated, user } = useAuth();\r\n\r\n  if (authenticated) {\r\n    return (\r\n      <Route {...rest} render={(props: any) => <Component {...props} />} />\r\n    );\r\n  }\r\n\r\n  return <Redirect to=\"/\" />;\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { IoLogOutOutline } from \"react-icons/io5\";\r\n\r\ninterface HorizontalHeaderProps {\r\n  title: string;\r\n}\r\n\r\nconst HorizontalHeader = ({ title }: HorizontalHeaderProps) => {\r\n  const { logout } = useAuth();\r\n  const { spinner } = useModal();\r\n\r\n  function logoutSpinner() {\r\n    spinner.open();\r\n    logout();\r\n    spinner.close();\r\n  }\r\n  return (\r\n    <div className=\"horizontal-header\">\r\n      <h1>{title}</h1>\r\n\r\n      <div onClick={logoutSpinner} className=\"logout-button\">\r\n        <p>Sair</p>{\" \"}\r\n        <IoLogOutOutline\r\n          style={{\r\n            position: \"relative\",\r\n            top: \"-0.45rem\",\r\n            marginLeft: \"1rem\",\r\n          }}\r\n          color=\"#fff\"\r\n          size={30}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorizontalHeader;\r\n","export default __webpack_public_path__ + \"static/media/medicine.3eaa6bec.png\";","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport medicine from \"../../assets/icons/medicine.png\";\r\nimport {\r\n  IoCalendarOutline,\r\n  IoPeopleOutline,\r\n  IoMedicalOutline,\r\n  IoPlayBackOutline,\r\n  IoSettingsOutline,\r\n} from \"react-icons/io5\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface VerticalHeaderProps {\r\n  colorIcon: string;\r\n}\r\n\r\nconst VerticalHeader = ({ colorIcon }: VerticalHeaderProps) => {\r\n  const items = [\r\n    {\r\n      goTo: \"/agenda\",\r\n      name: \"agenda\",\r\n      icon: (\r\n        <IoCalendarOutline\r\n          style={{\r\n            cursor: \"pointer\",\r\n            marginTop: \"1.5rem\",\r\n            transition: \"all ease-in-out 0.2s\",\r\n          }}\r\n          size=\"3.5rem\"\r\n          color={colorIcon === \"agenda\" ? \"#62A4FB\" : \"#ccc\"}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      goTo: \"/perfil\",\r\n      name: \"profile\",\r\n      icon: (\r\n        <IoMedicalOutline\r\n          style={{\r\n            cursor: \"pointer\",\r\n            marginTop: \"1.5rem\",\r\n            transition: \"all ease-in-out 0.2s\",\r\n          }}\r\n          size=\"3.5rem\"\r\n          color={colorIcon === \"profile\" ? \"#62A4FB\" : \"#ccc\"}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      goTo: \"/consultas\",\r\n      name: \"appointments\",\r\n      icon: (\r\n        <IoPlayBackOutline\r\n          style={{\r\n            cursor: \"pointer\",\r\n            marginTop: \"1.5rem\",\r\n            transition: \"all ease-in-out 0.2s\",\r\n          }}\r\n          size=\"3.5rem\"\r\n          color={colorIcon === \"appointments\" ? \"#62A4FB\" : \"#ccc\"}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"vertical-header\">\r\n      <div className=\"vertical-header-menu\">\r\n        <img src={medicine} alt=\"Símbolo da medicina\" />\r\n        <div\r\n          style={{ width: \"70%\", marginTop: \"1rem\" }}\r\n          className=\"line-global\"\r\n        ></div>\r\n        {items.map((item: any) => {\r\n          return (\r\n            <Link key={item.name} to={item.goTo}>\r\n              <div>{item.icon}</div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n      <Link to=\"/configuracoes\">\r\n        <IoSettingsOutline\r\n          style={{\r\n            cursor: \"pointer\",\r\n            marginBottom: \"1rem\",\r\n            transition: \"all ease-in-out 0.2s\",\r\n          }}\r\n          size=\"3.5rem\"\r\n          color={colorIcon === \"configurations\" ? \"#62A4FB\" : \"#ccc\"}\r\n        />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerticalHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScheduleComponent,\r\n  Inject,\r\n  Day,\r\n  Month,\r\n  Week,\r\n  Agenda,\r\n  WorkWeek,\r\n  DragAndDrop,\r\n  Resize,\r\n} from \"@syncfusion/ej2-react-schedule\";\r\nimport HorizontalHeader from \"../../components-platform/HorizontalHeader\";\r\nimport VerticalHeader from \"../../components-platform/VerticalHeader\";\r\nimport \"./styles.css\";\r\nimport api from \"../../services/api\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Appointment {\r\n  id: number;\r\n  Subject: string;\r\n  StartTime: Date;\r\n  EndTime: Date;\r\n  isAllDay: boolean;\r\n}\r\n\r\nconst AgendaComponent = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n\r\n  const [appointments, setAppointments] = useState<Array<Appointment>>([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`appointments?medicID=${user.id}`).then((response: any) => {\r\n      for (let i = 0; i < response.data.length; i++) {\r\n        const [month, day, year] = response.data[i].date.split(\"/\");\r\n        const [hour, minutes] = response.data[i].time.split(\":\");\r\n\r\n        let appointmentsCopy = appointments;\r\n        appointmentsCopy[i] = {\r\n          ...appointmentsCopy[i],\r\n          id: response.data[i].id,\r\n          Subject: response.data[i].type,\r\n          StartTime: new Date(\r\n            Number(year),\r\n            Number(month) - 1,\r\n            Number(day),\r\n            Number(hour),\r\n            Number(minutes)\r\n          ),\r\n          EndTime: new Date(\r\n            Number(year),\r\n            Number(month) - 1,\r\n            Number(day),\r\n            Number(hour),\r\n            Number(minutes) + 30\r\n          ),\r\n        };\r\n\r\n        setAppointments(appointmentsCopy);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [user]);\r\n\r\n  console.log(appointments);\r\n\r\n  if (!user.configured) {\r\n    history.replace(\"/configurar\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"agenda\">\r\n        <HorizontalHeader title=\"Agenda\" />\r\n        <VerticalHeader colorIcon=\"agenda\" />\r\n        <div className=\"content\">\r\n          <ScheduleComponent\r\n            eventSettings={{ dataSource: appointments }}\r\n            actionBegin={(e: any) => {\r\n              console.log(e.data);\r\n            }}\r\n          >\r\n            <Inject\r\n              services={[\r\n                Day,\r\n                Week,\r\n                WorkWeek,\r\n                Month,\r\n                Agenda,\r\n                DragAndDrop,\r\n                Resize,\r\n              ]}\r\n            />\r\n          </ScheduleComponent>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AgendaComponent;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\ninterface BoxProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function Box({ children, style }: BoxProps) {\r\n  return (\r\n    <div className=\"box\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { IoStar } from \"react-icons/io5\";\r\n\r\ninterface StarsProps {\r\n  rating: number;\r\n  color?: string;\r\n  background?: string;\r\n}\r\n\r\nexport default function Stars({\r\n  rating,\r\n  color = \"#FFC107\",\r\n  background = \"#000\",\r\n}: StarsProps) {\r\n  let stars = [0, 0, 0, 0, 0];\r\n  for (let i = 0; i < 5; i++) {\r\n    if (1 <= rating - 1 * i) {\r\n      stars[i] = 1;\r\n    } else {\r\n      stars[i] = rating - 1 * i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {stars.map((star, index) => {\r\n        var id = \"id\" + Math.random().toString(16).slice(2);\r\n        var id2 = \"id\" + Math.random().toString(16).slice(2);\r\n\r\n        if (star) {\r\n          let percentage = (1 - star) * 30;\r\n          return (\r\n            <div style={{ position: \"relative\", width: 30, height: 30 }}>\r\n              <IoStar\r\n                key={index}\r\n                color={color}\r\n                size={30}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  clipPath: `inset(0 ${percentage}px 0 0)`,\r\n                  backgroundClip: \"#ccc\",\r\n                  zIndex: 2,\r\n                }}\r\n              />\r\n              <IoStar\r\n                key={id2}\r\n                color=\"#ccc\"\r\n                size={30}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  zIndex: 1,\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return <IoStar key={id} color={background} size={30} />;\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport HorizontalHeader from \"../../components-platform/HorizontalHeader\";\r\nimport VerticalHeader from \"../../components-platform/VerticalHeader\";\r\nimport Box from \"../../components/Box\";\r\nimport {\r\n  ExploreOutlined,\r\n  ListOutlined,\r\n  StraightenOutlined,\r\n  PinDropOutlined,\r\n} from \"@material-ui/icons\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport \"./styles.css\";\r\nimport api from \"../../services/api\";\r\nimport Stars from \"../../components/Stars\";\r\ninterface ScheduleItem {\r\n  week_day: number | undefined;\r\n  from: number;\r\n  to: number;\r\n}\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n  const [schedule, setSchedule] = useState(new Array<ScheduleItem>());\r\n  const date = new Date();\r\n  const dateString = date.toString();\r\n  const week_day = dateString.split(\" \")[0];\r\n\r\n  if (!user.configured) {\r\n    history.replace(\"/configurar\");\r\n  }\r\n\r\n  function getWeekday() {\r\n    switch (week_day) {\r\n      case \"Sun\":\r\n        return 0;\r\n      case \"Mon\":\r\n        return 1;\r\n      case \"Tue\":\r\n        return 2;\r\n      case \"Wed\":\r\n        return 3;\r\n      case \"Thu\":\r\n        return 4;\r\n      case \"Fri\":\r\n        return 5;\r\n      case \"Sat\":\r\n        return 6;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n  const today_week_day = schedule.filter(\r\n    (scheduleItem: ScheduleItem) => scheduleItem.week_day === getWeekday()\r\n  );\r\n\r\n  useEffect(() => {\r\n    api.get(`medic-schedule/${user.id}`).then((response) => {\r\n      setSchedule(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"perfil\">\r\n      <HorizontalHeader title=\"Meu Perfil\" />\r\n      <VerticalHeader colorIcon=\"profile\" />\r\n      <div className=\"content\">\r\n        <div>\r\n          <div className=\"left-side\">\r\n            <Box\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                padding: \"1rem 1rem 1.25rem\",\r\n              }}\r\n            >\r\n              <img\r\n                src={`https://avatars.dicebear.com/api/human/${\r\n                  user.firstName + user.lastName\r\n                }.svg`}\r\n                alt=\"Medic Profile\"\r\n              />\r\n              <h2>Dr. {user.firstName}</h2>\r\n              <span>{user.area}</span>\r\n            </Box>\r\n            <Box\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                padding: \"2rem\",\r\n              }}\r\n            >\r\n              <div className=\"appointment-button\">\r\n                <span>Agendar Consulta</span>\r\n              </div>\r\n            </Box>\r\n          </div>\r\n          <Box\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div className=\"right-side\">\r\n              <div className=\"hour\">\r\n                Horário de trabalho hoje:\r\n                {today_week_day.length > 0 ? (\r\n                  today_week_day.map((string: ScheduleItem, index: number) => {\r\n                    const formatedFrom = string.from / 60;\r\n                    const formatedTo = string.to / 60;\r\n\r\n                    const formatedFromString = formatedFrom.toString();\r\n                    const [hours, minutes] = formatedFromString.split(\".\");\r\n                    const min = Number(minutes) * 6;\r\n\r\n                    const formatedToString = formatedTo.toString();\r\n                    const [hoursTo, minutesTo] = formatedToString.split(\".\");\r\n                    const minTo = Number(minutesTo) * 6;\r\n\r\n                    return (\r\n                      <span key={index}>\r\n                        <span style={{ color: \"#3eb713\" }}>\r\n                          {hours}:{min.toString().substring(0, 2) || \"00\"} - {hoursTo}:{minTo.toString().substring(0, 2) || \"00\"}\r\n                        </span>\r\n                      </span>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <span style={{ fontSize: \"1.5rem\" }}>\r\n                    Médico descansando hoje 😴\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <h1>Onde Estou?</h1>\r\n              <div className=\"address\">\r\n                <div style={{ display: \"flex\" }}>\r\n                  <PinDropOutlined fontSize=\"large\" />\r\n                  {user.location.address}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <ListOutlined fontSize=\"large\" />\r\n                </div>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <StraightenOutlined fontSize=\"large\" />\r\n                  Lat: {user.location.lat} | Lon: {user.location.lon}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    color: \"var(--color-main)\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <ExploreOutlined fontSize=\"large\" />\r\n                  Ver no mapa\r\n                </div>\r\n              </div>\r\n              <div className=\"medic-profile-info-rating\">\r\n                <div className=\"medic-profile-info-rating-stars\">\r\n                  <Stars rating={Number(user.rating)} />\r\n                </div>\r\n\r\n                <h2>{Number(user.rating).toFixed(1)}</h2>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n        <div className=\"about\">\r\n          <Box\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <h3>Sobre Dr. {user.firstName}:</h3>\r\n            <ul>\r\n              <li>\r\n                <strong>Graduação: </strong>\r\n                {user.graduation}\r\n              </li>\r\n              {user.masterDegree && (\r\n                <li>\r\n                  <strong>Mestrado: </strong>\r\n                  {user.masterDegree}\r\n                </li>\r\n              )}\r\n              {user.doctorageDegree && (\r\n                <li>\r\n                  <strong>Doutorado: </strong>\r\n                  {user.doctorageDegree}\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport HorizontalHeader from \"../../components-platform/HorizontalHeader\";\r\nimport VerticalHeader from \"../../components-platform/VerticalHeader\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport \"./styles.css\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { useEffect } from \"react\";\r\nimport api from \"../../services/api\";\r\n\r\nconst Appointments = () => {\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Identificador\", width: 130 },\r\n    { field: \"type\", headerName: \"Tipo de consulta\", width: 300 },\r\n    { field: \"price\", headerName: \"Preço\", width: 120 },\r\n    { field: \"date\", headerName: \"Data\", width: 140 },\r\n    { field: \"time\", headerName: \"Hora\", width: 120 },\r\n    { field: \"first_name\", headerName: \"Nome paciente\", width: 240 },\r\n    { field: \"last_name\", headerName: \"Sobrenome paciente\", width: 240 },\r\n    { field: \"confirmed\", headerName: \"Confirmada\", width: 140 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`appointments?medicID=${user.id}`).then((response: any) => {\r\n      console.log(response);\r\n      setRows(response.data);\r\n      setLoading(false);\r\n    });\r\n  }, [setRows, user]);\r\n\r\n  if (!user.configured) {\r\n    history.replace(\"/configurar\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"agenda\">\r\n      <HorizontalHeader title=\"Consultas\" />\r\n      <VerticalHeader colorIcon=\"appointments\" />\r\n      <div style={{ backgroundColor: \"#fff\" }} className=\"content\">\r\n        <DataGrid\r\n          className=\"tabela\"\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={5}\r\n          checkboxSelection\r\n          onCellClick={(e) => {\r\n            console.log(e);\r\n          }}\r\n          loading={loading}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport HorizontalHeader from \"../../components-platform/HorizontalHeader\";\r\nimport VerticalHeader from \"../../components-platform/VerticalHeader\";\r\nimport Box from \"../../components/Box\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport api from \"../../services/api\";\r\n\r\nimport \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MedicSchedule {\r\n  id: number;\r\n  week_day: number;\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\ninterface Consult {\r\n  id: number;\r\n  type: string;\r\n  price: number;\r\n  description: string;\r\n}\r\n\r\nconst Configurations = () => {\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n  const [consults, setConsults] = useState<Array<Consult> | null>(null);\r\n  const [medicSchedule, setMedicSchedule] = useState<Array<MedicSchedule>>([]);\r\n  const [loadingConsults, setLoadingConsults] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setLoadingConsults(true);\r\n    api.get(`consult-type?medicID=${user.id}`).then((response: any) => {\r\n      setConsults(response.data);\r\n      setLoadingConsults(false);\r\n    });\r\n  }, [user.id]);\r\n\r\n  useEffect(() => {\r\n    setLoadingConsults(true);\r\n    api.get(`medic-schedule?medicID=${user.id}`).then((response: any) => {\r\n      setMedicSchedule(response.data);\r\n    });\r\n  }, [user.id]);\r\n\r\n  function getWeekDay(dayNumber: number) {\r\n    switch (dayNumber) {\r\n      case 0:\r\n        return \"Domingo\";\r\n      case 1:\r\n        return \"Segunda-feira\";\r\n      case 2:\r\n        return \"Terça-feira\";\r\n      case 3:\r\n        return \"Quarta-feira\";\r\n      case 4:\r\n        return \"Quinta-feira\";\r\n      case 5:\r\n        return \"Sexta-feira\";\r\n      case 6:\r\n        return \"Sábado\";\r\n    }\r\n  }\r\n\r\n  if (!user.configured) {\r\n    history.replace(\"/configurar\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"config\">\r\n      <HorizontalHeader title=\"Configurações\" />\r\n      <VerticalHeader colorIcon=\"configurations\" />\r\n      <div style={{ marginBottom: \"2rem\" }} className=\"content\">\r\n        <Box style={{ position: \"relative\" }}>\r\n          <h3>Dados da Clínica</h3>\r\n          <div className=\"data\">\r\n            <p>\r\n              <strong>Endereço:</strong>\r\n              {user?.location?.address.replace(\"State of\", \"\")}\r\n            </p>\r\n            <p>\r\n              <strong>Número:</strong>\r\n              {user?.location?.number}\r\n            </p>\r\n            <Link\r\n              to=\"/configuracoes/endereco\"\r\n              className=\"clinic-data-edit-icon\"\r\n            >\r\n              <EditIcon\r\n                fontSize=\"large\"\r\n                style={{\r\n                  color: \"#fff\",\r\n                }}\r\n              />\r\n            </Link>\r\n          </div>\r\n        </Box>\r\n        <Box>\r\n          <h3>Dados Bancários</h3>\r\n          <div className=\"data\">\r\n            <p>\r\n              <strong>Conta: </strong>**********\r\n            </p>\r\n            <p>\r\n              <strong>Número: </strong>**********\r\n            </p>\r\n          </div>\r\n        </Box>\r\n        <Box>\r\n          <h3>Dados de Consulta</h3>\r\n          <div className=\"data\">\r\n            {loadingConsults ? (\r\n              <Loader\r\n                type=\"TailSpin\"\r\n                color=\"var(--color-button-primary)\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              consults!.map((consult, i) => {\r\n                return (\r\n                  <Accordion key={i}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                      <span>{consult?.type}</span>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <p>\r\n                        {consult?.description\r\n                          ? consult?.description\r\n                          : \"Essa Consulta não possui uma descrição\"}\r\n                      </p>\r\n                    </AccordionDetails>\r\n                    <AccordionDetails>\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <p>Preço: {consult?.price}</p>\r\n                        <Link\r\n                          to={`/configuracoes/consultas/${consult?.id}`}\r\n                          className=\"consult-edit-icon\"\r\n                        >\r\n                          <EditIcon\r\n                            style={{\r\n                              color: \"#fff\",\r\n                            }}\r\n                          />\r\n                        </Link>\r\n                      </div>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </Box>\r\n        <Box style={{ marginTop: \"1rem\" }}>\r\n          <h3>Horários semanais</h3>\r\n          <div className=\"data\">\r\n            {loadingConsults ? (\r\n              <Loader\r\n                type=\"TailSpin\"\r\n                color=\"var(--color-button-primary)\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              medicSchedule.map((schedule, i) => {\r\n                const week_day = getWeekDay(schedule?.week_day);\r\n                // FROM\r\n                const totalFrom = Number(schedule?.from) / 60;\r\n                const [totalFromHour, totalFromMinute] = totalFrom\r\n                  .toString()\r\n                  .split(\".\");\r\n                const totalStringFromMinute = `${totalFromMinute}`;\r\n                const formattedTotalFromMinute =\r\n                  totalStringFromMinute.substring(0, 1);\r\n                const FromMinute = Number(formattedTotalFromMinute) * 6;\r\n\r\n                // TO\r\n                const totalTo = Number(schedule?.to) / 60;\r\n                const [totalToHour, totalToMinute] = totalTo\r\n                  .toString()\r\n                  .split(\".\");\r\n                const totalStringToMinute = `${totalToMinute}`;\r\n                const formattedTotalToMinute = totalStringToMinute.substring(\r\n                  0,\r\n                  1\r\n                );\r\n                const ToMinute = Number(formattedTotalToMinute) * 6;\r\n\r\n                return (\r\n                  <Accordion key={i}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                      <span>{week_day}</span>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <p>\r\n                        {totalFromHour}:{isNaN(FromMinute) ? \"00\" : FromMinute}{\" \"}\r\n                        - {totalToHour}:{isNaN(ToMinute) ? \"00\" : ToMinute}\r\n                      </p>\r\n                    </AccordionDetails>\r\n                    <AccordionDetails>\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Link\r\n                          to={`/configuracoes/horarios/${schedule?.id}`}\r\n                          className=\"consult-edit-icon\"\r\n                        >\r\n                          <EditIcon\r\n                            style={{\r\n                              color: \"#fff\",\r\n                            }}\r\n                          />\r\n                        </Link>\r\n                      </div>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              })\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Configurations;\r\n","import React, { createContext, useContext, useState } from \"react\";\r\nimport { BankData } from \"../components-platform/ConfigureMedicPages/BankData\";\r\nimport { InvoiceAddressProps } from \"../components-platform/ConfigureMedicPages/InvoiceAddress\";\r\n\r\ninterface MedicConfigureData {\r\n  appointments: Array<Appointment>;\r\n  address: string;\r\n  number: string;\r\n  lat: number | null;\r\n  lon: number | null;\r\n  bankData: BankData;\r\n  invoiceAddress: InvoiceAddressProps;\r\n}\r\n\r\ninterface Appointment {\r\n  name: string;\r\n  price: string;\r\n}\r\n\r\ninterface ShareMedicConfigureFormContextData {\r\n  medicDataConfigure: MedicConfigureData;\r\n  setMedicDataConfigure: React.Dispatch<\r\n    React.SetStateAction<MedicConfigureData>\r\n  >;\r\n}\r\n\r\ninterface ShareClientFormProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ShareMedicConfigureFormContext = createContext(\r\n  {} as ShareMedicConfigureFormContextData\r\n);\r\n\r\nexport default function ShareClientFormProvider({\r\n  children,\r\n}: ShareClientFormProviderProps) {\r\n  const [medicDataConfigure, setMedicDataConfigure] =\r\n    useState<MedicConfigureData>({\r\n      appointments: [\r\n        {\r\n          name: \"Consulta simples\",\r\n          price: \"200\",\r\n        },\r\n      ],\r\n      address: \"\",\r\n      number: \"\",\r\n      lat: null,\r\n      lon: null,\r\n      bankData: {\r\n        bankNumber: \"\",\r\n        agencyNumber: \"\",\r\n        accountNumber: \"\",\r\n        accountCheckNumber: \"\",\r\n        fullName: \"\",\r\n        cpf: \"\",\r\n      },\r\n      invoiceAddress: {\r\n        street: \"\",\r\n        streetNumber: \"\",\r\n        district: \"\",\r\n        zipCode: \"\",\r\n        city: \"\",\r\n        state: \"SP\",\r\n      },\r\n    } as MedicConfigureData);\r\n\r\n  let value = {\r\n    medicDataConfigure,\r\n    setMedicDataConfigure,\r\n  } as ShareMedicConfigureFormContextData;\r\n\r\n  return (\r\n    <ShareMedicConfigureFormContext.Provider value={value}>\r\n      {children}\r\n    </ShareMedicConfigureFormContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useShareFormMedicConfigure() {\r\n  return useContext(ShareMedicConfigureFormContext);\r\n}\r\n","import { BankData } from \"../components-platform/ConfigureMedicPages/BankData\";\r\nimport { InvoiceAddressProps } from \"../components-platform/ConfigureMedicPages/InvoiceAddress\";\r\nimport convertHourToMinutes from \"./convertHourToMinute\";\r\nimport validateCPF from \"./validateCpf\";\r\n\r\ninterface Appointment {\r\n  name: string;\r\n  price: string;\r\n}\r\n\r\ninterface MedicConfigureData {\r\n  appointments: Array<Appointment>;\r\n  address: string;\r\n  number: string;\r\n  lat: number | null;\r\n  lon: number | null;\r\n  bankData: BankData;\r\n  invoiceAddress: InvoiceAddressProps;\r\n}\r\n\r\ninterface MedicConfigureDataErrors {\r\n  appointments: Array<string>;\r\n  address: string;\r\n  number: string;\r\n  lat: number | null;\r\n  lon: number | null;\r\n  bankData: BankData;\r\n  invoiceAddress: InvoiceAddressProps;\r\n}\r\n\r\nexport default function refreshUserValidate(credentials: MedicConfigureData) {\r\n  let errors = {\r\n    appointments: new Array<string>(),\r\n  } as MedicConfigureDataErrors;\r\n\r\n  if (credentials !== null) {\r\n    if (!credentials?.appointments?.length) {\r\n      if (errors.appointments.length > 0) {\r\n        errors.appointments[0] =\r\n          \"Você precisa informar pelo menos um dia da semana.\";\r\n      } else {\r\n        errors.appointments.push(\r\n          \"Você precisa informar pelo menos um dia da semana.\"\r\n        );\r\n      }\r\n    } else if (typeof credentials.appointments !== \"string\") {\r\n      let i = 0;\r\n      for (let appointment of credentials?.appointments) {\r\n        console.log(appointment);\r\n        if (\r\n          appointment.name.length === 0 ||\r\n          appointment.price.length === 0 ||\r\n          Number(appointment.price) < 0\r\n        ) {\r\n          if (errors?.appointments?.length < i) {\r\n            errors.appointments[i] = \"Preço ou nome vazios\";\r\n          } else {\r\n            errors.appointments.push(\"Preço ou nome vazios\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!credentials?.address?.length ?? 0) {\r\n      errors.address = \"Campo de endereço é necessário.\";\r\n    }\r\n\r\n    if (!credentials?.number?.length ?? 0) {\r\n      errors.number = \"Campo de número é necessário\";\r\n    } else if (isNaN(parseInt(credentials?.number))) {\r\n      errors.number = \"Campo de número é inválido\";\r\n    }\r\n\r\n    // Bank Data\r\n\r\n    if (!credentials?.bankData?.bankNumber?.length ?? 0) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.bankNumber = \"Campo de número do banco necessário\";\r\n    } else if (credentials?.bankData?.bankNumber?.length !== 3) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.bankNumber = \"Campo de número do banco inválido\";\r\n    } else if (isNaN(parseInt(credentials?.bankData?.bankNumber))) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.bankNumber = \"Campo de número do banco inválido\";\r\n    }\r\n\r\n    if (!credentials?.bankData?.agencyNumber?.length ?? 0) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.agencyNumber = \"Campo de número da agência necessário\";\r\n    } else if (isNaN(parseInt(credentials?.bankData?.agencyNumber))) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.agencyNumber = \"Campo de número da agência inválido\";\r\n    } else if (credentials?.bankData?.agencyNumber?.length > 5) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.agencyNumber = \"Campo de número da agência inválido\";\r\n    }\r\n\r\n    if (!credentials?.bankData?.accountNumber?.length ?? 0) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.accountNumber = \"Campo de número da conta necessário\";\r\n    } else if (credentials?.bankData?.accountNumber?.length! > 12) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.accountNumber = \"Campo de número da conta inválido\";\r\n    } else if (isNaN(parseInt(credentials?.bankData?.accountNumber))) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.accountNumber = \"Campo de número da conta inválido\";\r\n    }\r\n\r\n    if (credentials?.bankData?.accountCheckNumber?.length > 2) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.accountCheckNumber =\r\n        \"Campo de dígito verificador da conta necessário\";\r\n    }\r\n    if (!credentials?.bankData?.fullName?.length ?? 0) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.fullName = \"Campo de nome é necessário\";\r\n    }\r\n\r\n    const cpfNumbers = credentials?.bankData?.cpf?.replace(/[-. ]/g, \"\") ?? \"0\";\r\n\r\n    if (!cpfNumbers?.length ?? 0) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.cpf = \"Campo de CPF é necessário\";\r\n    } else if (isNaN(parseInt(cpfNumbers))) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.cpf = \"Caracteres não aceitos\";\r\n    } else if (validateCPF({ cpf: cpfNumbers })) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.cpf = \"CPF inválido\";\r\n    }\r\n\r\n    if (!credentials?.bankData?.birthDate?.length ?? 0) {\r\n      errors.bankData = {\r\n        ...errors.bankData,\r\n      } as BankData;\r\n\r\n      errors.bankData.birthDate = \"Campo de data de nascimento é necessário\";\r\n    } else {\r\n      let year = new Date(credentials?.bankData?.birthDate).getFullYear();\r\n      let month = new Date(credentials?.bankData?.birthDate).getMonth() + 1;\r\n      let day = new Date(credentials?.bankData?.birthDate).getDate();\r\n      if (new Date().getFullYear() - year >= 18) {\r\n        if (new Date().getFullYear() - year === 18) {\r\n          if (new Date().getMonth() + 1 - month >= 0) {\r\n            if (new Date().getDate() - day <= 0) {\r\n              errors.bankData = {\r\n                ...errors.bankData,\r\n              } as BankData;\r\n              errors.bankData.birthDate = \"Você precisa ser maior de 18 anos\";\r\n            }\r\n          } else {\r\n            errors.bankData = {\r\n              ...errors.bankData,\r\n            } as BankData;\r\n            errors.bankData.birthDate = \"Você precisa ser maior de 18 anos\";\r\n          }\r\n        }\r\n      } else {\r\n        errors.bankData = {\r\n          ...errors.bankData,\r\n        } as BankData;\r\n        errors.bankData.birthDate = \"Você precisa ser maior de 18 anos\";\r\n      }\r\n    }\r\n\r\n    // Invoice Address\r\n\r\n    if (!credentials?.invoiceAddress?.street?.length ?? 0) {\r\n      errors.invoiceAddress = {\r\n        ...errors.invoiceAddress,\r\n      } as InvoiceAddressProps;\r\n\r\n      errors.invoiceAddress.street = \"Campo de rua necessário\";\r\n    }\r\n\r\n    if (!credentials?.invoiceAddress?.streetNumber?.length ?? 0) {\r\n      errors.invoiceAddress = {\r\n        ...errors.invoiceAddress,\r\n      } as InvoiceAddressProps;\r\n\r\n      errors.invoiceAddress.streetNumber = \"Campo de número é necessário\";\r\n    }\r\n\r\n    if (!credentials?.invoiceAddress?.complement?.length ?? 0) {\r\n      errors.invoiceAddress = {\r\n        ...errors.invoiceAddress,\r\n      } as InvoiceAddressProps;\r\n\r\n      errors.invoiceAddress.complement = \"Campo de complemento é necessário\";\r\n    }\r\n\r\n    if (!credentials?.invoiceAddress?.district?.length ?? 0) {\r\n      errors.invoiceAddress = {\r\n        ...errors.invoiceAddress,\r\n      } as InvoiceAddressProps;\r\n\r\n      errors.invoiceAddress.district = \"Campo de bairro é necessário\";\r\n    }\r\n\r\n    if (!credentials?.invoiceAddress?.zipCode?.length ?? 0) {\r\n      errors.invoiceAddress = {\r\n        ...errors.invoiceAddress,\r\n      } as InvoiceAddressProps;\r\n\r\n      errors.invoiceAddress.zipCode = \"Campo de CEP é necessário\";\r\n    }\r\n\r\n    if (!credentials?.invoiceAddress?.city?.length ?? 0) {\r\n      errors.invoiceAddress = {\r\n        ...errors.invoiceAddress,\r\n      } as InvoiceAddressProps;\r\n\r\n      errors.invoiceAddress.city = \"Campo de cidade é necessário\";\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IoAddOutline } from \"react-icons/io5\";\r\nimport { useShareFormMedicConfigure } from \"../../../context/ShareMedicConfigureFormProvider\";\r\nimport { PagesProps } from \"../../../platform-pages/ConfigureMedic\";\r\nimport validateConfigureMedic from \"../../../utils/validateConfigureMedic\";\r\nimport \"./styles.css\";\r\n\r\nconst AppointmentInfo = ({ previousPage, nextPage }: PagesProps) => {\r\n  const [appointmentError, setAppointmentError] = useState(\"\");\r\n  const { medicDataConfigure, setMedicDataConfigure } =\r\n    useShareFormMedicConfigure();\r\n  const [errors, setErrors] = useState(\r\n    validateConfigureMedic(medicDataConfigure)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setErrors(validateConfigureMedic(medicDataConfigure));\r\n  }, [medicDataConfigure]);\r\n\r\n  function addNewAppointmentItem() {\r\n    if (medicDataConfigure.appointments.length >= 3) {\r\n      setAppointmentError(\"Número de tipos de consultas atingiu o limite\");\r\n    } else {\r\n      setAppointmentError(\"\");\r\n      setMedicDataConfigure({\r\n        ...medicDataConfigure,\r\n        appointments: [\r\n          ...medicDataConfigure.appointments,\r\n          {\r\n            name: \"\",\r\n            price: \"\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  function setAppointmentItemValue(\r\n    position: number,\r\n    field: string,\r\n    value: string\r\n  ) {\r\n    const newAppointmentItems = medicDataConfigure.appointments.map(\r\n      (appointment, index) => {\r\n        if (index === position) {\r\n          return { ...appointment, [field]: value };\r\n        }\r\n        return appointment;\r\n      }\r\n    );\r\n    setMedicDataConfigure({\r\n      ...medicDataConfigure,\r\n      appointments: newAppointmentItems,\r\n    });\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <div\r\n      style={{ justifyContent: \"space-between\", padding: \"2.5rem\" }}\r\n      className=\"landing\"\r\n    >\r\n      <div style={{ width: \"100%\" }}>\r\n        <div className=\"landing-flex\">\r\n          <h1 className=\"landing-flex-h1\">\r\n            Nos informe o preço e o nome de suas consultas\r\n          </h1>\r\n          <button onClick={addNewAppointmentItem} className=\"add-button\">\r\n            <IoAddOutline color=\"#07B3D6\" size=\"2.5rem\" />\r\n            Novo\r\n          </button>\r\n        </div>\r\n        <div className=\"line-global\"></div>\r\n        {medicDataConfigure.appointments.map((appointment, index) => {\r\n          return (\r\n            <>\r\n              <div\r\n                key={index}\r\n                style={{ marginTop: \"2rem\" }}\r\n                className=\"landing-flex\"\r\n              >\r\n                <TextField\r\n                  value={appointment.name}\r\n                  style={{ width: \"48%\" }}\r\n                  label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n                  variant=\"outlined\"\r\n                  onChange={(e: any) => {\r\n                    setAppointmentItemValue(index, \"name\", e.target.value);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  value={appointment.price}\r\n                  style={{ width: \"48%\" }}\r\n                  label={<span style={{ fontSize: \"1.5rem\" }}>Preço</span>}\r\n                  variant=\"outlined\"\r\n                  onChange={(e: any) => {\r\n                    setAppointmentItemValue(index, \"price\", e.target.value);\r\n                  }}\r\n                  type=\"number\"\r\n                />\r\n              </div>\r\n              <p\r\n                style={{\r\n                  margin: \"2rem 0\",\r\n                  color: \"#f00\",\r\n                  fontSize: \"2rem\",\r\n                  fontWeight: \"bold\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {errors.appointments.length >= index\r\n                  ? errors.appointments[index]\r\n                  : null}\r\n              </p>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n      <span style={{ color: \"#f00\", fontSize: \"2rem\" }}>\r\n        {appointmentError}\r\n      </span>\r\n      <div className=\"landing-buttons\">\r\n        <button\r\n          onClick={previousPage}\r\n          style={{ width: \"100%\" }}\r\n          className=\"previous\"\r\n        >\r\n          Anterior\r\n        </button>\r\n        <button onClick={nextPage} style={{ width: \"100%\" }} className=\"next\">\r\n          Próximo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { PagesProps } from \"../../../platform-pages/ConfigureMedic\";\r\nimport validateConfigureMedic from \"../../../utils/validateConfigureMedic\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useShareFormMedicConfigure } from \"../../../context/ShareMedicConfigureFormProvider\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport mask from \"../../../utils/mask\";\r\n\r\nexport interface BankData {\r\n  bankNumber: string;\r\n  agencyNumber: string;\r\n  accountNumber: string;\r\n  accountCheckNumber: string;\r\n  fullName: string;\r\n  cpf: string;\r\n  birthDate: string;\r\n}\r\n\r\nconst BankData = ({ previousPage, nextPage }: PagesProps) => {\r\n  const { medicDataConfigure, setMedicDataConfigure } =\r\n    useShareFormMedicConfigure();\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState(\r\n    validateConfigureMedic(medicDataConfigure)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setErrors(validateConfigureMedic(medicDataConfigure));\r\n  }, [medicDataConfigure]);\r\n\r\n  return (\r\n    <div\r\n      style={{ justifyContent: \"space-between\", padding: \"2.5rem\" }}\r\n      className=\"landing\"\r\n    >\r\n      <div style={{ width: \"100%\" }}>\r\n        <div className=\"landing-flex\">\r\n          <h1 className=\"landing-flex-h1\">Dados bancários</h1>\r\n        </div>\r\n        <div className=\"line-global\"></div>\r\n        <div style={{ marginTop: \"2rem\" }} className=\"landing-flex\">\r\n          <TextField\r\n            value={medicDataConfigure.bankData.bankNumber}\r\n            style={{ width: \"48%\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Número do banco</span>}\r\n            variant=\"outlined\"\r\n            onChange={(e: any) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                bankData: {\r\n                  ...medicDataConfigure.bankData,\r\n                  bankNumber: e.target.value,\r\n                } as BankData,\r\n              });\r\n            }}\r\n            error={errors?.bankData?.bankNumber ? true : false}\r\n            helperText={errors?.bankData?.bankNumber}\r\n          />\r\n          <TextField\r\n            value={medicDataConfigure?.bankData?.agencyNumber}\r\n            style={{ width: \"48%\" }}\r\n            label={\r\n              <span style={{ fontSize: \"1.5rem\" }}>Número da agência</span>\r\n            }\r\n            variant=\"outlined\"\r\n            onChange={(e: any) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                bankData: {\r\n                  ...medicDataConfigure.bankData,\r\n                  agencyNumber: e.target.value,\r\n                } as BankData,\r\n              });\r\n            }}\r\n            error={errors?.bankData?.agencyNumber ? true : false}\r\n            helperText={errors?.bankData?.agencyNumber}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: \"2rem\" }} className=\"landing-flex\">\r\n          <TextField\r\n            value={medicDataConfigure.bankData.accountNumber}\r\n            style={{ width: \"48%\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Número da conta</span>}\r\n            variant=\"outlined\"\r\n            onChange={(e: any) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                bankData: {\r\n                  ...medicDataConfigure.bankData,\r\n                  accountNumber: e.target.value,\r\n                } as BankData,\r\n              });\r\n            }}\r\n            error={errors?.bankData?.accountNumber ? true : false}\r\n            helperText={errors?.bankData?.accountNumber}\r\n          />\r\n          <TextField\r\n            value={medicDataConfigure.bankData.accountCheckNumber}\r\n            style={{ width: \"48%\" }}\r\n            label={\r\n              <span style={{ fontSize: \"1.5rem\" }}>\r\n                Dígito verificador da conta\r\n              </span>\r\n            }\r\n            variant=\"outlined\"\r\n            onChange={(e: any) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                bankData: {\r\n                  ...medicDataConfigure.bankData,\r\n                  accountCheckNumber: e.target.value,\r\n                } as BankData,\r\n              });\r\n            }}\r\n            error={errors?.bankData?.accountCheckNumber ? true : false}\r\n            helperText={errors?.bankData?.accountCheckNumber}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: \"2rem\" }} className=\"landing-flex\">\r\n          <TextField\r\n            value={medicDataConfigure.bankData.fullName}\r\n            fullWidth\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Nome completo</span>}\r\n            variant=\"outlined\"\r\n            onChange={(e: any) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                bankData: {\r\n                  ...medicDataConfigure.bankData,\r\n                  fullName: e.target.value,\r\n                } as BankData,\r\n              });\r\n            }}\r\n            error={errors?.bankData?.fullName ? true : false}\r\n            helperText={errors?.bankData?.fullName}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: \"2rem\" }} className=\"landing-flex\">\r\n          <TextField\r\n            value={medicDataConfigure.bankData.cpf}\r\n            style={{ width: \"48%\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>CPF</span>}\r\n            variant=\"outlined\"\r\n            onChange={(e: any) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                bankData: {\r\n                  ...medicDataConfigure.bankData,\r\n                  cpf: mask(e.target.value, \"###.###.###-##\"),\r\n                } as BankData,\r\n              });\r\n            }}\r\n            error={errors?.bankData?.cpf ? true : false}\r\n            helperText={errors?.bankData?.cpf}\r\n          />\r\n          <TextField\r\n            value={medicDataConfigure.bankData.birthDate}\r\n            style={{ width: \"48%\" }}\r\n            label={\r\n              <span style={{ fontSize: \"1.5rem\" }}>Data de nascimento</span>\r\n            }\r\n            variant=\"outlined\"\r\n            type=\"date\"\r\n            onChange={(e: any) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                bankData: {\r\n                  ...medicDataConfigure.bankData,\r\n                  birthDate: e.target.value,\r\n                } as BankData,\r\n              });\r\n            }}\r\n            error={errors?.bankData?.birthDate ? true : false}\r\n            helperText={errors?.bankData?.birthDate}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ width: \"100%\" }}>\r\n        <button\r\n          onClick={previousPage}\r\n          style={{ width: \"100%\" }}\r\n          className=\"previous\"\r\n        >\r\n          Anterior\r\n        </button>\r\n        <button onClick={nextPage} style={{ width: \"100%\" }} className=\"next\">\r\n          {loading ? (\r\n            <Loader type=\"TailSpin\" color=\"#fff\" height={30} width={30} />\r\n          ) : (\r\n            \"Próximo\"\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BankData;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { useShareFormMedicConfigure } from \"../../../context/ShareMedicConfigureFormProvider\";\r\nimport { PagesProps } from \"../../../platform-pages/ConfigureMedic\";\r\nimport \"./styles.css\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport validateConfigureMedic from \"../../../utils/validateConfigureMedic\";\r\n\r\nconst ClinicAddress = ({ previousPage, nextPage }: PagesProps) => {\r\n  const { medicDataConfigure, setMedicDataConfigure } =\r\n    useShareFormMedicConfigure();\r\n  const [errors, setErrors] = useState(\r\n    validateConfigureMedic(medicDataConfigure)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setErrors(validateConfigureMedic(medicDataConfigure));\r\n  }, [medicDataConfigure]);\r\n\r\n  const handleSelect = async (value: any) => {\r\n    setMedicDataConfigure({\r\n      ...medicDataConfigure,\r\n      address: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ justifyContent: \"space-between\", padding: \"2.5rem\" }}\r\n      className=\"landing\"\r\n    >\r\n      <div style={{ width: \"100%\" }}>\r\n        <div className=\"landing-flex\">\r\n          <h1 className=\"landing-flex-h1\">Endereço da clínica</h1>\r\n        </div>\r\n        <div className=\"line-global\"></div>\r\n        <div style={{ marginTop: \"2rem\" }} className=\"landing-flex\">\r\n          <PlacesAutocomplete\r\n            value={medicDataConfigure.address}\r\n            onChange={async (e) => {\r\n              setMedicDataConfigure({ ...medicDataConfigure, address: e });\r\n            }}\r\n            onSelect={handleSelect}\r\n          >\r\n            {({\r\n              getInputProps,\r\n              suggestions,\r\n              getSuggestionItemProps,\r\n              loading,\r\n            }) => (\r\n              <div style={{ width: \"83%\" }}>\r\n                <TextField\r\n                  {...getInputProps({ placeholder: \"Digite o endereço\" })}\r\n                  fullWidth\r\n                  label={<span style={{ fontSize: \"1.5rem\" }}>Endereço</span>}\r\n                  variant=\"outlined\"\r\n                  error={errors.address ? true : false}\r\n                  helperText={errors.address}\r\n                />\r\n\r\n                <div>\r\n                  {loading && (\r\n                    <Loader\r\n                      type=\"TailSpin\"\r\n                      color=\"var(--color-button-primary)\"\r\n                      height={30}\r\n                      width={30}\r\n                    />\r\n                  )}\r\n\r\n                  {suggestions.map((suggestion) => {\r\n                    const style = {\r\n                      backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\r\n                      padding: \"1rem\",\r\n                      border: \"1px solid #1976d2\",\r\n                      transition: \"all ease-in-out 0.2s\",\r\n                    };\r\n\r\n                    return (\r\n                      <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                        {suggestion.description}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </PlacesAutocomplete>\r\n          <TextField\r\n            value={medicDataConfigure.number}\r\n            onChange={(e) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                number: e.target.value,\r\n              });\r\n            }}\r\n            style={{ width: \"15%\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Número</span>}\r\n            variant=\"outlined\"\r\n            error={errors.number ? true : false}\r\n            helperText={errors.number}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"landing-buttons\">\r\n        <button\r\n          onClick={previousPage}\r\n          style={{ width: \"100%\" }}\r\n          className=\"previous\"\r\n        >\r\n          Anterior\r\n        </button>\r\n        <button onClick={nextPage} style={{ width: \"100%\" }} className=\"next\">\r\n          Próximo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicAddress;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { useShareFormMedicConfigure } from \"../../../context/ShareMedicConfigureFormProvider\";\r\nimport { PagesProps } from \"../../../platform-pages/ConfigureMedic\";\r\nimport \"./styles.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport validateConfigureMedic from \"../../../utils/validateConfigureMedic\";\r\nimport Select from \"react-select\";\r\nimport api from \"../../../services/api\";\r\nimport { useAuth } from \"../../../context/AuthProvider\";\r\nimport mask from \"../../../utils/mask\";\r\nimport { useModal } from \"../../../context/ModalProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport interface InvoiceAddressProps {\r\n  street: string;\r\n  streetNumber: string;\r\n  complement: string;\r\n  district: string;\r\n  zipCode: string;\r\n  city: string;\r\n  state: string;\r\n}\r\n\r\nconst InvoiceAddress = ({ previousPage, nextPage }: PagesProps) => {\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const { spinner } = useModal();\r\n\r\n  const estados = [\r\n    { value: \"AC\", label: \"Acre\" },\r\n    { value: \"AL\", label: \"Alagoas\" },\r\n    { value: \"AP\", label: \"Amapá\" },\r\n    { value: \"AM\", label: \"Amazonas\" },\r\n    { value: \"BA\", label: \"Bahia\" },\r\n    { value: \"CE\", label: \"Ceará\" },\r\n    { value: \"DF\", label: \"Distrito Federal\" },\r\n    { value: \"ES\", label: \"Espirito Santo\" },\r\n    { value: \"GO\", label: \"Goiás\" },\r\n    { value: \"MA\", label: \"Maranhão\" },\r\n    { value: \"MS\", label: \"Mato Grosso do Sul\" },\r\n    { value: \"MT\", label: \"Mato Grosso\" },\r\n    { value: \"MG\", label: \"Minas Gerais\" },\r\n    { value: \"PA\", label: \"Pará\" },\r\n    { value: \"PB\", label: \"Paraíba\" },\r\n    { value: \"PR\", label: \"Paraná\" },\r\n    { value: \"PE\", label: \"Pernambuco\" },\r\n    { value: \"PI\", label: \"Piauí\" },\r\n    { value: \"RJ\", label: \"Rio de Janeiro\" },\r\n    { value: \"RN\", label: \"Rio Grande do Norte\" },\r\n    { value: \"RS\", label: \"Rio Grande do Sul\" },\r\n    { value: \"RO\", label: \"Rondônia\" },\r\n    { value: \"RR\", label: \"Roraima\" },\r\n    { value: \"SC\", label: \"Santa Catarina\" },\r\n    { value: \"SP\", label: \"São Paulo\" },\r\n    { value: \"SE\", label: \"Sergipe\" },\r\n    { value: \"TO\", label: \"Tocantins\" },\r\n  ];\r\n  const [hasError, setHasError] = useState(false);\r\n  const { userID } = useAuth();\r\n  const [medicID, setMedicID] = useState(\"\");\r\n\r\n  const { medicDataConfigure, setMedicDataConfigure } =\r\n    useShareFormMedicConfigure();\r\n  const [errors, setErrors] = useState(\r\n    validateConfigureMedic(medicDataConfigure)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setErrors(validateConfigureMedic(medicDataConfigure));\r\n  }, [medicDataConfigure]);\r\n\r\n  useEffect(() => {\r\n    api.get(`medics?id=${userID}`).then((response: any) => {\r\n      setMedicID(response.data.id);\r\n    });\r\n  }, [userID]);\r\n\r\n  function handleConfigureProfile() {\r\n    spinner.open();\r\n    const loopedErrors = Object.values(errors);\r\n\r\n    if (loopedErrors.length > 0) {\r\n      setHasError(true);\r\n      spinner.close();\r\n    } else {\r\n      setHasError(false);\r\n      api\r\n        .post(`configure-medic?medicID=${medicID}&userID=${userID}`, {\r\n          bankData: medicDataConfigure.bankData,\r\n          invoiceAddress: medicDataConfigure.invoiceAddress,\r\n        })\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            api\r\n              .post(\r\n                `configure-medic/${response.data.moipAccountId}?accessToken=${response.data.accessToken}&medicID=${medicID}&userID=${userID}`,\r\n                {\r\n                  bankData: medicDataConfigure.bankData,\r\n                  appointments: medicDataConfigure.appointments,\r\n                  number: medicDataConfigure.number,\r\n                  address: medicDataConfigure.address,\r\n                  lat: null,\r\n                  lon: null,\r\n                }\r\n              )\r\n              .then((res: any) => {\r\n                if (res.status === 201) {\r\n                  nextPage();\r\n                } else {\r\n                  spinner.close();\r\n                  setError(\r\n                    \"Erro ao realizar o cadastro, revise seus dados ou tente novamente mais tarde...\"\r\n                  );\r\n                }\r\n              })\r\n              .then(() => {\r\n                history.replace(\"/configuracoes\");\r\n              });\r\n          }\r\n          spinner.close();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          spinner.close();\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ justifyContent: \"space-between\", padding: \"2.5rem\" }}\r\n      className=\"landing\"\r\n    >\r\n      <div style={{ width: \"100%\" }}>\r\n        <div className=\"landing-flex\">\r\n          <h1 className=\"landing-flex-h1\">Endereço de fatura</h1>\r\n        </div>\r\n        <div className=\"line-global\"></div>\r\n        <div style={{ marginTop: \"2rem\" }} className=\"landing-flex\">\r\n          <div style={{ width: \"83%\" }}>\r\n            <TextField\r\n              value={medicDataConfigure.invoiceAddress.street}\r\n              placeholder=\"Digite o label da rua\"\r\n              fullWidth\r\n              label={<span style={{ fontSize: \"1.5rem\" }}>Rua</span>}\r\n              variant=\"outlined\"\r\n              error={errors?.invoiceAddress?.street ? true : false}\r\n              helperText={errors?.invoiceAddress?.street}\r\n              onChange={async (e) => {\r\n                setMedicDataConfigure({\r\n                  ...medicDataConfigure,\r\n                  invoiceAddress: {\r\n                    ...medicDataConfigure.invoiceAddress,\r\n                    street: e.target.value,\r\n                  } as InvoiceAddressProps,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <TextField\r\n            value={medicDataConfigure.invoiceAddress.streetNumber}\r\n            placeholder=\"Digite o número\"\r\n            style={{ width: \"15%\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Número</span>}\r\n            variant=\"outlined\"\r\n            error={errors?.invoiceAddress?.streetNumber ? true : false}\r\n            helperText={errors?.invoiceAddress?.streetNumber}\r\n            onChange={async (e) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                invoiceAddress: {\r\n                  ...medicDataConfigure.invoiceAddress,\r\n                  streetNumber: e.target.value,\r\n                } as InvoiceAddressProps,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: \"2rem\" }} className=\"landing-flex\">\r\n          <TextField\r\n            value={medicDataConfigure.invoiceAddress.complement}\r\n            placeholder=\"Digite o complemento\"\r\n            style={{ width: \"49%\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Complemento</span>}\r\n            variant=\"outlined\"\r\n            error={errors?.invoiceAddress?.complement ? true : false}\r\n            helperText={errors?.invoiceAddress?.complement}\r\n            onChange={async (e) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                invoiceAddress: {\r\n                  ...medicDataConfigure.invoiceAddress,\r\n                  complement: e.target.value,\r\n                } as InvoiceAddressProps,\r\n              });\r\n            }}\r\n          />\r\n          <TextField\r\n            value={medicDataConfigure.invoiceAddress.district}\r\n            placeholder=\"Digite o bairro\"\r\n            style={{ width: \"49%\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Bairro</span>}\r\n            variant=\"outlined\"\r\n            error={errors?.invoiceAddress?.district ? true : false}\r\n            helperText={errors?.invoiceAddress?.district}\r\n            onChange={async (e) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                invoiceAddress: {\r\n                  ...medicDataConfigure.invoiceAddress,\r\n                  district: e.target.value,\r\n                } as InvoiceAddressProps,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={{ marginTop: \"2rem\" }} className=\"landing-flex\">\r\n          <TextField\r\n            value={medicDataConfigure.invoiceAddress.zipCode}\r\n            placeholder=\"Digite o CEP\"\r\n            style={{ width: \"25%\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>CEP</span>}\r\n            variant=\"outlined\"\r\n            error={errors?.invoiceAddress?.zipCode ? true : false}\r\n            helperText={errors?.invoiceAddress?.zipCode}\r\n            onChange={async (e) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                invoiceAddress: {\r\n                  ...medicDataConfigure.invoiceAddress,\r\n                  zipCode: mask(e.target.value, \"#####-###\"),\r\n                } as InvoiceAddressProps,\r\n              });\r\n            }}\r\n          />\r\n          <TextField\r\n            value={medicDataConfigure.invoiceAddress.city}\r\n            placeholder=\"Digite a cidade\"\r\n            style={{ width: \"73%\", marginBottom: \"2rem\" }}\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Cidade</span>}\r\n            variant=\"outlined\"\r\n            error={errors?.invoiceAddress?.city ? true : false}\r\n            helperText={errors?.invoiceAddress?.city}\r\n            onChange={async (e) => {\r\n              setMedicDataConfigure({\r\n                ...medicDataConfigure,\r\n                invoiceAddress: {\r\n                  ...medicDataConfigure.invoiceAddress,\r\n                  city: e.target.value,\r\n                } as InvoiceAddressProps,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <Select\r\n          name=\"week_day\"\r\n          onChange={(e: any) =>\r\n            setMedicDataConfigure({\r\n              ...medicDataConfigure,\r\n              invoiceAddress: {\r\n                ...medicDataConfigure.invoiceAddress,\r\n                state: e,\r\n              } as InvoiceAddressProps,\r\n            })\r\n          }\r\n          options={estados}\r\n          defaultValue={{\r\n            label: \"São Paulo\",\r\n            value: \"SP\",\r\n          }}\r\n        />\r\n      </div>\r\n      {hasError && (\r\n        <span style={{ color: \"#f00\", fontWeight: \"bold\", fontSize: \"2rem\" }}>\r\n          Existem erros no formulário\r\n        </span>\r\n      )}\r\n      <span style={{ color: \"#f00\", fontWeight: \"bold\", fontSize: \"2rem\" }}>\r\n        {error}\r\n      </span>\r\n      <div className=\"landing-buttons\">\r\n        <button\r\n          onClick={previousPage}\r\n          style={{ width: \"100%\" }}\r\n          className=\"previous\"\r\n        >\r\n          Anterior\r\n        </button>\r\n        <button\r\n          onClick={handleConfigureProfile}\r\n          style={{ width: \"100%\" }}\r\n          className=\"next\"\r\n        >\r\n          Terminar configuração\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvoiceAddress;\r\n","export default __webpack_public_path__ + \"static/media/schedule-meeting.43eabbc8.svg\";","import React from \"react\";\r\nimport { PagesProps } from \"../../../platform-pages/ConfigureMedic\";\r\nimport scheduleMeeting from \"../../../assets/images/schedule-meeting.svg\";\r\nimport \"./styles.css\";\r\n\r\nconst Landing = ({ nextPage }: PagesProps) => {\r\n  return (\r\n    <div className=\"landing\">\r\n      <div>\r\n        <h1 className=\"landing-title\">\r\n          Que bom que você escolheu a nossa plataforma!\r\n        </h1>\r\n        <h3 className=\"landing-subtitle\">\r\n          Primeiro, necessitamos de alguns outros dados para tornar seu perfil\r\n          “agendável”\r\n        </h3>\r\n      </div>\r\n\r\n      <img src={scheduleMeeting} alt=\"Agendamento\" />\r\n\r\n      <button onClick={nextPage} className=\"next\">\r\n        Vamos começar!\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/happy.f7283db7.svg\";","import React from \"react\";\r\nimport { PagesProps } from \"../../../platform-pages/ConfigureMedic\";\r\nimport happyImg from \"../../../assets/images/happy.svg\";\r\nimport \"./styles.css\";\r\n\r\nconst Success = () => {\r\n  return (\r\n    <div className=\"landing\" id=\"landing-sucess\">\r\n      <h1 className=\"success-text\">Sucesso!</h1>\r\n      <p>\r\n        Agora é só aproveitar nossa plataforma e aumentar seu número de\r\n        consultas\r\n      </p>\r\n      <img alt=\"Sucesso!\" src={happyImg} />\r\n\r\n      <button\r\n        onClick={() => {\r\n          window.location.reload();\r\n        }}\r\n        className=\"next\"\r\n      >\r\n        Vamos começar!\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AppointmentInfo from \"../../components-platform/ConfigureMedicPages/AppointmentInfo\";\r\nimport BankData from \"../../components-platform/ConfigureMedicPages/BankData\";\r\nimport ClinicAddress from \"../../components-platform/ConfigureMedicPages/ClinicAddress\";\r\nimport InvoiceAddress from \"../../components-platform/ConfigureMedicPages/InvoiceAddress\";\r\nimport Landing from \"../../components-platform/ConfigureMedicPages/Landing\";\r\nimport Success from \"../../components-platform/ConfigureMedicPages/Success\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport ShareMedicConfigureFormProvider from \"../../context/ShareMedicConfigureFormProvider\";\r\nimport \"./styles.css\";\r\n\r\nexport interface PagesProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst ConfigureMedic = () => {\r\n  const history = useHistory();\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const { user } = useAuth();\r\n\r\n  if (user.configured) {\r\n    history.replace(\"/configuracoes\");\r\n  }\r\n\r\n  let pages: Array<JSX.Element> = [\r\n    <Landing previousPage={previousPage} nextPage={nextPage} />,\r\n    <AppointmentInfo previousPage={previousPage} nextPage={nextPage} />,\r\n    <ClinicAddress previousPage={previousPage} nextPage={nextPage} />,\r\n    <BankData previousPage={previousPage} nextPage={nextPage} />,\r\n    <InvoiceAddress previousPage={previousPage} nextPage={nextPage} />,\r\n    <Success />,\r\n  ];\r\n\r\n  function previousPage() {\r\n    if (currentPage === 0) {\r\n      history.goBack();\r\n    }\r\n\r\n    setCurrentPage(currentPage - 1);\r\n  }\r\n\r\n  function nextPage() {\r\n    if (currentPage + 1 < pages.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"configure-medic\">\r\n      <ShareMedicConfigureFormProvider>\r\n        {pages[currentPage]}\r\n      </ShareMedicConfigureFormProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigureMedic;\r\n","interface newPassword {\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\nexport default function validateNewPassword(credentials: newPassword) {\r\n  let errors = {} as newPassword;\r\n\r\n  if (!credentials?.password && 0) {\r\n    errors.password = \"Campo de senha é necessário\";\r\n  } else if (!((credentials?.password?.length ?? 0) > 7)) {\r\n    errors.password = \"Senha muito pequena\";\r\n  }\r\n\r\n  if (!credentials?.confirmPassword && 0) {\r\n    errors.confirmPassword = \"Campo de confirmação de senha é necessário\";\r\n  } else if (credentials?.confirmPassword !== credentials?.password) {\r\n    errors.confirmPassword = \"Campos não batem\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import { IconButton, TextField } from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport api from \"../../services/api\";\r\nimport validateNewPassword from \"../../utils/validateNewPassword\";\r\nimport \"./styles.css\";\r\n\r\ninterface RecoverPasswordParams {\r\n  token?: string;\r\n}\r\n\r\nexport default function RecoverPassword() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  let { token } = useParams<RecoverPasswordParams>();\r\n  const { spinner } = useModal();\r\n  const [isValid, setIsValid] = useState<boolean | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [newPassword, setNewPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState(validateNewPassword(newPassword));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }, [newPassword]);\r\n\r\n  function validate() {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  if (!token || (isValid !== null && !isValid)) {\r\n    spinner.close();\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  const verifyToken = useCallback(async () => {\r\n    spinner.open();\r\n    let response = await api.get(`/users/recover/${token}`);\r\n\r\n    if (response.status === 202) {\r\n      setIsValid(true);\r\n    }\r\n\r\n    setIsLoading(false);\r\n    spinner.close();\r\n  }, [setIsValid, token]);\r\n\r\n  useEffect(() => {\r\n    verifyToken();\r\n  }, [verifyToken]);\r\n\r\n  if (isLoading) {\r\n    return <div></div>;\r\n  }\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n    if (newPassword.password !== newPassword.confirmPassword) {\r\n      spinner.close();\r\n      return;\r\n    }\r\n\r\n    let response = await api.put(`/users/recover/${token}`, {\r\n      password: newPassword.password,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      history.replace(\"/\");\r\n    }\r\n\r\n    spinner.close();\r\n  }\r\n\r\n  return (\r\n    <div className=\"forget-password-container\">\r\n      <form className=\"form-container\" onSubmit={handleSubmit}>\r\n        <div id=\"flex\">\r\n          <h2>Seu e-mail</h2>\r\n          <IconButton\r\n            onClick={() => {\r\n              handleShowPassword();\r\n            }}\r\n            className=\"show-password-button\"\r\n            color=\"primary\"\r\n          >\r\n            {showPassword ? \"Esconder senha\" : \"Mostrar senha\"}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <div className=\"line\"></div>\r\n        <TextField\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          value={newPassword.password}\r\n          name=\"password\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nova senha</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => {\r\n            setNewPassword({ ...newPassword, password: e.target.value });\r\n            validate();\r\n          }}\r\n          autoComplete=\"off\"\r\n          required\r\n          error={errors.password ? true : false}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.password}</span>\r\n          }\r\n        />\r\n        <TextField\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          value={newPassword.confirmPassword}\r\n          style={{ marginTop: \"1rem\" }}\r\n          name=\"confirm_password\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Confirmar nova senha</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => {\r\n            setNewPassword({ ...newPassword, confirmPassword: e.target.value });\r\n            validate();\r\n          }}\r\n          autoComplete=\"off\"\r\n          required\r\n          error={errors.confirmPassword ? true : false}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.confirmPassword}</span>\r\n          }\r\n        />\r\n        <button className=\"recover-password-button\">Alterar senha</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport api from \"../../services/api\";\r\nimport \"./styles.css\";\r\n\r\nexport default function ForgetPassword() {\r\n  const { spinner } = useModal();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [successfull, setSuccesfull] = useState(\"\");\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n\r\n    setError(\"\");\r\n    spinner.open();\r\n\r\n    try {\r\n      let response = await api.post(\"/users/recover/\", { email });\r\n\r\n      if (response.status === 200) {\r\n        // Email enviado\r\n      }\r\n\r\n      setSuccesfull(\"E-mail enviado!\");\r\n    } catch (error) {\r\n      if (error.response.data === \"Not Found\") {\r\n        setSuccesfull(\"\");\r\n        setError(\"Usuário não encontrado\");\r\n      }\r\n    }\r\n\r\n    spinner.close();\r\n  }\r\n\r\n  return (\r\n    <div className=\"forget-password-container\">\r\n      <form className=\"form-container\" onSubmit={handleSubmit}>\r\n        <h2>Seu e-mail</h2>\r\n        <div className=\"line\"></div>\r\n        <TextField\r\n          value={email}\r\n          name=\"firstName\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n          autoComplete=\"off\"\r\n          required\r\n          error={false}\r\n        />\r\n        <button className=\"recover-password-button\">Recuperar senha</button>\r\n        {error.length ? (\r\n          <h1 style={{ color: \"red\", fontSize: \"2rem\" }}> {error} </h1>\r\n        ) : null}\r\n\r\n        {successfull.length > 0 && (\r\n          <span\r\n            style={{\r\n              color: \"#3EB713\",\r\n              marginTop: \"2rem\",\r\n              fontSize: \"2rem\",\r\n              position: \"relative\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {successfull}\r\n          </span>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/404.19ed6e41.svg\";","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport image404 from \"../../assets/images/404.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div className=\"page-404\">\r\n      <h1>Página não encontrada...</h1>\r\n      <img src={image404} />\r\n      <p>\r\n        Página ou usuário não encontrado. Podem ter sido excluídos, atualizados\r\n        ou nem se quer ter existido.\r\n      </p>\r\n      <Link to=\"/\">Voltar para página principal</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","export interface RefreshConsult {\r\n  type: string;\r\n  price: string;\r\n}\r\n\r\nexport default function refreshConsultValidate(credentials: RefreshConsult) {\r\n  let errors = {} as RefreshConsult;\r\n\r\n  if (credentials !== null) {\r\n    if (!credentials?.type?.length ?? 0) {\r\n      errors.type = \"Campo de nome é necessário.\";\r\n    }\r\n\r\n    if (!credentials?.price?.length ?? 0) {\r\n      errors.price = \"Campo de preço é necessário.\";\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport HorizontalHeader from \"../../components-platform/HorizontalHeader\";\r\nimport VerticalHeader from \"../../components-platform/VerticalHeader\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport refreshConsultValidate, {\r\n  RefreshConsult,\r\n} from \"../../utils/validateRefreshConsult\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\n\r\nexport interface ParamsProps {\r\n  id: string;\r\n}\r\n\r\nconst ConfigurationsConsult = () => {\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n  const { spinner, sucesso } = useModal();\r\n  const { id } = useParams<ParamsProps>();\r\n  const [refreshConsult, setRefreshConsult] = useState<RefreshConsult>({\r\n    type: \"\",\r\n    price: \"\",\r\n  });\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    api.get(`consult-type/${id}`).then((response: any) => {\r\n      setRefreshConsult({\r\n        ...refreshConsult,\r\n        type: response.data.type,\r\n        price: response.data.price,\r\n      });\r\n    });\r\n  }, [id]);\r\n\r\n  const [errors, setErrors] = useState(refreshConsultValidate(refreshConsult));\r\n\r\n  useEffect(() => {\r\n    setErrors(refreshConsultValidate(refreshConsult));\r\n  }, [refreshConsult]);\r\n\r\n  async function handleSubmitRefreshConsult(e: any) {\r\n    e.preventDefault();\r\n    const loopedErrors = Object.values(errors);\r\n\r\n    if (loopedErrors.length > 0) {\r\n      setFormError(\"Nome ou preço incorreto.\");\r\n    } else {\r\n      setFormError(\"\");\r\n      spinner.open();\r\n\r\n      await api\r\n        .put(`consult-type/${id}`, {\r\n          type: refreshConsult.type,\r\n          price: refreshConsult.price,\r\n        })\r\n        .then(async () => {\r\n          await spinner.close();\r\n          await sucesso.open({\r\n            name: `Parabéns ${user.firstName}`,\r\n            description: \"Consulta atualizada com sucesso!\",\r\n            close: () => sucesso.close(),\r\n          });\r\n          await history.push(\"/configuracoes\");\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"agenda\">\r\n      <HorizontalHeader title=\"Configurações de consultas\" />\r\n      <VerticalHeader colorIcon=\"configurations\" />\r\n      <div className=\"content\">\r\n        <form onSubmit={handleSubmitRefreshConsult} className=\"content-form\">\r\n          <h1>Atualize os dados de consulta</h1>\r\n          <div style={{ width: \"90%\" }} className=\"line-global\"></div>\r\n          <TextField\r\n            placeholder=\"Consulta simples\"\r\n            value={refreshConsult.type}\r\n            name=\"type\"\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => {\r\n              setRefreshConsult({ ...refreshConsult, type: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"1rem\", width: \"90%\" }}\r\n            error={errors?.type ? true : false}\r\n            helperText={\r\n              <span style={{ fontSize: \"1rem\" }}>{errors?.type}</span>\r\n            }\r\n          />\r\n          <TextField\r\n            placeholder=\"Consulta simples\"\r\n            value={refreshConsult.price}\r\n            name=\"price\"\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Preço</span>}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => {\r\n              setRefreshConsult({ ...refreshConsult, price: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"1rem\", width: \"90%\" }}\r\n            error={errors?.price ? true : false}\r\n            helperText={\r\n              <span style={{ fontSize: \"1rem\" }}>{errors?.price}</span>\r\n            }\r\n          />\r\n\r\n          <p\r\n            style={{\r\n              color: \"#f00\",\r\n              fontSize: \"1.5rem\",\r\n              marginTop: \"1rem\",\r\n              marginBottom: \"-1rem\",\r\n            }}\r\n          >\r\n            {formError}\r\n          </p>\r\n\r\n          <button className=\"submit-button\" type=\"submit\">\r\n            Atualizar consulta\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigurationsConsult;\r\n","import { RefreshAddress } from \"../platform-pages/ConfigurationsAddress\";\r\n\r\nexport default function refreshAddressValidate(credentials: RefreshAddress) {\r\n  let errors = {} as RefreshAddress;\r\n\r\n  if (credentials !== null) {\r\n    if (!credentials?.street?.length ?? 0) {\r\n      errors.street = \"Campo de endereço é necessário.\";\r\n    }\r\n\r\n    if (!credentials?.number?.length ?? 0) {\r\n      errors.number = \"Campo de número é necessário.\";\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport HorizontalHeader from \"../../components-platform/HorizontalHeader\";\r\nimport VerticalHeader from \"../../components-platform/VerticalHeader\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport refreshAddressValidate from \"../../utils/validateRefreshAddress\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n} from \"react-places-autocomplete\";\r\n\r\nexport interface RefreshAddress {\r\n  street: string;\r\n  number: string;\r\n}\r\n\r\nconst ConfigurationsAddress = () => {\r\n  const history = useHistory();\r\n  const { userID, user } = useAuth();\r\n  const { spinner, sucesso } = useModal();\r\n  const [addressID, setAddressID] = useState(\"\");\r\n\r\n  const [refreshAddress, setRefreshAddress] = useState<RefreshAddress>({\r\n    street: \"\",\r\n    number: \"\",\r\n  });\r\n  const [formError, setFormError] = useState(\"\");\r\n  const [errors, setErrors] = useState(refreshAddressValidate(refreshAddress));\r\n\r\n  useEffect(() => {\r\n    api.get(`addresses?userID=${userID}`).then((response: any) => {\r\n      setAddressID(response.data.id);\r\n      setRefreshAddress({\r\n        ...refreshAddress,\r\n        street: response.data.address,\r\n        number: response.data.number,\r\n      });\r\n    });\r\n  }, [userID]);\r\n\r\n  useEffect(() => {\r\n    setErrors(refreshAddressValidate(refreshAddress));\r\n  }, [refreshAddress]);\r\n\r\n  const handleSelect = async (value: any) => {\r\n    const results = await geocodeByAddress(refreshAddress.street);\r\n    setRefreshAddress({\r\n      ...refreshAddress,\r\n      street: value,\r\n    });\r\n  };\r\n\r\n  async function handleSubmitRefreshAddress(e: any) {\r\n    e.preventDefault();\r\n    const loopedErrors = Object.values(errors);\r\n\r\n    if (loopedErrors.length > 0) {\r\n      setFormError(\"Endereço ou número incorreto\");\r\n    } else {\r\n      setFormError(\"\");\r\n      spinner.open();\r\n\r\n      await api\r\n        .put(`addresses/${addressID}`, {\r\n          address: refreshAddress.street,\r\n          number: refreshAddress.number,\r\n        })\r\n        .then(async () => {\r\n          await spinner.close();\r\n          await sucesso.open({\r\n            name: `Parabéns ${user.firstName}`,\r\n            description: \"Consulta atualizada com sucesso!\",\r\n            close: () => sucesso.close(),\r\n          });\r\n          await history.push(\"/configuracoes\");\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"agenda\">\r\n      <HorizontalHeader title=\"Configurações de consultas\" />\r\n      <VerticalHeader colorIcon=\"configurations\" />\r\n      <div className=\"content\">\r\n        <form onSubmit={handleSubmitRefreshAddress} className=\"content-form\">\r\n          <h1>Atualize os dados de consulta simples</h1>\r\n          <div\r\n            style={{ width: \"90%\", marginBottom: \"2rem\" }}\r\n            className=\"line-global\"\r\n          ></div>\r\n          <PlacesAutocomplete\r\n            value={refreshAddress.street}\r\n            onChange={async (e) => {\r\n              setRefreshAddress({ ...refreshAddress, street: e });\r\n            }}\r\n            onSelect={handleSelect}\r\n          >\r\n            {({\r\n              getInputProps,\r\n              suggestions,\r\n              getSuggestionItemProps,\r\n              loading,\r\n            }) => (\r\n              <div style={{ width: \"83%\" }}>\r\n                <TextField\r\n                  {...getInputProps({ placeholder: \"Digite o endereço\" })}\r\n                  fullWidth\r\n                  label={<span style={{ fontSize: \"1.5rem\" }}>Endereço</span>}\r\n                  variant=\"outlined\"\r\n                  error={errors.street ? true : false}\r\n                  helperText={errors.street}\r\n                  name=\"street\"\r\n                />\r\n\r\n                <div>\r\n                  {loading && (\r\n                    <Loader\r\n                      type=\"TailSpin\"\r\n                      color=\"var(--color-button-primary)\"\r\n                      height={30}\r\n                      width={30}\r\n                    />\r\n                  )}\r\n\r\n                  {suggestions.map((suggestion: any) => {\r\n                    const style = {\r\n                      backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\r\n                      padding: \"1rem\",\r\n                      border: \"1px solid #1976d2\",\r\n                      transition: \"all ease-in-out 0.2s\",\r\n                    };\r\n\r\n                    return (\r\n                      <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                        {suggestion.description}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </PlacesAutocomplete>\r\n          <TextField\r\n            placeholder=\"123\"\r\n            value={refreshAddress.number}\r\n            name=\"number\"\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Número</span>}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => {\r\n              setRefreshAddress({ ...refreshAddress, number: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"1rem\", width: \"83%\" }}\r\n            error={errors?.number ? true : false}\r\n            helperText={\r\n              <span style={{ fontSize: \"1rem\" }}>{errors?.number}</span>\r\n            }\r\n          />\r\n\r\n          <p\r\n            style={{\r\n              color: \"#f00\",\r\n              fontSize: \"1.5rem\",\r\n              marginTop: \"1rem\",\r\n              marginBottom: \"-1rem\",\r\n            }}\r\n          >\r\n            {formError}\r\n          </p>\r\n\r\n          <button className=\"submit-button\" type=\"submit\">\r\n            Atualizar consulta\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigurationsAddress;\r\n","import { RefreshSchedule } from \"../platform-pages/ConfigurationsMedicSchedule\";\r\n\r\nexport default function refreshScheduleValidate(credentials: RefreshSchedule) {\r\n  let errors = {} as RefreshSchedule;\r\n\r\n  if (credentials !== null) {\r\n    if (!credentials?.from?.length ?? 0) {\r\n      errors.from = \"Campo de horário é necessário.\";\r\n    } else if (credentials?.from?.length !== 5) {\r\n      errors.from = \"Campo de horário é incorreto\";\r\n    }\r\n\r\n    if (!credentials?.to?.length ?? 0) {\r\n      errors.to = \"Campo de horário é necessário.\";\r\n    } else if (credentials?.to?.length !== 5) {\r\n      errors.to = \"Campo de horário é incorreto\";\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport HorizontalHeader from \"../../components-platform/HorizontalHeader\";\r\nimport VerticalHeader from \"../../components-platform/VerticalHeader\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport refreshScheduleValidate from \"../../utils/validateRefreshSchedule\";\r\n\r\nexport interface ParamsProps {\r\n  id: string;\r\n}\r\n\r\nexport interface RefreshSchedule {\r\n  id: number;\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\nconst ConfigurationsMedicSchedule = () => {\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n  const { spinner, sucesso } = useModal();\r\n  const { id } = useParams<ParamsProps>();\r\n  const [refreshSchedule, setRefreshSchedule] = useState<RefreshSchedule>({\r\n    id: 0,\r\n    from: \"\",\r\n    to: \"\",\r\n  });\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    api.post(`medic-schedule/${id}`).then((response: any) => {\r\n      // FROM\r\n      const totalFrom = Number(response.data.from) / 60;\r\n      const [fromHour, fromMinute] = totalFrom.toString().split(\".\");\r\n      const totalStringFromMinute = `${fromMinute}`;\r\n      const formattedTotalFromMinute = totalStringFromMinute.substring(0, 1);\r\n      const TotalFromMinute = Number(formattedTotalFromMinute) * 6;\r\n\r\n      // TO\r\n      const totalTo = Number(response.data.to) / 60;\r\n      const [toHour, toMinute] = totalTo.toString().split(\".\");\r\n      const totalStringToMinute = `${toMinute}`;\r\n      const formattedTotalToMinute = totalStringToMinute.substring(0, 1);\r\n      const TotalToMinute = Number(formattedTotalToMinute) * 6;\r\n\r\n      setRefreshSchedule({\r\n        ...refreshSchedule,\r\n        id: response.data.id,\r\n        from: `${fromHour.length > 1 ? fromHour : \"0\" + fromHour}:${\r\n          isNaN(TotalFromMinute) ? \"00\" : TotalFromMinute\r\n        }`,\r\n        to: `${toHour.length > 1 ? toHour : \"0\" + toHour}:${\r\n          isNaN(TotalToMinute) ? \"00\" : TotalToMinute\r\n        }`,\r\n      });\r\n    });\r\n  }, [id]);\r\n\r\n  const [errors, setErrors] = useState(\r\n    refreshScheduleValidate(refreshSchedule)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setErrors(refreshScheduleValidate(refreshSchedule));\r\n  }, [refreshSchedule]);\r\n\r\n  async function handleSubmitRefreshSchedule(e: any) {\r\n    e.preventDefault();\r\n    const loopedErrors = Object.values(errors);\r\n\r\n    if (loopedErrors.length > 0) {\r\n      setFormError(\"Nome ou preço incorreto.\");\r\n    } else {\r\n      setFormError(\"\");\r\n      spinner.open();\r\n\r\n      await api\r\n        .put(`medic-schedule/${id}`, {\r\n          from: refreshSchedule.from,\r\n          to: refreshSchedule.to,\r\n        })\r\n        .then(async () => {\r\n          await spinner.close();\r\n          await sucesso.open({\r\n            name: `Parabéns ${user.firstName}`,\r\n            description: \"Horário atualizado com sucesso!\",\r\n            close: () => sucesso.close(),\r\n          });\r\n          await history.push(\"/configuracoes\");\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"agenda\">\r\n      <HorizontalHeader title=\"Configurações de horários\" />\r\n      <VerticalHeader colorIcon=\"configurations\" />\r\n      <div className=\"content\">\r\n        <form onSubmit={handleSubmitRefreshSchedule} className=\"content-form\">\r\n          <h1>Atualize os dados de horário</h1>\r\n          <div style={{ width: \"90%\" }} className=\"line-global\"></div>\r\n          <TextField\r\n            type=\"time\"\r\n            placeholder=\"16:30\"\r\n            value={refreshSchedule.from}\r\n            name=\"from\"\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Das</span>}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => {\r\n              setRefreshSchedule({ ...refreshSchedule, from: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"1rem\", width: \"90%\" }}\r\n            error={errors?.from ? true : false}\r\n            helperText={\r\n              <span style={{ fontSize: \"1rem\" }}>{errors?.from}</span>\r\n            }\r\n          />\r\n          <TextField\r\n            type=\"time\"\r\n            placeholder=\"22:00\"\r\n            value={refreshSchedule.to}\r\n            name=\"to\"\r\n            label={<span style={{ fontSize: \"1.5rem\" }}>Até</span>}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => {\r\n              setRefreshSchedule({ ...refreshSchedule, to: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"1rem\", width: \"90%\" }}\r\n            error={errors?.to ? true : false}\r\n            helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.to}</span>}\r\n          />\r\n\r\n          <p\r\n            style={{\r\n              color: \"#f00\",\r\n              fontSize: \"1.5rem\",\r\n              marginTop: \"1rem\",\r\n              marginBottom: \"-1rem\",\r\n            }}\r\n          >\r\n            {formError}\r\n          </p>\r\n\r\n          <button className=\"submit-button\" type=\"submit\">\r\n            Atualizar consulta\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigurationsMedicSchedule;\r\n","import { BrowserRouter, Switch } from \"react-router-dom\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nimport LandingPage from \"../pages/LandingPage\";\r\nimport LoginPage from \"../pages/LoginPage\";\r\nimport RegisterMedic from \"../pages/RegisterMedic\";\r\nimport ConfirmEmail from \"../pages/ConfirmEmail\";\r\nimport VerifyEmail from \"../pages/VerifyEmail\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport AgendaComponent from \"../platform-pages/Agenda\";\r\nimport Profile from \"../platform-pages/Profile\";\r\nimport Appointments from \"../platform-pages/Appointments\";\r\nimport Configurations from \"../platform-pages/Configurations\";\r\nimport ConfigureMedic from \"../platform-pages/ConfigureMedic\";\r\nimport RecoverPassword from \"../pages/RecoverPassword\";\r\nimport ForgetPassword from \"../pages/ForgetPassword\";\r\nimport Page404 from \"../platform-pages/404\";\r\nimport ConfigurationsConsult from \"../platform-pages/ConfigurationsConsult\";\r\nimport ConfigurationsAddress from \"../platform-pages/ConfigurationsAddress\";\r\nimport ConfigurationsMedicSchedule from \"../platform-pages/ConfigurationsMedicSchedule\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <PublicRoute exact path=\"/\" component={LandingPage} />\r\n        <PublicRoute path=\"/entrar\" component={LoginPage} />\r\n        <PublicRoute path=\"/registrar\" component={RegisterMedic} />\r\n        <PublicRoute path=\"/confirmar-email\" component={ConfirmEmail} />\r\n        <PublicRoute path=\"/verificar/:token\" component={VerifyEmail} />\r\n        <PublicRoute path=\"/recuperar\" exact component={ForgetPassword} />\r\n        <PublicRoute path=\"/recuperar/:token\" component={RecoverPassword} />\r\n\r\n        <PrivateRoute path=\"/agenda\" component={AgendaComponent} />\r\n        <PrivateRoute path=\"/perfil\" component={Profile} />\r\n        <PrivateRoute path=\"/consultas\" component={Appointments} />\r\n        <PrivateRoute path=\"/configuracoes\" exact component={Configurations} />\r\n        <PrivateRoute path=\"/configuracoes/consultas/:id\" component={ConfigurationsConsult} />\r\n        <PrivateRoute path=\"/configuracoes/endereco\" component={ConfigurationsAddress} />\r\n        <PrivateRoute path=\"/configuracoes/horarios/:id\" component={ConfigurationsMedicSchedule} />\r\n        <PrivateRoute path=\"/configurar\" component={ConfigureMedic} />\r\n        <PrivateRoute path=\"/404\" component={Page404} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import Router from \"./routes/Router\";\r\n\r\nimport AuthProvider from \"./context/AuthProvider\";\r\nimport \"./assets/styles/global.css\";\r\nimport ModalProvider from \"./context/ModalProvider\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ModalProvider>\r\n      <AuthProvider>\r\n        <Router />\r\n      </AuthProvider>\r\n    </ModalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}