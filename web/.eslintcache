[{"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ShareAppointmentFormProvider.tsx":"1","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\MedicArea\\index.tsx":"2"},{"size":1292,"mtime":1622376740342,"results":"3","hashOfConfig":"4"},{"size":4642,"mtime":1622376808566,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1seqnhc",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ShareAppointmentFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\MedicArea\\index.tsx",["11"],"import \"./styles.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SearchInput from \"../../components/SearchInput\";\r\nimport api from \"../../services/api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport SubHeaderPlatform from \"../../components/SubHeaderPlatform\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IoFilterOutline } from \"react-icons/io5\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\ninterface ParamTypes {\r\n  area: string;\r\n}\r\n\r\nconst MedicArea = () => {\r\n  const { filter } = useModal();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  const [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n  const [medicName, setMedicName] = useState<string>(\"\");\r\n  const [maxPrice, setMaxPrice] = useState<number>(500);\r\n  const [maxDistance, setMaxDistance] = useState<number>(9999);\r\n\r\n  function changePrice(price: number) {\r\n    setMaxPrice(price);\r\n  }\r\n\r\n  function changeDistance(distance: number) {\r\n    setMaxDistance(distance);\r\n  }\r\n\r\n  async function loadMore() {\r\n    let name = medicName.replace(/[^0-9a-zA-Z:,]+/, \"\").toLowerCase();\r\n    let { data } = await api.get(\r\n      `medics/${capitalizeArea}?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}&name=${name}`\r\n    );\r\n\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function reload() {\r\n    let { data } = await api.get(\r\n      `medics/${capitalizeArea}?lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics(data);\r\n    setPage(1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        console.log(\"Você precisa ativar sua localização\");\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n        console.log(permission.state);\r\n      };\r\n    }\r\n  }\r\n\r\n  const { area } = useParams<ParamTypes>();\r\n\r\n  let capitalizeArea = area.charAt(0).toUpperCase() + area.slice(1);\r\n  if (capitalizeArea === \"Alergistas-e-imunologista\") {\r\n    capitalizeArea = \"Alergista-e-Imunologista\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(location);\r\n    if (!location) {\r\n      setLoading(true);\r\n      getUserLocation();\r\n    }\r\n  }, [capitalizeArea, location]);\r\n\r\n  useEffect(() => {\r\n    if (!location) {\r\n      // Nada\r\n    } else {\r\n      if (!medics.length) {\r\n        reload();\r\n      }\r\n    }\r\n  }, [location, maxPrice, maxDistance, reload]);\r\n\r\n  console.log(medicName);\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Busque os melhores ${area}s da sua região!`}\r\n        returnFunction={() => history.goBack()}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"search-flex\">\r\n          <div className=\"search-flex-input\">\r\n            <SearchInput\r\n              placeholder=\"Busque pelo nome do médico...\"\r\n              onChange={(e) => setMedicName(e.currentTarget.value)}\r\n              onKeyDown={(e) => (e.key === \"Enter\" ? reload() : null)}\r\n            />\r\n          </div>\r\n          <div\r\n            onClick={() =>\r\n              filter.open({\r\n                changePrice,\r\n                changeDistance,\r\n                currentDistance: maxDistance,\r\n                currentPrice: maxPrice,\r\n              })\r\n            }\r\n            className=\"search-flex-filter-button\"\r\n          >\r\n            <IoFilterOutline size={22} color=\"#000000\" />\r\n          </div>\r\n        </div>\r\n        <DoctorList medics={medics} loading={loading} />\r\n        {!loading && !medics.length && <h1>Nada encontrado</h1>}\r\n        <LoadMoreButton onClick={loadMore} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicArea;\r\n",{"ruleId":"12","severity":1,"message":"13","line":108,"column":6,"nodeType":"14","endLine":108,"endColumn":47,"suggestions":"15"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'medics.length'. Either include it or remove the dependency array.","ArrayExpression",["16"],{"desc":"17","fix":"18"},"Update the dependencies array to be: [location, maxPrice, maxDistance, reload, medics.length]",{"range":"19","text":"20"},[3332,3373],"[location, maxPrice, maxDistance, reload, medics.length]"]