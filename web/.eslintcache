[{"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\App.tsx":"1","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\LoginAndRegisterPaciente\\index.tsx":"2","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\LoginAndRegisterMedico\\index.tsx":"3","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\services\\api.ts":"4","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\AppointmentType\\index.tsx":"5","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\DoctorItem\\index.tsx":"6","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\AuthProvider.tsx":"7","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\validateNewPassword.ts":"8","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ShareMedicFormProvider.tsx":"9","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Form\\Steps\\Names.tsx":"10","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\Names.tsx":"11","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\Schedule.tsx":"12","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\HeaderPlatform\\index.tsx":"13","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\LoadMoreButton\\index.tsx":"14","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\ListAppointments\\index.tsx":"15","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\Overlay\\index.tsx":"16","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Select\\index.tsx":"17","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\DaySchedule\\index.tsx":"18","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\MedicArea\\index.tsx":"19","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ModalProvider.tsx":"20","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\Filtro\\index.tsx":"21","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\PaymentMethod\\index.tsx":"22","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\PaymentInfo\\index.tsx":"23","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfilePages\\Payment\\index.tsx":"24","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\PersonalData.tsx":"25","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ShareAppointmentFormProvider.tsx":"26","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfilePages\\Schedule\\index.tsx":"27","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\index.tsx":"28","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\Landing\\index.tsx":"29","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\LoginPatient\\index.tsx":"30","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\RegisterPacient\\index.tsx":"31","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\routes\\PrivateRoute.tsx":"32","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\GreenButton\\index.tsx":"33","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\AppointmentStatus\\index.tsx":"34","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\HomeClient\\index.tsx":"35","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MyProfileSettings\\index.tsx":"36","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx":"37","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\AcademicData.tsx":"38","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Categories\\index.tsx":"39","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\refreshUserValidate.ts":"40","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\routes\\PublicRoute.tsx":"41","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\RegisterSpitalAccount\\index.tsx":"42","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\VerifyEmail\\index.tsx":"43","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\MedicProfile\\index.tsx":"44","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\SubHeaderPlatform\\index.tsx":"45","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\validateMedicInfo.ts":"46","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\AddCreditCard\\index.tsx":"47","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\mask.js":"48","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\MyProfile\\index.tsx":"49","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\AppointmentsClient\\index.tsx":"50","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\ConfirmEmail\\index.tsx":"51","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\LoginSpitalAccount\\index.tsx":"52","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\RecoverPassword\\index.tsx":"53","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\CadastroSucesso\\index.tsx":"54","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\Spinner\\index.tsx":"55","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ShareClientFormProvider.tsx":"56","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Form\\Steps\\Phone.tsx":"57","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\Review.tsx":"58","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\Credentials.tsx":"59","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfileInfo\\index.tsx":"60","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\SearchClient\\index.tsx":"61","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\ForgetPassword\\index.tsx":"62","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Header\\index.tsx":"63","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfileBox\\index.tsx":"64","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\SearchInput\\index.tsx":"65","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfilePages\\Main\\index.tsx":"66","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\calcPercentage.js":"67","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\DoctorList\\index.tsx":"68","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\validateInfo.ts":"69","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\validateCard.ts":"70","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Form\\Steps\\Credentials.tsx":"71","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\HashPassword.js":"72","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\AreYouSure\\index.tsx":"73","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\ListMedicAreas\\index.tsx":"74","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Form\\Steps\\Review.tsx":"75","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MyProfileInfo\\index.tsx":"76","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfileData\\index.tsx":"77","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx":"78","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\routes\\Router.tsx":"79","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\AppointmentUnique\\index.tsx":"80"},{"size":385,"mtime":1620485131634,"results":"81","hashOfConfig":"82"},{"size":1191,"mtime":1620514525201,"results":"83","hashOfConfig":"82"},{"size":1177,"mtime":1620514512342,"results":"84","hashOfConfig":"82"},{"size":124,"mtime":1615925572984,"results":"85","hashOfConfig":"82"},{"size":1362,"mtime":1621378511392,"results":"86","hashOfConfig":"82"},{"size":1335,"mtime":1621717088427,"results":"87","hashOfConfig":"82"},{"size":2892,"mtime":1621623849289,"results":"88","hashOfConfig":"82"},{"size":673,"mtime":1621385686096,"results":"89","hashOfConfig":"82"},{"size":1292,"mtime":1620344201336,"results":"90","hashOfConfig":"82"},{"size":2037,"mtime":1621638344164,"results":"91","hashOfConfig":"82"},{"size":2681,"mtime":1619807283424,"results":"92","hashOfConfig":"82"},{"size":4615,"mtime":1621717088438,"results":"93","hashOfConfig":"82"},{"size":3568,"mtime":1620564200013,"results":"94","hashOfConfig":"82"},{"size":315,"mtime":1620501804232,"results":"95","hashOfConfig":"82"},{"size":5485,"mtime":1622225674684,"results":"96","hashOfConfig":"82"},{"size":239,"mtime":1621110295186,"results":"97","hashOfConfig":"82"},{"size":709,"mtime":1618011502175,"results":"98","hashOfConfig":"82"},{"size":3909,"mtime":1622138770573,"results":"99","hashOfConfig":"82"},{"size":3870,"mtime":1621717088477,"results":"100","hashOfConfig":"82"},{"size":3090,"mtime":1621782216705,"results":"101","hashOfConfig":"82"},{"size":2714,"mtime":1621717088458,"results":"102","hashOfConfig":"82"},{"size":1613,"mtime":1621808620281,"results":"103","hashOfConfig":"82"},{"size":1971,"mtime":1622115499409,"results":"104","hashOfConfig":"82"},{"size":1447,"mtime":1622121005123,"results":"105","hashOfConfig":"82"},{"size":2779,"mtime":1621628880706,"results":"106","hashOfConfig":"82"},{"size":1348,"mtime":1622242296777,"results":"107","hashOfConfig":"82"},{"size":5024,"mtime":1622248866472,"results":"108","hashOfConfig":"82"},{"size":197,"mtime":1612257692987,"results":"109","hashOfConfig":"82"},{"size":1304,"mtime":1621109455348,"results":"110","hashOfConfig":"82"},{"size":2022,"mtime":1621717088474,"results":"111","hashOfConfig":"82"},{"size":2069,"mtime":1620514752574,"results":"112","hashOfConfig":"82"},{"size":372,"mtime":1620433335573,"results":"113","hashOfConfig":"82"},{"size":2893,"mtime":1622250321965,"results":"114","hashOfConfig":"82"},{"size":1306,"mtime":1621717088419,"results":"115","hashOfConfig":"82"},{"size":2653,"mtime":1621734468594,"results":"116","hashOfConfig":"82"},{"size":4179,"mtime":1621946630684,"results":"117","hashOfConfig":"82"},{"size":2051,"mtime":1620514546136,"results":"118","hashOfConfig":"82"},{"size":5837,"mtime":1621717088435,"results":"119","hashOfConfig":"82"},{"size":1718,"mtime":1619893148929,"results":"120","hashOfConfig":"82"},{"size":1001,"mtime":1621638808930,"results":"121","hashOfConfig":"82"},{"size":433,"mtime":1620484778686,"results":"122","hashOfConfig":"82"},{"size":1662,"mtime":1620511756459,"results":"123","hashOfConfig":"82"},{"size":1181,"mtime":1620337027444,"results":"124","hashOfConfig":"82"},{"size":1691,"mtime":1622137178077,"results":"125","hashOfConfig":"82"},{"size":654,"mtime":1620517092480,"results":"126","hashOfConfig":"82"},{"size":3774,"mtime":1620485131744,"results":"127","hashOfConfig":"82"},{"size":8981,"mtime":1621784966057,"results":"128","hashOfConfig":"82"},{"size":187,"mtime":1618582087838,"results":"129","hashOfConfig":"82"},{"size":596,"mtime":1619481693785,"results":"130","hashOfConfig":"82"},{"size":536,"mtime":1622161349981,"results":"131","hashOfConfig":"82"},{"size":596,"mtime":1620217351174,"results":"132","hashOfConfig":"82"},{"size":4248,"mtime":1621793381883,"results":"133","hashOfConfig":"82"},{"size":4007,"mtime":1621385999899,"results":"134","hashOfConfig":"82"},{"size":706,"mtime":1621521662129,"results":"135","hashOfConfig":"82"},{"size":336,"mtime":1621110381583,"results":"136","hashOfConfig":"82"},{"size":1034,"mtime":1619830021694,"results":"137","hashOfConfig":"82"},{"size":1606,"mtime":1619532474936,"results":"138","hashOfConfig":"82"},{"size":6032,"mtime":1621717088436,"results":"139","hashOfConfig":"82"},{"size":3361,"mtime":1619828038487,"results":"140","hashOfConfig":"82"},{"size":3375,"mtime":1622237813494,"results":"141","hashOfConfig":"82"},{"size":804,"mtime":1621717088480,"results":"142","hashOfConfig":"82"},{"size":1947,"mtime":1621383938996,"results":"143","hashOfConfig":"82"},{"size":829,"mtime":1620258622446,"results":"144","hashOfConfig":"82"},{"size":1288,"mtime":1621717088442,"results":"145","hashOfConfig":"82"},{"size":601,"mtime":1621717088467,"results":"146","hashOfConfig":"82"},{"size":2369,"mtime":1622248242350,"results":"147","hashOfConfig":"82"},{"size":171,"mtime":1620257582863,"results":"148","hashOfConfig":"82"},{"size":1283,"mtime":1621717088432,"results":"149","hashOfConfig":"82"},{"size":1698,"mtime":1619869829298,"results":"150","hashOfConfig":"82"},{"size":1712,"mtime":1621516498063,"results":"151","hashOfConfig":"82"},{"size":3175,"mtime":1621385066360,"results":"152","hashOfConfig":"82"},{"size":169,"mtime":1615729035026,"results":"153","hashOfConfig":"82"},{"size":1028,"mtime":1621783504477,"results":"154","hashOfConfig":"82"},{"size":5493,"mtime":1621717088440,"results":"155","hashOfConfig":"82"},{"size":4725,"mtime":1621717088434,"results":"156","hashOfConfig":"82"},{"size":2210,"mtime":1620919048454,"results":"157","hashOfConfig":"82"},{"size":1284,"mtime":1621717088443,"results":"158","hashOfConfig":"82"},{"size":3980,"mtime":1622151388733,"results":"159","hashOfConfig":"82"},{"size":3155,"mtime":1622201352680,"results":"160","hashOfConfig":"82"},{"size":10083,"mtime":1622251461536,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"1seqnhc",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"176"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"164"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"164"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"164"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"176"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"164"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"164"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"164"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"176"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"176"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"170"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"334"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\App.tsx",[],["348","349"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\LoginAndRegisterPaciente\\index.tsx",[],["350","351"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\LoginAndRegisterMedico\\index.tsx",[],["352","353"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\services\\api.ts",[],["354","355"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\AppointmentType\\index.tsx",[],["356","357"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\DoctorItem\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\AuthProvider.tsx",["358"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\validateNewPassword.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ShareMedicFormProvider.tsx",[],["359","360"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Form\\Steps\\Names.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\Names.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\Schedule.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\HeaderPlatform\\index.tsx",[],["361","362"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\LoadMoreButton\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\ListAppointments\\index.tsx",["363","364"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\Overlay\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Select\\index.tsx",[],["365","366"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\DaySchedule\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\MedicArea\\index.tsx",["367"],"import \"./styles.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SearchInput from \"../../components/SearchInput\";\r\nimport api from \"../../services/api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport SubHeaderPlatform from \"../../components/SubHeaderPlatform\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IoFilterOutline } from \"react-icons/io5\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\ninterface ParamTypes {\r\n  area: string;\r\n}\r\n\r\nconst MedicArea = () => {\r\n  const { filter } = useModal();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  const [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n\r\n  const [maxPrice, setMaxPrice] = useState<number>(500);\r\n  const [maxDistance, setMaxDistance] = useState<number>(100);\r\n\r\n  function changePrice(price: number){\r\n    setMaxPrice(price);\r\n  }\r\n\r\n  function changeDistance(distance: number){\r\n    setMaxDistance(distance);\r\n  }\r\n\r\n  async function loadMore() {\r\n    let { data } = await api.get(`medics/${capitalizeArea}?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}`);\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function reload(){\r\n    let { data } = await api.get(`medics/${capitalizeArea}?lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}`);\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics(data);\r\n    setPage(1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation){\r\n      let permission = await navigator.permissions.query({ name: \"geolocation\"});\r\n\r\n      if (permission.state === 'granted' || permission.state === 'prompt'){\r\n        navigator.geolocation.getCurrentPosition((pos: GeolocationPosition) => {\r\n          setLocation(pos);\r\n        }, () => {}, { enableHighAccuracy: true});\r\n      } else if (permission.state === 'denied') {\r\n        //\r\n        console.log(\"Você precisa ativar sua localização\")\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\")\r\n        console.log(permission.state);\r\n      };\r\n    }\r\n  }\r\n\r\n  const { area } = useParams<ParamTypes>();\r\n\r\n  let capitalizeArea = area.charAt(0).toUpperCase() + area.slice(1);\r\n  if (capitalizeArea === \"Alergistas-e-imunologista\") {\r\n    capitalizeArea = \"Alergista-e-Imunologista\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUserLocation()\r\n  }, [capitalizeArea]);\r\n\r\n  useEffect(() => {\r\n    if (location?.coords.latitude !== undefined){\r\n      reload();\r\n    }\r\n  }, [location, maxPrice, maxDistance])\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Busque os melhores ${area}s da sua região!`}\r\n        returnFunction={() => history.goBack()}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"search-flex\">\r\n          <div className=\"search-flex-input\">\r\n            <SearchInput placeholder=\"Busque pelo nome do médico...\" />\r\n          </div>\r\n          <div onClick={() => filter.open({changePrice, changeDistance, currentDistance: maxDistance, currentPrice: maxPrice})} className=\"search-flex-filter-button\">\r\n            <IoFilterOutline size={22} color=\"#000000\" />\r\n          </div>\r\n        </div>\r\n\r\n        <DoctorList medics={medics} loading={loading}/>\r\n        <LoadMoreButton onClick={loadMore}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicArea;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ModalProvider.tsx",["368"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\Filtro\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\PaymentMethod\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\PaymentInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfilePages\\Payment\\index.tsx",["369","370"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\PersonalData.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ShareAppointmentFormProvider.tsx",["371","372"],"import React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface AppointmentData {\r\n  date: string | undefined;\r\n  time: string | undefined;\r\n  doctorName: string | undefined;\r\n  type: string | undefined;\r\n  price: string | undefined;\r\n}\r\n\r\ninterface ShareAppointmentFormContextData {\r\n  appointmentData: AppointmentData;\r\n  setAppointmentData: React.Dispatch<React.SetStateAction<AppointmentData>>;\r\n  error: string;\r\n  setError: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\ninterface ShareClientFormProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ShareAppointmentFormContext = createContext(\r\n  {} as ShareAppointmentFormContextData\r\n);\r\n\r\nexport default function ShareAppointmentFormProvider({\r\n  children,\r\n}: ShareClientFormProviderProps) {\r\n  const [appointmentData, setAppointmentData] = useState<AppointmentData>();\r\n  const [cvvError, setCvvError] = useState<any>(null);\r\n  const [error, setError] = useState<any>(null);\r\n\r\n  let value = {\r\n    appointmentData,\r\n    setAppointmentData,\r\n    error,\r\n    setError,\r\n  } as ShareAppointmentFormContextData;\r\n  return (\r\n    <ShareAppointmentFormContext.Provider value={value}>\r\n      {children}\r\n    </ShareAppointmentFormContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useShareAppointmentForm() {\r\n  return useContext(ShareAppointmentFormContext);\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfilePages\\Schedule\\index.tsx",["373","374","375","376"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\Landing\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\LoginPatient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\RegisterPacient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\routes\\PrivateRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\GreenButton\\index.tsx",["377"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\AppointmentStatus\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\HomeClient\\index.tsx",["378"],"import { useState, useEffect } from \"react\";\r\nimport Categories from \"../../components/Categories\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport HeaderPlatform from \"../../components/HeaderPlatform\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport api from \"../../services/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport \"./styles.css\";\r\n\r\nconst HomeClient = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  const [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n\r\n  async function loadMore() {\r\n    setLoading(true);\r\n    let { data } = await api.get(\r\n      `medics?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    Geocode.fromLatLng(\r\n      `${location?.coords.latitude}`,\r\n      `${location?.coords.longitude}`\r\n    ).then((response: any) => {\r\n      try {\r\n        const address = response.results;\r\n        console.log(address);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            console.log(pos);\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        console.log(\"Você precisa ativar sua localização\");\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n        console.log(permission.state);\r\n      };\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadMore();\r\n  }, [location]);\r\n\r\n  Geocode.setApiKey(\"AIzaSyAHU3nGBAYTXAVknTd_OZuyj2k9d9B0i98\");\r\n  Geocode.setLanguage(\"pt\");\r\n  Geocode.setRegion(\"br\");\r\n  Geocode.enableDebug();\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <HeaderPlatform />\r\n      <div className=\"container\">\r\n        <Categories />\r\n        <DoctorList loading={loading} medics={medics} />\r\n        <LoadMoreButton onClick={loadMore} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeClient;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MyProfileSettings\\index.tsx",["379","380","381"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { IoSettingsOutline, IoCardOutline } from \"react-icons/io5\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport refreshUserValidate from \"../../utils/refreshUserValidate\";\r\nimport mask from \"../../utils/mask\";\r\nimport api from \"../../services/api\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { PaymentMethodProps } from \"../Modals/PaymentMethod\";\r\n\r\nconst MyProfileSettings = () => {\r\n  const { spinner, sucesso } = useModal();\r\n  const { user, userID } = useAuth();\r\n  const [refreshUser, setRefreshUser] = useState({\r\n    fullName: `${user.firstName} ${user.lastName}`,\r\n    email: `${user.email}`,\r\n    phoneNumber: `${user.phoneNumber}`,\r\n  });\r\n\r\n  const [errors, setErrors] = useState(refreshUserValidate(refreshUser));\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  function validate() {\r\n    setErrors(refreshUserValidate(refreshUser));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setErrors(refreshUserValidate(refreshUser));\r\n  }, [refreshUser]);\r\n\r\n  async function handleSubmitRefreshUser() {\r\n    const loopedErrors = Object.values(errors);\r\n    if (loopedErrors.length > 0) {\r\n      setFormError(\"O formulário possui erros\");\r\n    } else {\r\n      setFormError(\"\");\r\n      spinner.open();\r\n      await api\r\n        .put(`clients/${userID}`, {\r\n          fullName: refreshUser.fullName,\r\n          phoneNumber: refreshUser.phoneNumber,\r\n        })\r\n        .then(() => {\r\n          spinner.close();\r\n          sucesso.open({\r\n            name: `Parabéns ${refreshUser.fullName}`,\r\n            description: \"Dados atualizados com sucesso!\",\r\n            close: () => sucesso.close(),\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-profile-settings\">\r\n      <div className=\"my-profile-settings-nav\">\r\n        <button>\r\n          <IoSettingsOutline size={40} color=\"#07B3D6\" />\r\n          <span>Configurações da minha conta</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"my-profile-settings-info\">\r\n        <h2>Informações da conta</h2>\r\n        <TextField\r\n          value={refreshUser.fullName}\r\n          name=\"fullname\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={(e) => {\r\n            setRefreshUser({ ...refreshUser, fullName: e.target.value });\r\n            validate();\r\n          }}\r\n          error={errors.fullName ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.fullName}</span>\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          value={refreshUser.email}\r\n          name=\"email\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          error={errors.email ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.email}</span>\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          value={refreshUser.phoneNumber}\r\n          name=\"phoneNumber\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Telefone</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={(e) => {\r\n            setRefreshUser({\r\n              ...refreshUser,\r\n              phoneNumber: mask(e.target.value, \"(##) # ####-####\"),\r\n            });\r\n            validate();\r\n          }}\r\n          error={errors.phoneNumber ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.phoneNumber}</span>\r\n          }\r\n        />\r\n\r\n        <button onClick={handleSubmitRefreshUser} type=\"button\">\r\n          Atualizar dados\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfileSettings;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\AcademicData.tsx",["382"],"import { useEffect, useState } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"../../Select\";\r\nimport \"./styles.css\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicNamesProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicAcademicData = ({ nextPage, previousPage }: MedicNamesProps) => {\r\n  const areaOptions = [\r\n    {\r\n      label: \"Alergista e Imunologista\",\r\n      value: \"Alergista e Imunologista\",\r\n    },\r\n    {\r\n      label: \"Angiologista\",\r\n      value: \"Angiologista\",\r\n    },\r\n    {\r\n      label: \"Cardiologista\",\r\n      value: \"Cardiologista\",\r\n    },\r\n    {\r\n      label: \"Coloproctologista\",\r\n      value: \"Coloproctologista\",\r\n    },\r\n    {\r\n      label: \"Dermatologista\",\r\n      value: \"Dermatologista\",\r\n    },\r\n    {\r\n      label: \"Endocrinologista\",\r\n      value: \"Endocrinologista\",\r\n    },\r\n    {\r\n      label: \"Endoscopista\",\r\n      value: \"Endoscopista\",\r\n    },\r\n    {\r\n      label: \"Gastroenterologista\",\r\n      value: \"Gastroenterologista\",\r\n    },\r\n    {\r\n      label: \"Geriatra\",\r\n      value: \"Geriatra\",\r\n    },\r\n    {\r\n      label: \"Ginecologista\",\r\n      value: \"Ginecologista\",\r\n    },\r\n    {\r\n      label: \"Hematologista\",\r\n      value: \"Hematologista\",\r\n    },\r\n    {\r\n      label: \"Infectologista\",\r\n      value: \"Infectologista\",\r\n    },\r\n    {\r\n      label: \"Nefrologista\",\r\n      value: \"Nefrologista\",\r\n    },\r\n    {\r\n      label: \"Neurologista\",\r\n      value: \"Neurologista\",\r\n    },\r\n    {\r\n      label: \"Nutrologo\",\r\n      value: \"Nutrologo\",\r\n    },\r\n    {\r\n      label: \"Obstetricista\",\r\n      value: \"Obstetricista\",\r\n    },\r\n    {\r\n      label: \"Oftalmologista\",\r\n      value: \"Oftalmologista\",\r\n    },\r\n    {\r\n      label: \"Ortopedista\",\r\n      value: \"Ortopedista\",\r\n    },\r\n    {\r\n      label: \"Otorrinolaringologista\",\r\n      value: \"Otorrinolaringologista\",\r\n    },\r\n    {\r\n      label: \"Pediatra\",\r\n      value: \"Pediatra\",\r\n    },\r\n    {\r\n      label: \"Pneumologista\",\r\n      value: \"Pneumologista\",\r\n    },\r\n    {\r\n      label: \"Radiologista\",\r\n      value: \"Radiologista\",\r\n    },\r\n    {\r\n      label: \"Radioterapista\",\r\n      value: \"Radioterapista\",\r\n    },\r\n    {\r\n      label: \"Reumatologista\",\r\n      value: \"Reumatologista\",\r\n    },\r\n    {\r\n      label: \"Urologista\",\r\n      value: \"Urologista\",\r\n    },\r\n  ];\r\n\r\n  const { medicData, setMedicData } = useShareFormMedic();\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  useEffect(() => {\r\n    setMedicData((previousState) => ({...previousState, area: areaOptions[0].value}))\r\n  }, [areaOptions])\r\n\r\n  console.log(medicData);\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Dados Acadêmicos</h2>\r\n      <div className=\"line\"></div>\r\n      <Select\r\n        name=\"week_day\"\r\n        onChange={(e: any) =>\r\n          setMedicData({ ...medicData, area: e.target.value })\r\n        }\r\n        value={medicData?.area}\r\n        options={areaOptions}\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"Universidade de São Paulo\"\r\n        value={medicData?.graduation}\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Graduação</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, graduation: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"graduação\"\r\n        error={errors?.graduation ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.graduation}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.masterDegree}\r\n        placeholder=\"Universidade de Campinas\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Mestrado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, masterDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"mestrado\"\r\n        error={errors?.masterDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.masterDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.doctorateDegree}\r\n        placeholder=\"Universidade Estadual Paulista\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Doutorado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, doctorateDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.doctorateDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.doctorateDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.crm}\r\n        placeholder=\"010201/SP\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>CRM</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, crm: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.crm ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.crm}</span>\r\n        }\r\n      />\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button className=\"primary\" onClick={(e) => nextPage()}>\r\n        Próximo\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicAcademicData;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Categories\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\refreshUserValidate.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\routes\\PublicRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\RegisterSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\VerifyEmail\\index.tsx",["383"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport verified from \"../../assets/images/verified.svg\";\r\nimport api from \"../../services/api\";\r\n\r\nimport \"./styles.css\";\r\n\r\ninterface VerifyEmailParams {\r\n  token: string;\r\n}\r\n\r\nexport default function VerifyEmail() {\r\n  const history = useHistory();\r\n  const { token } = useParams<VerifyEmailParams>();\r\n\r\n  async function sendEmailVerification() {\r\n    try {\r\n      let response = await api.get(`/users/${token}`);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(response.data.error);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        history.replace(\"/entrar-paciente\");\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.log(\"Ocorreu um erro\"); // Token inválido\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    sendEmailVerification();\r\n  }, []);\r\n  return (\r\n    <div className=\"confirm-email\">\r\n      <div className=\"confirm-email-content\">\r\n        <h1>E-mail verificado!</h1>\r\n        <img src={verified} alt=\"E-mail\" />\r\n        <h2>\r\n          Espere 3 segundos e será redirecionado para a página de login...\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\MedicProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\SubHeaderPlatform\\index.tsx",[],["384","385"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\validateMedicInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\AddCreditCard\\index.tsx",[],["386","387"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\mask.js",[],["388","389"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\MyProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\AppointmentsClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\ConfirmEmail\\index.tsx",["390"],"import \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport email from \"../../assets/images/email.svg\";\r\n\r\nconst ConfirmEmail = () => {\r\n  return (\r\n    <div className=\"confirm-email\">\r\n      <div className=\"confirm-email-content\">\r\n        <h1>Cadastro realizado com sucesso!</h1>\r\n        <img src={email} alt=\"E-mail\" />\r\n        <h2>\r\n          Precisamos agora que você confirme seu e-mail para realizar-mos o\r\n          login.\r\n        </h2>\r\n        <p>Leia vosso e-mail e clique em confirmar e-mail</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmEmail;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\LoginSpitalAccount\\index.tsx",["391","392","393","394","395"],"import { Fragment, useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport returnIcon from \"../../assets/images/icons/return.svg\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\nconst LoginSpitalAccount = () => {\r\n  const { spinner } = useModal();\r\n  const { login, confirmed } = useAuth();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  async function handleSubmitLogin(e: any) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n\r\n    const { error } = await login(user.email, user.password);\r\n\r\n    spinner.close();\r\n    setError(error);\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"header-login\">\r\n        <div className=\"container header-context\">\r\n          <Link className=\"return-link\" to={`/entrar-paciente`}>\r\n            <img src={returnIcon} alt=\"Retornar\" className=\"return\" />\r\n          </Link>\r\n          <div className=\"header-title\">\r\n            <h1>\r\n              Insira suas informações para que a gente consiga realizar seu\r\n              cadastro\r\n            </h1>\r\n          </div>\r\n          <img className=\"logo\" src={logo} alt=\"Spital\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"login-spital-account\">\r\n        <div className=\"login-spital-account-credentials\">\r\n          <form className=\"login-spital-account-form\">\r\n            <div className=\"login-spital-account-form-flex\">\r\n              <h2>Entre com seu e-mail e senha</h2>\r\n\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleShowPassword();\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                <span>{showPassword ? \"Esconder senha\" : \"Mostrar senha\"}</span>\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"gray-line\"></div>\r\n\r\n            <div className=\"login-spital-account-form-inputs\">\r\n              <TextField\r\n                type=\"email\"\r\n                value={user.email}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setUser({ ...user, email: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n                placeholder=\"Digite seu e-mail\"\r\n              />\r\n\r\n              <TextField\r\n                value={user.password}\r\n                style={{ marginTop: \"2rem\" }}\r\n                fullWidth\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                onChange={(e) => {\r\n                  setUser({ ...user, password: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>Senha</span>}\r\n                placeholder=\"Digite sua senha\"\r\n              />\r\n            </div>\r\n\r\n            <p\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                color: \"red\",\r\n                position: \"relative\",\r\n                top: \"-10px\",\r\n              }}\r\n            >\r\n              {error}\r\n            </p>\r\n\r\n            <div className=\"gray-line\" id=\"gray-line-2\"></div>\r\n            <Link\r\n              style={{\r\n                color: \"#07B3D6\",\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                marginTop: \"1.5rem\",\r\n              }}\r\n              to=\"/recuperar\"\r\n            >\r\n              Esqueci minha senha\r\n            </Link>\r\n\r\n            <button onClick={handleSubmitLogin} className=\"login-button\">\r\n              Entrar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginSpitalAccount;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\RecoverPassword\\index.tsx",["396"],"import { IconButton, TextField } from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport api from \"../../services/api\";\r\nimport validateNewPassword from \"../../utils/validateNewPassword\";\r\nimport \"./styles.css\";\r\n\r\ninterface RecoverPasswordParams {\r\n  token?: string;\r\n}\r\n\r\nexport default function RecoverPassword() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  let { token } = useParams<RecoverPasswordParams>();\r\n  const { spinner } = useModal();\r\n  const [isValid, setIsValid] = useState<boolean | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [newPassword, setNewPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState(validateNewPassword(newPassword));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }, [newPassword]);\r\n\r\n  function validate() {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  if (!token || (isValid !== null && !isValid)) {\r\n    spinner.close();\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  const verifyToken = useCallback(async () => {\r\n    spinner.open();\r\n    let response = await api.get(`/users/recover/${token}`);\r\n\r\n    if (response.status === 202) {\r\n      setIsValid(true);\r\n    }\r\n\r\n    setIsLoading(false);\r\n    spinner.close();\r\n  }, [setIsValid, token]);\r\n\r\n  useEffect(() => {\r\n    verifyToken();\r\n  }, [verifyToken]);\r\n\r\n  if (isLoading) {\r\n    return <div></div>;\r\n  }\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n    if (newPassword.password !== newPassword.confirmPassword) {\r\n      spinner.close();\r\n      return;\r\n    }\r\n\r\n    let response = await api.put(`/users/recover/${token}`, {\r\n      password: newPassword.password,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      console.log(\"Senha Mudada\");\r\n      history.replace(\"/\");\r\n    }\r\n\r\n    spinner.close();\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit}>\r\n      <div id=\"flex\">\r\n        <h2>Seu e-mail</h2>\r\n        <IconButton\r\n          onClick={() => {\r\n            handleShowPassword();\r\n          }}\r\n          className=\"show-password-button\"\r\n          color=\"primary\"\r\n        >\r\n          {showPassword ? \"Esconder senha\" : \"Mostrar senha\"}\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={newPassword.password}\r\n        name=\"password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Nova senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setNewPassword({ ...newPassword, password: e.target.value });\r\n          validate();\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors.password ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1.5rem\" }}>{errors.password}</span>\r\n        }\r\n      />\r\n      <TextField\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={newPassword.confirmPassword}\r\n        style={{ marginTop: \"1rem\" }}\r\n        name=\"confirm_password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Confirmar nova senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setNewPassword({ ...newPassword, confirmPassword: e.target.value });\r\n          validate();\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors.confirmPassword ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1.5rem\" }}>{errors.confirmPassword}</span>\r\n        }\r\n      />\r\n      <button className=\"recover-password-button\">Alterar senha</button>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\CadastroSucesso\\index.tsx",["397"],"import { IoClose } from \"react-icons/io5\";\r\nimport Overlay from \"../Overlay\";\r\nimport \"./styles.css\";\r\nimport { IoCheckmarkOutline } from \"react-icons/io5\";\r\n\r\nexport interface CadastroSucessoProps {\r\n  name: string;\r\n  description: string;\r\n  close?: () => void;\r\n}\r\nexport default function CadastroSucesso({\r\n  name,\r\n  close,\r\n  description,\r\n}: CadastroSucessoProps) {\r\n  return (\r\n    <Overlay>\r\n      <div className=\"modal-success\">\r\n        <div className=\"success-icon\">\r\n          <IoCheckmarkOutline color=\"#fff\" size=\"7rem\" />\r\n        </div>\r\n        <h1>{name}!</h1>\r\n\r\n        <p>{description}</p>\r\n\r\n        <button onClick={close}>Continuar</button>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\Spinner\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\context\\ShareClientFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Form\\Steps\\Phone.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\Review.tsx",["398"],"import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport api from \"../../../services/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport getPasswordAsterisk from \"../../../utils/HashPassword\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicReviewProps {\r\n  changePage: (index: number) => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicReview = ({ changePage, previousPage }: MedicReviewProps) => {\r\n  const [backendError, setBackEndError] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { medicData } = useShareFormMedic();\r\n\r\n  const history = useHistory();\r\n\r\n  async function handleSubmitClient() {\r\n    setIsLoading(true);\r\n\r\n    await api\r\n      .post(\"medics\", {\r\n        ...medicData,\r\n      })\r\n      .catch((err) => {\r\n        setBackEndError(err.response.data.error);\r\n      });\r\n\r\n    if (backendError !== null) {\r\n      setIsLoading(false);\r\n    } else {\r\n      console.log(\"Cadastro realizado com sucesso!\");\r\n    }\r\n  }\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const hashedPassword = getPasswordAsterisk(medicData?.password ?? \"\");\r\n\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  const formatedBirthDate = medicData?.birthDate?.replace(/[-]/g, \"/\");\r\n\r\n  async function handleSubmitForm(e: any) {\r\n    e.preventDefault();\r\n    const loopedErrors = Object.values(errors);\r\n    console.log(loopedErrors);\r\n    if (loopedErrors.length > 0) {\r\n      setHasError(true);\r\n    } else {\r\n      handleSubmitClient();\r\n      alert(\"Cadastro realizado com sucesso!\");\r\n      setHasError(false);\r\n      history.push(\"/verificar-email\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Revise seus dados</h2>\r\n      <div className=\"line\"></div>\r\n      <RenderAccordion\r\n        summary=\"Nome e telefone\"\r\n        medicInfo={[\r\n          { type: \"Nome\", info: medicData?.firstName },\r\n          { type: \"Sobrenome\", info: medicData?.lastName },\r\n          { type: \"Telefone\", info: medicData?.phoneNumber },\r\n        ]}\r\n        index={0}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Credenciais\"\r\n        medicInfo={[\r\n          { type: \"E-mail\", info: medicData?.email },\r\n          { type: \"Senha\", info: hashedPassword },\r\n        ]}\r\n        index={1}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados acadêmicos\"\r\n        medicInfo={[\r\n          { type: \"Área médica\", info: medicData?.area },\r\n          { type: \"Graduação\", info: medicData?.graduation },\r\n          { type: \"Mestrado\", info: medicData?.masterDegree },\r\n          { type: \"Doutorado\", info: medicData?.doctorateDegree },\r\n        ]}\r\n        index={2}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados pessoais\"\r\n        medicInfo={[\r\n          { type: \"CPF\", info: medicData?.cpf },\r\n          { type: \"RG\", info: medicData?.rg },\r\n          { type: \"Data de nascimento\", info: formatedBirthDate },\r\n        ]}\r\n        index={3}\r\n        changePage={changePage}\r\n      />\r\n\r\n      <p>\r\n        {hasError ? (\r\n          <span\r\n            style={{\r\n              color: \"red\",\r\n              position: \"relative\",\r\n              top: \"1rem\",\r\n              left: \"1rem\",\r\n            }}\r\n          >\r\n            O formulário possui erros...\r\n          </span>\r\n        ) : (\r\n          <span></span>\r\n        )}\r\n      </p>\r\n\r\n      <p\r\n        style={{\r\n          color: \"red\",\r\n          position: \"relative\",\r\n          top: \"1rem\",\r\n          left: \"1rem\",\r\n        }}\r\n      >\r\n        {backendError}\r\n      </p>\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button onClick={handleSubmitForm} className=\"primary\">\r\n        {isLoading ? (\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n          />\r\n        ) : (\r\n          <p>Cadastrar</p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface RenderAccorditionProps {\r\n  summary: string;\r\n  medicInfo: Array<{\r\n    type: string;\r\n    info: string;\r\n  }>;\r\n  index: number;\r\n  changePage: (index: number) => void;\r\n}\r\n\r\nexport const RenderAccordion: React.FC<RenderAccorditionProps> = ({\r\n  summary,\r\n  medicInfo,\r\n  index,\r\n  changePage,\r\n}) => {\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        {summary}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <div>\r\n          <ListItemText>\r\n            {medicInfo.map((data, index) => {\r\n              return (\r\n                <span\r\n                  style={{ display: \"block\", fontWeight: \"normal\" }}\r\n                  key={index}\r\n                  className=\"dados\"\r\n                >\r\n                  <span style={{ fontWeight: \"bold\", marginRight: \"1rem\" }}>\r\n                    {data.type}:\r\n                  </span>\r\n                  {data.info}\r\n                </span>\r\n              );\r\n            })}\r\n          </ListItemText>\r\n          <button onClick={(e) => changePage(index)}>\r\n            <IconButton component=\"span\" color=\"primary\">\r\n              <EditIcon className=\"editar-icone\" />\r\n            </IconButton>\r\n          </button>\r\n        </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default MedicReview;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\FormMedic\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfileInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\SearchClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\pages\\ForgetPassword\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Header\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfileBox\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\SearchInput\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfilePages\\Main\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\calcPercentage.js",[],["399","400"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\DoctorList\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\validateInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\validateCard.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Form\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\utils\\HashPassword.js",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Modals\\AreYouSure\\index.tsx",["401"],"import Overlay from \"../Overlay\";\r\nimport \"./styles.css\";\r\nimport { IoCheckmarkOutline, IoCloseCircleOutline } from \"react-icons/io5\";\r\n\r\nexport interface AreYouSureProps {\r\n  message: string;\r\n  close?: () => void;\r\n  sureFunction: () => void;\r\n}\r\nexport default function AreYouSure({\r\n  close,\r\n  message,\r\n  sureFunction,\r\n}: AreYouSureProps) {\r\n  return (\r\n    <Overlay>\r\n      <div className=\"are-you-sure\">\r\n        <IoCloseCircleOutline color=\"#f00\" size=\"15rem\" />\r\n        <h1>Você tem certeza?</h1>\r\n        <p>{message}</p>\r\n        <div className=\"are-you-sure-flex\">\r\n          <button\r\n            onClick={close}\r\n            type=\"button\"\r\n            className=\"are-you-sure-button are-you-sure-no\"\r\n          >\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            onClick={sureFunction}\r\n            type=\"button\"\r\n            className=\"are-you-sure-button are-you-sure-yes\"\r\n          >\r\n            Deletar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\ListMedicAreas\\index.tsx",[],["402","403"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\Form\\Steps\\Review.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MyProfileInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfileData\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx",[],["404","405"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\routes\\Router.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\src\\platform-pages\\AppointmentUnique\\index.tsx",["406"],{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"407","replacedBy":"411"},{"ruleId":"409","replacedBy":"412"},{"ruleId":"407","replacedBy":"413"},{"ruleId":"409","replacedBy":"414"},{"ruleId":"407","replacedBy":"415"},{"ruleId":"409","replacedBy":"416"},{"ruleId":"407","replacedBy":"417"},{"ruleId":"409","replacedBy":"418"},{"ruleId":"419","severity":1,"message":"420","line":112,"column":6,"nodeType":"421","endLine":112,"endColumn":8,"suggestions":"422"},{"ruleId":"407","replacedBy":"423"},{"ruleId":"409","replacedBy":"424"},{"ruleId":"407","replacedBy":"425"},{"ruleId":"409","replacedBy":"426"},{"ruleId":"427","severity":1,"message":"428","line":1,"column":10,"nodeType":"429","messageId":"430","endLine":1,"endColumn":26},{"ruleId":"427","severity":1,"message":"431","line":137,"column":20,"nodeType":"429","messageId":"430","endLine":137,"endColumn":34},{"ruleId":"407","replacedBy":"432"},{"ruleId":"409","replacedBy":"433"},{"ruleId":"419","severity":1,"message":"434","line":90,"column":6,"nodeType":"421","endLine":90,"endColumn":39,"suggestions":"435"},{"ruleId":"427","severity":1,"message":"436","line":8,"column":3,"nodeType":"429","messageId":"430","endLine":8,"endColumn":21},{"ruleId":"427","severity":1,"message":"437","line":10,"column":19,"nodeType":"429","messageId":"430","endLine":10,"endColumn":29},{"ruleId":"427","severity":1,"message":"438","line":11,"column":17,"nodeType":"429","messageId":"430","endLine":11,"endColumn":25},{"ruleId":"427","severity":1,"message":"439","line":30,"column":10,"nodeType":"429","messageId":"430","endLine":30,"endColumn":18},{"ruleId":"427","severity":1,"message":"440","line":30,"column":20,"nodeType":"429","messageId":"430","endLine":30,"endColumn":31},{"ruleId":"427","severity":1,"message":"441","line":30,"column":11,"nodeType":"429","messageId":"430","endLine":30,"endColumn":26},{"ruleId":"427","severity":1,"message":"438","line":30,"column":28,"nodeType":"429","messageId":"430","endLine":30,"endColumn":36},{"ruleId":"427","severity":1,"message":"442","line":70,"column":10,"nodeType":"429","messageId":"430","endLine":70,"endColumn":18},{"ruleId":"427","severity":1,"message":"431","line":76,"column":10,"nodeType":"429","messageId":"430","endLine":76,"endColumn":24},{"ruleId":"427","severity":1,"message":"431","line":62,"column":10,"nodeType":"429","messageId":"430","endLine":62,"endColumn":24},{"ruleId":"419","severity":1,"message":"443","line":72,"column":6,"nodeType":"421","endLine":72,"endColumn":16,"suggestions":"444"},{"ruleId":"427","severity":1,"message":"445","line":3,"column":29,"nodeType":"429","messageId":"430","endLine":3,"endColumn":42},{"ruleId":"427","severity":1,"message":"436","line":10,"column":10,"nodeType":"429","messageId":"430","endLine":10,"endColumn":28},{"ruleId":"427","severity":1,"message":"446","line":22,"column":10,"nodeType":"429","messageId":"430","endLine":22,"endColumn":19},{"ruleId":"419","severity":1,"message":"447","line":127,"column":6,"nodeType":"421","endLine":127,"endColumn":19,"suggestions":"448"},{"ruleId":"419","severity":1,"message":"449","line":33,"column":6,"nodeType":"421","endLine":33,"endColumn":8,"suggestions":"450"},{"ruleId":"407","replacedBy":"451"},{"ruleId":"409","replacedBy":"452"},{"ruleId":"407","replacedBy":"453"},{"ruleId":"409","replacedBy":"454"},{"ruleId":"407","replacedBy":"455"},{"ruleId":"409","replacedBy":"456"},{"ruleId":"427","severity":1,"message":"457","line":2,"column":10,"nodeType":"429","messageId":"430","endLine":2,"endColumn":14},{"ruleId":"427","severity":1,"message":"458","line":1,"column":30,"nodeType":"429","messageId":"430","endLine":1,"endColumn":39},{"ruleId":"427","severity":1,"message":"459","line":9,"column":8,"nodeType":"429","messageId":"430","endLine":9,"endColumn":14},{"ruleId":"427","severity":1,"message":"460","line":15,"column":18,"nodeType":"429","messageId":"430","endLine":15,"endColumn":27},{"ruleId":"427","severity":1,"message":"461","line":33,"column":10,"nodeType":"429","messageId":"430","endLine":33,"endColumn":19},{"ruleId":"427","severity":1,"message":"462","line":33,"column":21,"nodeType":"429","messageId":"430","endLine":33,"endColumn":33},{"ruleId":"419","severity":1,"message":"463","line":55,"column":6,"nodeType":"421","endLine":55,"endColumn":25,"suggestions":"464"},{"ruleId":"427","severity":1,"message":"465","line":1,"column":10,"nodeType":"429","messageId":"430","endLine":1,"endColumn":17},{"ruleId":"427","severity":1,"message":"466","line":54,"column":18,"nodeType":"429","messageId":"430","endLine":54,"endColumn":27},{"ruleId":"407","replacedBy":"451"},{"ruleId":"409","replacedBy":"452"},{"ruleId":"427","severity":1,"message":"467","line":3,"column":10,"nodeType":"429","messageId":"430","endLine":3,"endColumn":28},{"ruleId":"407","replacedBy":"455"},{"ruleId":"409","replacedBy":"456"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"427","severity":1,"message":"431","line":58,"column":10,"nodeType":"429","messageId":"430","endLine":58,"endColumn":24},"no-native-reassign",["468"],"no-negated-in-lhs",["469"],["468"],["469"],["468"],["469"],["468"],["469"],["468"],["469"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loginWithToken'. Either include it or remove the dependency array.","ArrayExpression",["470"],["468"],["469"],["468"],["469"],"@typescript-eslint/no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'today_week_day' is assigned a value but never used.",["468"],["469"],"React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["471"],"'PaymentMethodProps' is defined but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'cvvError' is assigned a value but never used.","'setCvvError' is assigned a value but never used.","'appointmentData' is assigned a value but never used.","'week_day' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMore'. Either include it or remove the dependency array.",["472"],"'IoCardOutline' is defined but never used.","'formError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setMedicData'. Either include it or remove the dependency array.",["473"],"React Hook useEffect has a missing dependency: 'sendEmailVerification'. Either include it or remove the dependency array.",["474"],["468"],["469"],["468"],["469"],["468"],["469"],"'Link' is defined but never used.","'useEffect' is defined but never used.","'Loader' is defined but never used.","'confirmed' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'spinner'. Either include it or remove the dependency array.",["475"],"'IoClose' is defined but never used.","'setErrors' is assigned a value but never used.","'IoCheckmarkOutline' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},"Update the dependencies array to be: [loginWithToken]",{"range":"488","text":"489"},"Update the dependencies array to be: [location, maxPrice, maxDistance, reload]",{"range":"490","text":"491"},"Update the dependencies array to be: [loadMore, location]",{"range":"492","text":"493"},"Update the dependencies array to be: [areaOptions, setMedicData]",{"range":"494","text":"495"},"Update the dependencies array to be: [sendEmailVerification]",{"range":"496","text":"497"},"Update the dependencies array to be: [spinner, token]",{"range":"498","text":"499"},[2534,2536],"[loginWithToken]",[2986,3019],"[location, maxPrice, maxDistance, reload]",[2176,2186],"[loadMore, location]",[2796,2809],"[areaOptions, setMedicData]",[854,856],"[sendEmailVerification]",[1581,1600],"[spinner, token]"]