[{"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\App.tsx":"1","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\InfoProvider.tsx":"2","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterPaciente\\index.tsx":"3","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx":"4","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\VerifyEmail\\index.tsx":"5","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentsClient\\index.tsx":"6","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\CadastroSucesso\\index.tsx":"7","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareAppointmentFormProvider.tsx":"8","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Credentials.tsx":"9","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateNewPassword.ts":"10","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SearchInput\\index.tsx":"11","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Overlay\\index.tsx":"12","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\LoadMoreButton\\index.tsx":"13","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileInfo\\index.tsx":"14","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentType\\index.tsx":"15","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Stars\\index.tsx":"16","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx":"17","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\AuthProvider.tsx":"18","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicArea\\index.tsx":"19","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Filtro\\index.tsx":"20","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Names.tsx":"21","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Names.tsx":"22","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ConfirmEmail\\index.tsx":"23","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterPacient\\index.tsx":"24","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterSpitalAccount\\index.tsx":"25","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RecoverPassword\\index.tsx":"26","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\SearchClient\\index.tsx":"27","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\404\\index.tsx":"28","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\HomeClient\\index.tsx":"29","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Location\\index.tsx":"30","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Schedule.tsx":"31","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Review.tsx":"32","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Header\\index.tsx":"33","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateInfo.ts":"34","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileSettings\\index.tsx":"35","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Schedule\\index.tsx":"36","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentStatus\\index.tsx":"37","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileInfo\\index.tsx":"38","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PrivateRoute.tsx":"39","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginPatient\\index.tsx":"40","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginSpitalAccount\\index.tsx":"41","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\Landing\\index.tsx":"42","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\PaymentMethod\\index.tsx":"43","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicProfile\\index.tsx":"44","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareClientFormProvider.tsx":"45","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Phone.tsx":"46","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\mask.js":"47","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PublicRoute.tsx":"48","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileRating\\index.tsx":"49","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MyProfile\\index.tsx":"50","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Spinner\\index.tsx":"51","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Credentials.tsx":"52","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\HeaderPlatform\\index.tsx":"53","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Review\\index.tsx":"54","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Main\\index.tsx":"55","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileData\\index.tsx":"56","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ForgetPassword\\index.tsx":"57","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentUnique\\index.tsx":"58","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\AreYouSure\\index.tsx":"59","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareMedicFormProvider.tsx":"60","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorList\\index.tsx":"61","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Payment\\index.tsx":"62","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\AcademicData.tsx":"63","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListMedicAreas\\index.tsx":"64","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterMedico\\index.tsx":"65","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateMedicInfo.ts":"66","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\PaymentInfo\\index.tsx":"67","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Review.tsx":"68","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Main\\index.tsx":"69","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListAppointments\\index.tsx":"70","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\GreenButton\\index.tsx":"71","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorItem\\index.tsx":"72","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileBox\\index.tsx":"73","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\PersonalData.tsx":"74","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\index.tsx":"75","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\HashPassword.js":"76","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Categories\\index.tsx":"77"},{"size":534,"mtime":1630548022117,"results":"78","hashOfConfig":"79"},{"size":814,"mtime":1622382902434,"results":"80","hashOfConfig":"81"},{"size":1195,"mtime":1630548022579,"results":"82","hashOfConfig":"79"},{"size":2055,"mtime":1630548022587,"results":"83","hashOfConfig":"79"},{"size":1147,"mtime":1630548022594,"results":"84","hashOfConfig":"79"},{"size":536,"mtime":1630548022600,"results":"85","hashOfConfig":"79"},{"size":706,"mtime":1630548022543,"results":"86","hashOfConfig":"79"},{"size":1320,"mtime":1624129381674,"results":"87","hashOfConfig":"81"},{"size":3168,"mtime":1624141015704,"results":"88","hashOfConfig":"81"},{"size":673,"mtime":1630548022621,"results":"89","hashOfConfig":"79"},{"size":774,"mtime":1630548022559,"results":"90","hashOfConfig":"79"},{"size":239,"mtime":1630548022548,"results":"91","hashOfConfig":"79"},{"size":319,"mtime":1630548022524,"results":"92","hashOfConfig":"79"},{"size":2182,"mtime":1630548022554,"results":"93","hashOfConfig":"79"},{"size":1362,"mtime":1630548022494,"results":"94","hashOfConfig":"79"},{"size":1687,"mtime":1630548022563,"results":"95","hashOfConfig":"79"},{"size":8596,"mtime":1631997211565,"results":"96","hashOfConfig":"79"},{"size":3205,"mtime":1624127542008,"results":"97","hashOfConfig":"81"},{"size":4582,"mtime":1630548022603,"results":"98","hashOfConfig":"79"},{"size":3084,"mtime":1624059685260,"results":"99","hashOfConfig":"81"},{"size":2030,"mtime":1624059332765,"results":"100","hashOfConfig":"81"},{"size":2736,"mtime":1630548022513,"results":"101","hashOfConfig":"79"},{"size":609,"mtime":1630548022573,"results":"102","hashOfConfig":"79"},{"size":2069,"mtime":1630548022590,"results":"103","hashOfConfig":"79"},{"size":1669,"mtime":1630548022592,"results":"104","hashOfConfig":"79"},{"size":3971,"mtime":1630548022585,"results":"105","hashOfConfig":"79"},{"size":838,"mtime":1630548022607,"results":"106","hashOfConfig":"79"},{"size":543,"mtime":1630548022595,"results":"107","hashOfConfig":"79"},{"size":3603,"mtime":1630548022601,"results":"108","hashOfConfig":"79"},{"size":866,"mtime":1630548022546,"results":"109","hashOfConfig":"79"},{"size":4568,"mtime":1630548022516,"results":"110","hashOfConfig":"79"},{"size":5706,"mtime":1630548022510,"results":"111","hashOfConfig":"79"},{"size":829,"mtime":1630548022518,"results":"112","hashOfConfig":"79"},{"size":2554,"mtime":1623351811852,"results":"113","hashOfConfig":"81"},{"size":4179,"mtime":1630548022556,"results":"114","hashOfConfig":"79"},{"size":4912,"mtime":1623851246169,"results":"115","hashOfConfig":"81"},{"size":1306,"mtime":1624059089125,"results":"116","hashOfConfig":"81"},{"size":3672,"mtime":1630548022530,"results":"117","hashOfConfig":"79"},{"size":372,"mtime":1620433335573,"results":"118","hashOfConfig":"81"},{"size":2022,"mtime":1630548022582,"results":"119","hashOfConfig":"79"},{"size":4258,"mtime":1630548022583,"results":"120","hashOfConfig":"79"},{"size":1304,"mtime":1630548022576,"results":"121","hashOfConfig":"79"},{"size":1591,"mtime":1630548022550,"results":"122","hashOfConfig":"79"},{"size":1354,"mtime":1630548022604,"results":"123","hashOfConfig":"79"},{"size":1056,"mtime":1630548022570,"results":"124","hashOfConfig":"79"},{"size":2095,"mtime":1630548022509,"results":"125","hashOfConfig":"79"},{"size":187,"mtime":1630548022617,"results":"126","hashOfConfig":"79"},{"size":409,"mtime":1630548022610,"results":"127","hashOfConfig":"79"},{"size":3382,"mtime":1630548022540,"results":"128","hashOfConfig":"79"},{"size":596,"mtime":1630548022606,"results":"129","hashOfConfig":"79"},{"size":336,"mtime":1621110381583,"results":"130","hashOfConfig":"81"},{"size":3361,"mtime":1619828038487,"results":"131","hashOfConfig":"81"},{"size":3944,"mtime":1623938141084,"results":"132","hashOfConfig":"81"},{"size":4910,"mtime":1632090731630,"results":"133","hashOfConfig":"79"},{"size":2724,"mtime":1630548022535,"results":"134","hashOfConfig":"79"},{"size":774,"mtime":1624053038494,"results":"135","hashOfConfig":"81"},{"size":1947,"mtime":1630548022574,"results":"136","hashOfConfig":"79"},{"size":946,"mtime":1630548022598,"results":"137","hashOfConfig":"79"},{"size":1060,"mtime":1630548022542,"results":"138","hashOfConfig":"79"},{"size":1292,"mtime":1630548022571,"results":"139","hashOfConfig":"79"},{"size":1335,"mtime":1627592389512,"results":"140","hashOfConfig":"81"},{"size":1447,"mtime":1630548022537,"results":"141","hashOfConfig":"79"},{"size":5812,"mtime":1624059402155,"results":"142","hashOfConfig":"81"},{"size":5492,"mtime":1628978767410,"results":"143","hashOfConfig":"81"},{"size":1182,"mtime":1630548022577,"results":"144","hashOfConfig":"79"},{"size":3769,"mtime":1623885509327,"results":"145","hashOfConfig":"81"},{"size":2092,"mtime":1624129928750,"results":"146","hashOfConfig":"81"},{"size":5931,"mtime":1624059441444,"results":"147","hashOfConfig":"81"},{"size":11854,"mtime":1632091648234,"results":"148","hashOfConfig":"79"},{"size":5268,"mtime":1630548022521,"results":"149","hashOfConfig":"79"},{"size":2893,"mtime":1622250321965,"results":"150","hashOfConfig":"81"},{"size":1446,"mtime":1626543603976,"results":"151","hashOfConfig":"81"},{"size":969,"mtime":1630548022526,"results":"152","hashOfConfig":"79"},{"size":2779,"mtime":1630548022514,"results":"153","hashOfConfig":"79"},{"size":197,"mtime":1629051788364,"results":"154","hashOfConfig":"81"},{"size":169,"mtime":1630548022614,"results":"155","hashOfConfig":"79"},{"size":1718,"mtime":1630548022499,"results":"156","hashOfConfig":"79"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"100xj",{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"1jczwlb",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"159"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"189"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"159"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"175"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"209"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"159"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"271"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"162"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"189"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\App.tsx",[],["331","332"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\InfoProvider.tsx",[],["333","334"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterPaciente\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\VerifyEmail\\index.tsx",["335"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentsClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\CadastroSucesso\\index.tsx",["336"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareAppointmentFormProvider.tsx",[],["337","338"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Credentials.tsx",[],["339","340"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateNewPassword.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SearchInput\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Overlay\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\LoadMoreButton\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileInfo\\index.tsx",[],["341","342"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentType\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Stars\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\AuthProvider.tsx",["343"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicArea\\index.tsx",["344"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Filtro\\index.tsx",[],["345","346"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Names.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Names.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ConfirmEmail\\index.tsx",[],["347","348"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterPacient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RecoverPassword\\index.tsx",["349"],"import { IconButton, TextField } from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport api from \"../../services/api\";\r\nimport validateNewPassword from \"../../utils/validateNewPassword\";\r\nimport \"./styles.css\";\r\n\r\ninterface RecoverPasswordParams {\r\n  token?: string;\r\n}\r\n\r\nexport default function RecoverPassword() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  let { token } = useParams<RecoverPasswordParams>();\r\n  const { spinner } = useModal();\r\n  const [isValid, setIsValid] = useState<boolean | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [newPassword, setNewPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState(validateNewPassword(newPassword));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }, [newPassword]);\r\n\r\n  function validate() {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  if (!token || (isValid !== null && !isValid)) {\r\n    spinner.close();\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  const verifyToken = useCallback(async () => {\r\n    spinner.open();\r\n    let response = await api.get(`/users/recover/${token}`);\r\n\r\n    if (response.status === 202) {\r\n      setIsValid(true);\r\n    }\r\n\r\n    setIsLoading(false);\r\n    spinner.close();\r\n  }, [setIsValid, token]);\r\n\r\n  useEffect(() => {\r\n    verifyToken();\r\n  }, [verifyToken]);\r\n\r\n  if (isLoading) {\r\n    return <div></div>;\r\n  }\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n    if (newPassword.password !== newPassword.confirmPassword) {\r\n      spinner.close();\r\n      return;\r\n    }\r\n\r\n    let response = await api.put(`/users/recover/${token}`, {\r\n      password: newPassword.password,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      history.replace(\"/\");\r\n    }\r\n\r\n    spinner.close();\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit}>\r\n      <div id=\"flex\">\r\n        <h2>Seu e-mail</h2>\r\n        <IconButton\r\n          onClick={() => {\r\n            handleShowPassword();\r\n          }}\r\n          className=\"show-password-button\"\r\n          color=\"primary\"\r\n        >\r\n          {showPassword ? \"Esconder senha\" : \"Mostrar senha\"}\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={newPassword.password}\r\n        name=\"password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Nova senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setNewPassword({ ...newPassword, password: e.target.value });\r\n          validate();\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors.password ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1.5rem\" }}>{errors.password}</span>\r\n        }\r\n      />\r\n      <TextField\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={newPassword.confirmPassword}\r\n        style={{ marginTop: \"1rem\" }}\r\n        name=\"confirm_password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Confirmar nova senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setNewPassword({ ...newPassword, confirmPassword: e.target.value });\r\n          validate();\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors.confirmPassword ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1.5rem\" }}>{errors.confirmPassword}</span>\r\n        }\r\n      />\r\n      <button className=\"recover-password-button\">Alterar senha</button>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\SearchClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\404\\index.tsx",["350"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport image404 from \"../../assets/images/404.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div className=\"page-404\">\r\n      <h1>Página não encontrada...</h1>\r\n      <img src={image404} />\r\n      <p>\r\n        Página ou usuário não encontrado. Podem ter sido excluídos, atualizados\r\n        ou nem se quer ter existido.\r\n      </p>\r\n      <Link to=\"/\">Voltar para página principal</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\HomeClient\\index.tsx",["351"],"import { useState, useEffect } from \"react\";\r\nimport Categories from \"../../components/Categories\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport HeaderPlatform from \"../../components/HeaderPlatform\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport api from \"../../services/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport \"./styles.css\";\r\nimport { useInfoData } from \"../../context/InfoProvider\";\r\n\r\nconst HomeClient = () => {\r\n  const { setInfoData, infoData } = useInfoData();\r\n  const [isLocationActivated, setIsLocationActivated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  let [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n\r\n  async function loadMore() {\r\n    setLoading(true);\r\n    let { data } = await api.get(\r\n      `medics?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    Geocode.fromLatLng(\r\n      `${location?.coords.latitude}`,\r\n      `${location?.coords.longitude}`\r\n    ).then((response: any) => {\r\n      try {\r\n        const address = response.results;\r\n        setInfoData({ ...infoData, location: address[0].formatted_address });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        setIsLocationActivated(true);\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        console.log(\"Você precisa ativar sua localização\");\r\n        setIsLocationActivated(false);\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n      };\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!location) {\r\n      // Nothing\r\n    } else {\r\n      loadMore();\r\n    }\r\n  }, [location]);\r\n\r\n  Geocode.setApiKey(\"AIzaSyDanmMSOYTtyp-Lbu43BVKiSW5EP8FRS9Y\");\r\n  Geocode.setLanguage(\"pt\");\r\n  Geocode.setRegion(\"br\");\r\n  Geocode.enableDebug();\r\n\r\n  return (\r\n    <>\r\n      {isLocationActivated ? (\r\n        <div className=\"client-platform\">\r\n          <HeaderPlatform />\r\n          <div className=\"container\">\r\n            <Categories />\r\n            <DoctorList loading={loading} medics={medics} />\r\n            <LoadMoreButton onClick={loadMore} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"location-message\">\r\n          <h1>Você precisa ativar sua localização para continuarmos</h1>\r\n          <p>\r\n            Caso tenha dificuldades, isso pode de ajudar:{\" \"}\r\n            <a\r\n              href=\"https://support.google.com/chrome/answer/142065?co=GENIE.Platform%3DDesktop&hl=pt\"\r\n              rel=\"noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              https://support.google.com/chrome/answer/142065?co=GENIE.Platform%3DDesktop&hl=pt\r\n            </a>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeClient;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Location\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Schedule.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Review.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Header\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileSettings\\index.tsx",["352","353","354"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Schedule\\index.tsx",["355","356"],"import { useParams } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../../../services/api\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport {\r\n  ParamTypes,\r\n  MedicProps,\r\n} from \"../../../components/MedicProfilePages/Main\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport {\r\n  IoChevronBackOutline,\r\n  IoChevronForwardOutline,\r\n  IoArrowUndoSharp,\r\n  IoArrowRedoSharp,\r\n} from \"react-icons/io5\";\r\nimport DaySchedule from \"../../../components/DaySchedule\";\r\nimport AppointmentType from \"../../../components/AppointmentType\";\r\nimport GreenButton from \"../../../components/GreenButton\";\r\nimport { NamesProps } from \"../../Form/Steps/Names\";\r\n\r\ninterface ConsultTypeProps {\r\n  type: string;\r\n  price: string;\r\n}\r\n\r\nconst ScheduleMedicProfile = ({ nextPage, previousPage }: NamesProps) => {\r\n  const [consultTypes, setConsultTypes] = useState<ConsultTypeProps[]>([]);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const [medic, setMedic] = useState<MedicProps | null>(null);\r\n\r\n  function calculateMonth(month: any) {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  const dateString = date.toString();\r\n\r\n  const [week_day, month, month_day, year] = dateString.split(\" \");\r\n  const numberMonth = calculateMonth(month);\r\n  const totalDate = Number(month_day) + numberMonth * Number(year);\r\n\r\n  const today = new Date();\r\n  const todayString = today.toString();\r\n  const [today_week_day, today_month, today_month_day, today_year] =\r\n    todayString.split(\" \");\r\n\r\n  const todayNumberMonth = calculateMonth(today_month);\r\n  const today_totalDate =\r\n    Number(today_month_day) + todayNumberMonth * Number(today_year);\r\n\r\n  const { medicID } = useParams<ParamTypes>();\r\n\r\n  useEffect(() => {\r\n    api.get(`medics?id=${medicID}`).then((response: any) => {\r\n      setMedic(response.data);\r\n    });\r\n  }, [medicID]);\r\n\r\n  useEffect(() => {\r\n    api.get(`consult-type?medicID=${medic?.id}`).then((response: any) => {\r\n      setConsultTypes(response.data);\r\n    });\r\n  }, [medic, setConsultTypes]);\r\n\r\n  function transformMonth() {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Agendar consulta com Dr(a). ${medic?.firstName}`}\r\n        returnFunction={() => previousPage()}\r\n      />\r\n      <div className=\"container\">\r\n        <Calendar\r\n          prevLabel={<IoChevronBackOutline color=\"#07B3D6\" />}\r\n          nextLabel={<IoChevronForwardOutline color=\"#07B3D6\" />}\r\n          prev2Label={<IoArrowUndoSharp color=\"#07B3D6\" />}\r\n          next2Label={<IoArrowRedoSharp color=\"#07B3D6\" />}\r\n          className=\"big-calendar\"\r\n          value={date}\r\n          onChange={(e: any) => {\r\n            setDate(e);\r\n          }}\r\n        />\r\n\r\n        {totalDate < today_totalDate ? (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"2rem\",\r\n              backgroundColor: \"#fff\",\r\n              fontSize: \"1.5rem\",\r\n              marginTop: \"2rem\",\r\n              borderRadius: \"4rem\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Você por acaso possui uma máquina de tempo?\r\n          </div>\r\n        ) : (\r\n          <DaySchedule\r\n            getMonth={transformMonth}\r\n            year={year}\r\n            monthDay={month_day}\r\n            medic_id={medic?.id}\r\n          />\r\n        )}\r\n\r\n        <AppointmentType consultTypes={consultTypes} />\r\n\r\n        <GreenButton\r\n          nextPage={nextPage}\r\n          getMonth={transformMonth}\r\n          year={year}\r\n          monthDay={month_day}\r\n          label=\"Revisar consulta\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScheduleMedicProfile;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentStatus\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PrivateRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginPatient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginSpitalAccount\\index.tsx",["357","358","359","360","361"],"import { Fragment, useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport returnIcon from \"../../assets/images/icons/return.svg\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\nconst LoginSpitalAccount = () => {\r\n  const { spinner } = useModal();\r\n  const { login, confirmed } = useAuth();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  async function handleSubmitLogin(e: any) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n\r\n    const { error } = await login(user.email, user.password);\r\n\r\n    spinner.close();\r\n    setError(error);\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"header-login\">\r\n        <div className=\"container header-context\">\r\n          <Link className=\"return-link\" to={`/entrar-registrar-paciente`}>\r\n            <img src={returnIcon} alt=\"Retornar\" className=\"return\" />\r\n          </Link>\r\n          <div className=\"header-title\">\r\n            <h1>\r\n              Insira suas informações para que a gente consiga realizar seu\r\n              cadastro\r\n            </h1>\r\n          </div>\r\n          <img className=\"logo\" src={logo} alt=\"Spital\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"login-spital-account\">\r\n        <div className=\"login-spital-account-credentials\">\r\n          <form className=\"login-spital-account-form\">\r\n            <div className=\"login-spital-account-form-flex\">\r\n              <h2>Entre com seu e-mail e senha</h2>\r\n\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleShowPassword();\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                <span>{showPassword ? \"Esconder senha\" : \"Mostrar senha\"}</span>\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"gray-line\"></div>\r\n\r\n            <div className=\"login-spital-account-form-inputs\">\r\n              <TextField\r\n                type=\"email\"\r\n                value={user.email}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setUser({ ...user, email: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n                placeholder=\"Digite seu e-mail\"\r\n              />\r\n\r\n              <TextField\r\n                value={user.password}\r\n                style={{ marginTop: \"2rem\" }}\r\n                fullWidth\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                onChange={(e) => {\r\n                  setUser({ ...user, password: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>Senha</span>}\r\n                placeholder=\"Digite sua senha\"\r\n              />\r\n            </div>\r\n\r\n            <p\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                color: \"red\",\r\n                position: \"relative\",\r\n                top: \"-10px\",\r\n              }}\r\n            >\r\n              {error}\r\n            </p>\r\n\r\n            <div className=\"gray-line\" id=\"gray-line-2\"></div>\r\n            <Link\r\n              style={{\r\n                color: \"#07B3D6\",\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                marginTop: \"1.5rem\",\r\n              }}\r\n              to=\"/recuperar\"\r\n            >\r\n              Esqueci minha senha\r\n            </Link>\r\n\r\n            <button onClick={handleSubmitLogin} className=\"login-button\">\r\n              Entrar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginSpitalAccount;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\Landing\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\PaymentMethod\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareClientFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Phone.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\mask.js",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PublicRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileRating\\index.tsx",["362"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MyProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Spinner\\index.tsx",[],["363","364"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\HeaderPlatform\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Review\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Main\\index.tsx",["365"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileData\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ForgetPassword\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentUnique\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\AreYouSure\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareMedicFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorList\\index.tsx",[],["366","367"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Payment\\index.tsx",["368","369"],"import \"./styles.css\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport PaymentInfo from \"../../../components/PaymentInfo\";\r\nimport { NamesProps } from \"../../Form/Steps/Names\";\r\nimport { useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { PaymentMethodProps } from \"../../Modals/PaymentMethod\";\r\n\r\nconst PaymentMedicProfile = ({ previousPage, nextPage }: NamesProps) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [cardInfo, setCardInfo] = useState<PaymentMethodProps>({\r\n    id: \"\",\r\n    first_digits: \"\",\r\n    last_digits: \"\",\r\n    holder_name: \"\",\r\n    expiration_date: \"\",\r\n    card_cvv: \"\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title=\"Dados da consulta\"\r\n        returnFunction={() => previousPage()}\r\n      />\r\n      <div className=\"container\">\r\n        <PaymentInfo card={cardInfo} setCard={setCardInfo} error={error} />\r\n        {loading ? (\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <>\r\n            <button onClick={nextPage} className=\"green-button\">\r\n              Ir para o pagamento\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentMedicProfile;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\AcademicData.tsx",["370"],"import { useEffect, useState } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"../../Select\";\r\nimport \"./styles.css\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicNamesProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicAcademicData = ({ nextPage, previousPage }: MedicNamesProps) => {\r\n  const areaOptions = [\r\n    {\r\n      label: \"Alergista e Imunologista\",\r\n      value: \"Alergista e Imunologista\",\r\n    },\r\n    {\r\n      label: \"Angiologista\",\r\n      value: \"Angiologista\",\r\n    },\r\n    {\r\n      label: \"Cardiologista\",\r\n      value: \"Cardiologista\",\r\n    },\r\n    {\r\n      label: \"Coloproctologista\",\r\n      value: \"Coloproctologista\",\r\n    },\r\n    {\r\n      label: \"Dermatologista\",\r\n      value: \"Dermatologista\",\r\n    },\r\n    {\r\n      label: \"Endocrinologista\",\r\n      value: \"Endocrinologista\",\r\n    },\r\n    {\r\n      label: \"Endoscopista\",\r\n      value: \"Endoscopista\",\r\n    },\r\n    {\r\n      label: \"Gastroenterologista\",\r\n      value: \"Gastroenterologista\",\r\n    },\r\n    {\r\n      label: \"Geriatra\",\r\n      value: \"Geriatra\",\r\n    },\r\n    {\r\n      label: \"Ginecologista\",\r\n      value: \"Ginecologista\",\r\n    },\r\n    {\r\n      label: \"Hematologista\",\r\n      value: \"Hematologista\",\r\n    },\r\n    {\r\n      label: \"Infectologista\",\r\n      value: \"Infectologista\",\r\n    },\r\n    {\r\n      label: \"Nefrologista\",\r\n      value: \"Nefrologista\",\r\n    },\r\n    {\r\n      label: \"Neurologista\",\r\n      value: \"Neurologista\",\r\n    },\r\n    {\r\n      label: \"Nutrologo\",\r\n      value: \"Nutrologo\",\r\n    },\r\n    {\r\n      label: \"Obstetricista\",\r\n      value: \"Obstetricista\",\r\n    },\r\n    {\r\n      label: \"Oftalmologista\",\r\n      value: \"Oftalmologista\",\r\n    },\r\n    {\r\n      label: \"Ortopedista\",\r\n      value: \"Ortopedista\",\r\n    },\r\n    {\r\n      label: \"Otorrinolaringologista\",\r\n      value: \"Otorrinolaringologista\",\r\n    },\r\n    {\r\n      label: \"Pediatra\",\r\n      value: \"Pediatra\",\r\n    },\r\n    {\r\n      label: \"Pneumologista\",\r\n      value: \"Pneumologista\",\r\n    },\r\n    {\r\n      label: \"Radiologista\",\r\n      value: \"Radiologista\",\r\n    },\r\n    {\r\n      label: \"Radioterapista\",\r\n      value: \"Radioterapista\",\r\n    },\r\n    {\r\n      label: \"Reumatologista\",\r\n      value: \"Reumatologista\",\r\n    },\r\n    {\r\n      label: \"Urologista\",\r\n      value: \"Urologista\",\r\n    },\r\n  ];\r\n\r\n  const { medicData, setMedicData } = useShareFormMedic();\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  useEffect(() => {\r\n    setMedicData((previousState) => ({\r\n      ...previousState,\r\n      area: areaOptions[0].value,\r\n    }));\r\n  }, [areaOptions]);\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Dados Acadêmicos</h2>\r\n      <div className=\"line\"></div>\r\n      <Select\r\n        name=\"week_day\"\r\n        onChange={(e: any) =>\r\n          setMedicData({ ...medicData, area: e.target.value })\r\n        }\r\n        value={medicData?.area}\r\n        options={areaOptions}\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"Universidade de São Paulo\"\r\n        value={medicData?.graduation}\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Graduação</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, graduation: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"graduação\"\r\n        error={errors?.graduation ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.graduation}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.masterDegree}\r\n        placeholder=\"Universidade de Campinas\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Mestrado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, masterDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"mestrado\"\r\n        error={errors?.masterDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.masterDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.doctorateDegree}\r\n        placeholder=\"Universidade Estadual Paulista\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Doutorado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, doctorateDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.doctorateDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.doctorateDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.crm}\r\n        placeholder=\"010201/SP\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>CRM</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, crm: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.crm ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.crm}</span>}\r\n      />\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button className=\"primary\" onClick={(e) => nextPage()}>\r\n        Próximo\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicAcademicData;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListMedicAreas\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterMedico\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateMedicInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\PaymentInfo\\index.tsx",[],["371","372"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Review.tsx",["373"],"import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport api from \"../../../services/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport getPasswordAsterisk from \"../../../utils/HashPassword\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicReviewProps {\r\n  changePage: (index: number) => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicReview = ({ changePage, previousPage }: MedicReviewProps) => {\r\n  const [backendError, setBackEndError] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { medicData } = useShareFormMedic();\r\n\r\n  const history = useHistory();\r\n\r\n  async function handleSubmitClient() {\r\n    setIsLoading(true);\r\n\r\n    await api\r\n      .post(\"medics\", {\r\n        ...medicData,\r\n      })\r\n      .catch((err) => {\r\n        setBackEndError(err.response.data.error);\r\n      });\r\n\r\n    if (backendError !== null) {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const hashedPassword = getPasswordAsterisk(medicData?.password ?? \"\");\r\n\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  const formatedBirthDate = medicData?.birthDate?.replace(/[-]/g, \"/\");\r\n\r\n  async function handleSubmitForm(e: any) {\r\n    e.preventDefault();\r\n    const loopedErrors = Object.values(errors);\r\n    if (loopedErrors.length > 0) {\r\n      setHasError(true);\r\n    } else {\r\n      handleSubmitClient();\r\n      alert(\"Cadastro realizado com sucesso!\");\r\n      setHasError(false);\r\n      history.push(\"/verificar-email\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Revise seus dados</h2>\r\n      <div className=\"line\"></div>\r\n      <RenderAccordion\r\n        summary=\"Nome e telefone\"\r\n        medicInfo={[\r\n          { type: \"Nome\", info: medicData?.firstName },\r\n          { type: \"Sobrenome\", info: medicData?.lastName },\r\n          { type: \"Telefone\", info: medicData?.phoneNumber },\r\n        ]}\r\n        index={0}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Credenciais\"\r\n        medicInfo={[\r\n          { type: \"E-mail\", info: medicData?.email },\r\n          { type: \"Senha\", info: hashedPassword },\r\n        ]}\r\n        index={1}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados acadêmicos\"\r\n        medicInfo={[\r\n          { type: \"Área médica\", info: medicData?.area },\r\n          { type: \"Graduação\", info: medicData?.graduation },\r\n          { type: \"Mestrado\", info: medicData?.masterDegree },\r\n          { type: \"Doutorado\", info: medicData?.doctorateDegree },\r\n        ]}\r\n        index={2}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados pessoais\"\r\n        medicInfo={[\r\n          { type: \"CPF\", info: medicData?.cpf },\r\n          { type: \"RG\", info: medicData?.rg },\r\n          { type: \"Data de nascimento\", info: formatedBirthDate },\r\n        ]}\r\n        index={3}\r\n        changePage={changePage}\r\n      />\r\n\r\n      <p>\r\n        {hasError ? (\r\n          <span\r\n            style={{\r\n              color: \"red\",\r\n              position: \"relative\",\r\n              top: \"1rem\",\r\n              left: \"1rem\",\r\n            }}\r\n          >\r\n            O formulário possui erros...\r\n          </span>\r\n        ) : (\r\n          <span></span>\r\n        )}\r\n      </p>\r\n\r\n      <p\r\n        style={{\r\n          color: \"red\",\r\n          position: \"relative\",\r\n          top: \"1rem\",\r\n          left: \"1rem\",\r\n        }}\r\n      >\r\n        {backendError}\r\n      </p>\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button onClick={handleSubmitForm} className=\"primary\">\r\n        {isLoading ? (\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n          />\r\n        ) : (\r\n          <p>Cadastrar</p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface RenderAccorditionProps {\r\n  summary: string;\r\n  medicInfo: Array<{\r\n    type: string;\r\n    info: string;\r\n  }>;\r\n  index: number;\r\n  changePage: (index: number) => void;\r\n}\r\n\r\nexport const RenderAccordion: React.FC<RenderAccorditionProps> = ({\r\n  summary,\r\n  medicInfo,\r\n  index,\r\n  changePage,\r\n}) => {\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        {summary}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <div>\r\n          <ListItemText>\r\n            {medicInfo.map((data, index) => {\r\n              return (\r\n                <span\r\n                  style={{ display: \"block\", fontWeight: \"normal\" }}\r\n                  key={index}\r\n                  className=\"dados\"\r\n                >\r\n                  <span style={{ fontWeight: \"bold\", marginRight: \"1rem\" }}>\r\n                    {data.type}:\r\n                  </span>\r\n                  {data.info}\r\n                </span>\r\n              );\r\n            })}\r\n          </ListItemText>\r\n          <button onClick={(e) => changePage(index)}>\r\n            <IconButton component=\"span\" color=\"primary\">\r\n              <EditIcon className=\"editar-icone\" />\r\n            </IconButton>\r\n          </button>\r\n        </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default MedicReview;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Main\\index.tsx",["374","375","376"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListAppointments\\index.tsx",["377"],"import { useEffect, useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport api from \"../../services/api\";\r\nimport \"./styles.css\";\r\n\r\nexport interface AppointmentProps {\r\n  area: string;\r\n  birth_date: string;\r\n  clientID: number;\r\n  cpf: string;\r\n  created_at: string;\r\n  crm: string;\r\n  date: string;\r\n  doctorate_degree: string;\r\n  graduation: string;\r\n  id: number;\r\n  master_degree: string;\r\n  medicID: number;\r\n  phoneNumber: string;\r\n  price: string;\r\n  rg: string;\r\n  scheduleID: number;\r\n  time: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  confirmed: boolean;\r\n  rated: boolean;\r\n  transactionID: string;\r\n  url: string;\r\n}\r\n\r\nconst ListAppointments = () => {\r\n  const { userID } = useAuth();\r\n  const [clientID, setClientID] = useState(\"\");\r\n  const [appointments, setAppointments] = useState<AppointmentProps[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`clients?id=${userID}`).then((response: any) => {\r\n      setClientID(response.data.id);\r\n      setLoading(false);\r\n    });\r\n  }, [userID]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`appointments/${clientID}`).then((response: any) => {\r\n      console.log(response.data);\r\n      setAppointments(response.data);\r\n      setLoading(false);\r\n    });\r\n  }, [clientID, setAppointments]);\r\n\r\n  function calculateMonth(month: any) {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  if (appointments.length === 0) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          padding: \"1rem\",\r\n        }}\r\n      >\r\n        <h1 style={{ fontSize: \"4rem\", fontWeight: \"bold\" }}>\r\n          Sem consultas agendadas\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-appointments\">\r\n      {loading ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {appointments.map((appointment: AppointmentProps, index: number) => {\r\n            const [month, day, year] = appointment.date.split(\"/\");\r\n            const dateResult = Number(month) * Number(year) + Number(day);\r\n\r\n            const today = new Date();\r\n            const todayString = today.toString();\r\n            const [today_week_day, today_month, today_month_day, today_year] =\r\n              todayString.split(\" \");\r\n            const todayNumberMonth = calculateMonth(today_month);\r\n            const today_totalDate =\r\n              Number(today_month_day) + todayNumberMonth * Number(today_year);\r\n\r\n            return (\r\n              <Link\r\n                key={index}\r\n                to={`/consultas/${appointment.scheduleID}`}\r\n                className=\"list-appointments-unique\"\r\n              >\r\n                <div className=\"list-appoints-unique-information\">\r\n                  <div className=\"list-appoints-unique-information-flex\">\r\n                    <img\r\n                      src={appointment.url}\r\n                      alt=\"Avatar\"\r\n                      className=\"list-appoints-unique-information-image\"\r\n                    />\r\n                    <div className=\"list-appoints-unique-information-text\">\r\n                      <h2>Consulta Dr(a) {appointment.first_name}</h2>\r\n                      <span>{appointment.area}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list-appoints-unique-status\">\r\n                    {dateResult < today_totalDate ? (\r\n                      <div className=\"list-appoints-unique-status-value\">\r\n                        Concluída\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"list-appoints-unique-status-value\">\r\n                        Ativa\r\n                      </div>\r\n                    )}\r\n                    <p className=\"list-appoints-unique-status-text\">\r\n                      Dia {`${day}/${month}/${year}`}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <footer>\r\n                  <p style={{ marginRight: \"2rem\" }}>{appointment.time}</p>\r\n                </footer>\r\n              </Link>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListAppointments;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\GreenButton\\index.tsx",["378"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorItem\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileBox\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\PersonalData.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\HashPassword.js",[],["379","380"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Categories\\index.tsx",[],{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"381","replacedBy":"385"},{"ruleId":"383","replacedBy":"386"},{"ruleId":"387","severity":1,"message":"388","line":33,"column":6,"nodeType":"389","endLine":33,"endColumn":8,"suggestions":"390"},{"ruleId":"391","severity":1,"message":"392","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":17},{"ruleId":"381","replacedBy":"395"},{"ruleId":"383","replacedBy":"396"},{"ruleId":"381","replacedBy":"397"},{"ruleId":"383","replacedBy":"398"},{"ruleId":"381","replacedBy":"399"},{"ruleId":"383","replacedBy":"400"},{"ruleId":"387","severity":1,"message":"401","line":119,"column":6,"nodeType":"389","endLine":119,"endColumn":8,"suggestions":"402"},{"ruleId":"387","severity":1,"message":"403","line":101,"column":6,"nodeType":"389","endLine":101,"endColumn":39,"suggestions":"404"},{"ruleId":"381","replacedBy":"405"},{"ruleId":"383","replacedBy":"406"},{"ruleId":"381","replacedBy":"407"},{"ruleId":"383","replacedBy":"408"},{"ruleId":"387","severity":1,"message":"409","line":55,"column":6,"nodeType":"389","endLine":55,"endColumn":25,"suggestions":"410"},{"ruleId":"411","severity":1,"message":"412","line":10,"column":7,"nodeType":"413","endLine":10,"endColumn":29},{"ruleId":"387","severity":1,"message":"414","line":79,"column":6,"nodeType":"389","endLine":79,"endColumn":16,"suggestions":"415"},{"ruleId":"391","severity":1,"message":"416","line":3,"column":29,"nodeType":"393","messageId":"394","endLine":3,"endColumn":42},{"ruleId":"391","severity":1,"message":"417","line":10,"column":10,"nodeType":"393","messageId":"394","endLine":10,"endColumn":28},{"ruleId":"391","severity":1,"message":"418","line":22,"column":10,"nodeType":"393","messageId":"394","endLine":22,"endColumn":19},{"ruleId":"391","severity":1,"message":"419","line":68,"column":10,"nodeType":"393","messageId":"394","endLine":68,"endColumn":18},{"ruleId":"391","severity":1,"message":"420","line":74,"column":10,"nodeType":"393","messageId":"394","endLine":74,"endColumn":24},{"ruleId":"391","severity":1,"message":"421","line":1,"column":30,"nodeType":"393","messageId":"394","endLine":1,"endColumn":39},{"ruleId":"391","severity":1,"message":"422","line":9,"column":8,"nodeType":"393","messageId":"394","endLine":9,"endColumn":14},{"ruleId":"391","severity":1,"message":"423","line":15,"column":18,"nodeType":"393","messageId":"394","endLine":15,"endColumn":27},{"ruleId":"391","severity":1,"message":"424","line":33,"column":10,"nodeType":"393","messageId":"394","endLine":33,"endColumn":19},{"ruleId":"391","severity":1,"message":"425","line":33,"column":21,"nodeType":"393","messageId":"394","endLine":33,"endColumn":33},{"ruleId":"411","severity":1,"message":"412","line":74,"column":25,"nodeType":"413","endLine":78,"endColumn":27},{"ruleId":"381","replacedBy":"426"},{"ruleId":"383","replacedBy":"427"},{"ruleId":"387","severity":1,"message":"428","line":60,"column":6,"nodeType":"389","endLine":60,"endColumn":15,"suggestions":"429"},{"ruleId":"381","replacedBy":"430"},{"ruleId":"383","replacedBy":"431"},{"ruleId":"391","severity":1,"message":"432","line":10,"column":19,"nodeType":"393","messageId":"394","endLine":10,"endColumn":29},{"ruleId":"391","severity":1,"message":"433","line":11,"column":17,"nodeType":"393","messageId":"394","endLine":11,"endColumn":25},{"ruleId":"387","severity":1,"message":"434","line":130,"column":6,"nodeType":"389","endLine":130,"endColumn":19,"suggestions":"435"},{"ruleId":"381","replacedBy":"436"},{"ruleId":"383","replacedBy":"437"},{"ruleId":"391","severity":1,"message":"438","line":52,"column":18,"nodeType":"393","messageId":"394","endLine":52,"endColumn":27},{"ruleId":"391","severity":1,"message":"420","line":61,"column":10,"nodeType":"393","messageId":"394","endLine":61,"endColumn":24},{"ruleId":"391","severity":1,"message":"439","line":73,"column":9,"nodeType":"393","messageId":"394","endLine":73,"endColumn":22},{"ruleId":"391","severity":1,"message":"440","line":150,"column":23,"nodeType":"393","messageId":"394","endLine":150,"endColumn":32},{"ruleId":"391","severity":1,"message":"420","line":134,"column":20,"nodeType":"393","messageId":"394","endLine":134,"endColumn":34},{"ruleId":"391","severity":1,"message":"420","line":62,"column":10,"nodeType":"393","messageId":"394","endLine":62,"endColumn":24},{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},"no-native-reassign",["441"],"no-negated-in-lhs",["442"],["441"],["442"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendEmailVerification'. Either include it or remove the dependency array.","ArrayExpression",["443"],"@typescript-eslint/no-unused-vars","'IoClose' is defined but never used.","Identifier","unusedVar",["441"],["442"],["441"],["442"],["441"],["442"],"React Hook useEffect has a missing dependency: 'loginWithToken'. Either include it or remove the dependency array.",["444"],"React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["445"],["441"],["442"],["441"],["442"],"React Hook useCallback has a missing dependency: 'spinner'. Either include it or remove the dependency array.",["446"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadMore'. Either include it or remove the dependency array.",["447"],"'IoCardOutline' is defined but never used.","'PaymentMethodProps' is defined but never used.","'formError' is assigned a value but never used.","'week_day' is assigned a value but never used.","'today_week_day' is assigned a value but never used.","'useEffect' is defined but never used.","'Loader' is defined but never used.","'confirmed' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.",["441"],["442"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["448"],["441"],["442"],"'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setMedicData'. Either include it or remove the dependency array.",["449"],["441"],["442"],"'setErrors' is assigned a value but never used.","'now_totalDate' is assigned a value but never used.","'totalDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},"Update the dependencies array to be: [sendEmailVerification]",{"range":"464","text":"465"},"Update the dependencies array to be: [loginWithToken]",{"range":"466","text":"467"},"Update the dependencies array to be: [location, maxPrice, maxDistance, reload]",{"range":"468","text":"469"},"Update the dependencies array to be: [spinner, token]",{"range":"470","text":"471"},"Update the dependencies array to be: [loadMore, location]",{"range":"472","text":"473"},"Update the dependencies array to be: [history, medicID]",{"range":"474","text":"475"},"Update the dependencies array to be: [areaOptions, setMedicData]",{"range":"476","text":"477"},[821,823],"[sendEmailVerification]",[2847,2849],"[loginWithToken]",[3278,3311],"[location, maxPrice, maxDistance, reload]",[1581,1600],"[spinner, token]",[2477,2487],"[loadMore, location]",[1609,1618],"[history, medicID]",[2819,2832],"[areaOptions, setMedicData]"]