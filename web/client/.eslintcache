[{"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Main\\index.tsx":"1","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Schedule\\index.tsx":"2","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\Router.tsx":"3","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterPacient\\index.tsx":"4","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\VerifyEmail\\index.tsx":"5","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentsClient\\index.tsx":"6","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ForgetPassword\\index.tsx":"7","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicProfile\\index.tsx":"8","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Spinner\\index.tsx":"9","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\CadastroSucesso\\index.tsx":"10","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareClientFormProvider.tsx":"11","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Review.tsx":"12","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileSettings\\index.tsx":"13","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorList\\index.tsx":"14","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateInfo.ts":"15","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Review\\index.tsx":"16","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentStatus\\index.tsx":"17","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorItem\\index.tsx":"18","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DaySchedule\\index.tsx":"19","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Main\\index.tsx":"20","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileRating\\index.tsx":"21","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx":"22","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\HeaderPlatform\\index.tsx":"23","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListAppointments\\index.tsx":"24","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\GreenButton\\index.tsx":"25","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\index.tsx":"26","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PublicRoute.tsx":"27","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\InfoProvider.tsx":"28","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginPatient\\index.tsx":"29","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterPaciente\\index.tsx":"30","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\services\\api.ts":"31","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileData\\index.tsx":"32","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\LoadMoreButton\\index.tsx":"33","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Payment\\index.tsx":"34","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\PaymentInfo\\index.tsx":"35","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\App.tsx":"36","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterSpitalAccount\\index.tsx":"37","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginSpitalAccount\\index.tsx":"38","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ConfirmEmail\\index.tsx":"39","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\SearchClient\\index.tsx":"40","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Names.tsx":"41","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\calcPercentage.js":"42","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\AuthProvider.tsx":"43","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterMedico\\index.tsx":"44","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx":"45","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PrivateRoute.tsx":"46","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentType\\index.tsx":"47","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Select\\index.tsx":"48","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\refreshUserValidate.ts":"49","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileInfo\\index.tsx":"50","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\HomeClient\\index.tsx":"51","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentUnique\\index.tsx":"52","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Location\\index.tsx":"53","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\AreYouSure\\index.tsx":"54","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\PaymentMethod\\index.tsx":"55","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareAppointmentFormProvider.tsx":"56","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Review.tsx":"57","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\HashPassword.js":"58","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Stars\\index.tsx":"59","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\Landing\\index.tsx":"60","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MyProfile\\index.tsx":"61","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicArea\\index.tsx":"62","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Credentials.tsx":"63","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Credentials.tsx":"64","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\mask.js":"65","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Schedule.tsx":"66","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Overlay\\index.tsx":"67","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\PersonalData.tsx":"68","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SearchInput\\index.tsx":"69","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileBox\\index.tsx":"70","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RecoverPassword\\index.tsx":"71","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Phone.tsx":"72","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SubHeaderPlatform\\index.tsx":"73"},{"size":2537,"mtime":1623591832571,"results":"74","hashOfConfig":"75"},{"size":4861,"mtime":1623591852996,"results":"76","hashOfConfig":"75"},{"size":3683,"mtime":1622996456882,"results":"77","hashOfConfig":"75"},{"size":2069,"mtime":1622996488908,"results":"78","hashOfConfig":"75"},{"size":1162,"mtime":1622820489817,"results":"79","hashOfConfig":"75"},{"size":536,"mtime":1622161349981,"results":"80","hashOfConfig":"75"},{"size":1947,"mtime":1621383938996,"results":"81","hashOfConfig":"75"},{"size":1669,"mtime":1622376740392,"results":"82","hashOfConfig":"75"},{"size":336,"mtime":1621110381583,"results":"83","hashOfConfig":"75"},{"size":706,"mtime":1622320400631,"results":"84","hashOfConfig":"75"},{"size":1056,"mtime":1623286185313,"results":"85","hashOfConfig":"75"},{"size":5617,"mtime":1623403838340,"results":"86","hashOfConfig":"75"},{"size":4179,"mtime":1622320407375,"results":"87","hashOfConfig":"75"},{"size":1300,"mtime":1622376740286,"results":"88","hashOfConfig":"75"},{"size":2554,"mtime":1623351811852,"results":"89","hashOfConfig":"75"},{"size":4947,"mtime":1622376740249,"results":"90","hashOfConfig":"75"},{"size":1306,"mtime":1621717088419,"results":"91","hashOfConfig":"75"},{"size":1479,"mtime":1622377077171,"results":"92","hashOfConfig":"75"},{"size":3909,"mtime":1622138770573,"results":"93","hashOfConfig":"75"},{"size":12000,"mtime":1623020712895,"results":"94","hashOfConfig":"75"},{"size":2887,"mtime":1623022557944,"results":"95","hashOfConfig":"75"},{"size":4021,"mtime":1623541488696,"results":"96","hashOfConfig":"75"},{"size":3943,"mtime":1622418179821,"results":"97","hashOfConfig":"75"},{"size":5527,"mtime":1622376740298,"results":"98","hashOfConfig":"75"},{"size":2893,"mtime":1622250321965,"results":"99","hashOfConfig":"75"},{"size":197,"mtime":1612257692987,"results":"100","hashOfConfig":"75"},{"size":409,"mtime":1622644701226,"results":"101","hashOfConfig":"75"},{"size":814,"mtime":1622382902434,"results":"102","hashOfConfig":"75"},{"size":2022,"mtime":1621717088474,"results":"103","hashOfConfig":"75"},{"size":1204,"mtime":1623621272304,"results":"104","hashOfConfig":"75"},{"size":124,"mtime":1615925572984,"results":"105","hashOfConfig":"75"},{"size":1403,"mtime":1623512220642,"results":"106","hashOfConfig":"75"},{"size":315,"mtime":1620501804232,"results":"107","hashOfConfig":"75"},{"size":1447,"mtime":1622121005123,"results":"108","hashOfConfig":"75"},{"size":1971,"mtime":1622115499409,"results":"109","hashOfConfig":"75"},{"size":385,"mtime":1620485131634,"results":"110","hashOfConfig":"75"},{"size":1669,"mtime":1623621488142,"results":"111","hashOfConfig":"75"},{"size":4258,"mtime":1623621384307,"results":"112","hashOfConfig":"75"},{"size":596,"mtime":1622320351029,"results":"113","hashOfConfig":"75"},{"size":804,"mtime":1621717088480,"results":"114","hashOfConfig":"75"},{"size":2037,"mtime":1621638344164,"results":"115","hashOfConfig":"75"},{"size":171,"mtime":1620257582863,"results":"116","hashOfConfig":"75"},{"size":3019,"mtime":1623544820588,"results":"117","hashOfConfig":"75"},{"size":1188,"mtime":1623621746550,"results":"118","hashOfConfig":"75"},{"size":2051,"mtime":1620514546136,"results":"119","hashOfConfig":"75"},{"size":372,"mtime":1620433335573,"results":"120","hashOfConfig":"75"},{"size":1362,"mtime":1621378511392,"results":"121","hashOfConfig":"75"},{"size":709,"mtime":1618011502175,"results":"122","hashOfConfig":"75"},{"size":1001,"mtime":1621638808930,"results":"123","hashOfConfig":"75"},{"size":3521,"mtime":1623591925698,"results":"124","hashOfConfig":"75"},{"size":2798,"mtime":1622928381508,"results":"125","hashOfConfig":"75"},{"size":946,"mtime":1622376740354,"results":"126","hashOfConfig":"75"},{"size":866,"mtime":1622418256516,"results":"127","hashOfConfig":"75"},{"size":1060,"mtime":1622376740311,"results":"128","hashOfConfig":"75"},{"size":1613,"mtime":1621808620281,"results":"129","hashOfConfig":"75"},{"size":1292,"mtime":1622376740342,"results":"130","hashOfConfig":"75"},{"size":6032,"mtime":1621717088436,"results":"131","hashOfConfig":"75"},{"size":169,"mtime":1615729035026,"results":"132","hashOfConfig":"75"},{"size":1694,"mtime":1623617258726,"results":"133","hashOfConfig":"75"},{"size":1304,"mtime":1621109455348,"results":"134","hashOfConfig":"75"},{"size":596,"mtime":1619481693785,"results":"135","hashOfConfig":"75"},{"size":4622,"mtime":1622458606782,"results":"136","hashOfConfig":"75"},{"size":3175,"mtime":1621385066360,"results":"137","hashOfConfig":"75"},{"size":3361,"mtime":1619828038487,"results":"138","hashOfConfig":"75"},{"size":187,"mtime":1618582087838,"results":"139","hashOfConfig":"75"},{"size":4690,"mtime":1622937347204,"results":"140","hashOfConfig":"75"},{"size":239,"mtime":1621110295186,"results":"141","hashOfConfig":"75"},{"size":2779,"mtime":1621628880706,"results":"142","hashOfConfig":"75"},{"size":774,"mtime":1622458622209,"results":"143","hashOfConfig":"75"},{"size":1222,"mtime":1623617612464,"results":"144","hashOfConfig":"75"},{"size":4007,"mtime":1622320339595,"results":"145","hashOfConfig":"75"},{"size":2095,"mtime":1623286185309,"results":"146","hashOfConfig":"75"},{"size":654,"mtime":1620517092480,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jczwlb",{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"175"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"158"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"175"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"162"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"162"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"158"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"162"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Main\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Schedule\\index.tsx",["313","314"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\Router.tsx",["315"],"import { BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\nimport Landing from \"../pages/Landing\";\r\nimport LoginAndRegisterMedico from \"../pages/LoginAndRegisterMedico\";\r\nimport LoginAndRegisterPaciente from \"../pages/LoginAndRegisterPaciente\";\r\nimport LoginPacient from \"../pages/LoginPatient\";\r\nimport ConfirmEmail from \"../pages/ConfirmEmail\";\r\nimport LoginSpitalAccount from \"../pages/LoginSpitalAccount\";\r\nimport RegisterPacient from \"../pages/RegisterPacient\";\r\nimport RegisterPatientSpitalAccount from \"../pages/RegisterSpitalAccount\";\r\nimport AppointmentsClient from \"../platform-pages/AppointmentsClient\";\r\nimport HomeClient from \"../platform-pages/HomeClient\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport MyProfile from \"../platform-pages/MyProfile\";\r\nimport SearchClient from \"../platform-pages/SearchClient\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport RegisterMedicSpital from \"../pages/RegisterMedicalSpitalAccount\";\r\nimport MedicArea from \"../platform-pages/MedicArea\";\r\nimport MedicProfile from \"../platform-pages/MedicProfile\";\r\nimport VerifyEmail from \"../pages/VerifyEmail\";\r\nimport ForgetPassword from \"../pages/ForgetPassword\";\r\nimport RecoverPassword from \"../pages/RecoverPassword\";\r\nimport AppointmentUnique from \"../platform-pages/AppointmentUnique\";\r\nimport MedicProfileRating from \"../components/MedicProfileRating\";\r\nimport ShareInfoDataProvider from \"../context/InfoProvider\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <PublicRoute path=\"/\" component={Landing} exact />\r\n        <PublicRoute\r\n          path=\"/entrar-registrar-paciente\"\r\n          component={LoginAndRegisterPaciente}\r\n        />\r\n        <PublicRoute\r\n          path=\"/entrar-registrar-medico\"\r\n          component={LoginAndRegisterMedico}\r\n        />\r\n        <PublicRoute path=\"/registrar-paciente\" component={RegisterPacient} />\r\n        <PublicRoute path=\"/entrar-paciente\" component={LoginPacient} />\r\n        <PublicRoute\r\n          path=\"/login-spital-paciente\"\r\n          component={LoginSpitalAccount}\r\n        />\r\n\r\n        <PublicRoute\r\n          path=\"/registrar-spital-paciente\"\r\n          component={RegisterPatientSpitalAccount}\r\n        />\r\n\r\n        <PublicRoute path=\"/confirmar-email\" component={ConfirmEmail} />\r\n        <PublicRoute path=\"/verificar/:token\" component={VerifyEmail} />\r\n        <PublicRoute path=\"/recuperar\" exact component={ForgetPassword} />\r\n        <PublicRoute path=\"/recuperar/:token\" component={RecoverPassword} />\r\n\r\n        <ShareInfoDataProvider>\r\n          <PrivateRoute path=\"/principal\" component={HomeClient} />\r\n          <PrivateRoute path=\"/busca\" exact component={SearchClient} />\r\n          <PrivateRoute path=\"/busca/:area\" exact component={MedicArea} />\r\n          <PrivateRoute\r\n            path=\"/consultas\"\r\n            exact\r\n            component={AppointmentsClient}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/consultas/:scheduleID\"\r\n            exact\r\n            component={AppointmentUnique}\r\n          />\r\n          <PrivateRoute path=\"/perfil\" exact component={MyProfile} />\r\n          <PrivateRoute\r\n            path=\"/medicos/:medicID\"\r\n            exact\r\n            component={MedicProfile}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/medicos/:medicID/avaliacoes\"\r\n            exact\r\n            component={MedicProfileRating}\r\n          />\r\n        </ShareInfoDataProvider>\r\n\r\n        <PublicRoute path=\"*\" component={NotFound} />\r\n        <PrivateRoute path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not found!</h1>;\r\n};\r\n\r\nexport default Router;\r\n",["316","317"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterPacient\\index.tsx",[],["318","319"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\VerifyEmail\\index.tsx",["320"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport verified from \"../../assets/images/verified.svg\";\r\nimport api from \"../../services/api\";\r\n\r\nimport \"./styles.css\";\r\n\r\ninterface VerifyEmailParams {\r\n  token: string;\r\n}\r\n\r\nexport default function VerifyEmail() {\r\n  const history = useHistory();\r\n  const { token } = useParams<VerifyEmailParams>();\r\n\r\n  async function sendEmailVerification() {\r\n    try {\r\n      let response = await api.get(`/users/${token}`);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(response.data.error);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        history.replace(\"/entrar-paciente\");\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.log(\"Ocorreu um erro\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    sendEmailVerification();\r\n  }, []);\r\n  return (\r\n    <div className=\"confirm-email\">\r\n      <div className=\"confirm-email-content\">\r\n        <h1>E-mail verificado!</h1>\r\n        <img src={verified} alt=\"E-mail\" />\r\n        <h2>\r\n          Espere 3 segundos e será redirecionado para a página de login...\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["321","322"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentsClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ForgetPassword\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Spinner\\index.tsx",[],["323","324"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\CadastroSucesso\\index.tsx",["325"],"import { IoClose } from \"react-icons/io5\";\r\nimport Overlay from \"../Overlay\";\r\nimport \"./styles.css\";\r\nimport { IoCheckmarkOutline } from \"react-icons/io5\";\r\n\r\nexport interface CadastroSucessoProps {\r\n  name: string;\r\n  description: string;\r\n  close?: () => void;\r\n}\r\nexport default function CadastroSucesso({\r\n  name,\r\n  close,\r\n  description,\r\n}: CadastroSucessoProps) {\r\n  return (\r\n    <Overlay>\r\n      <div className=\"modal-success\">\r\n        <div className=\"success-icon\">\r\n          <IoCheckmarkOutline color=\"#fff\" size=\"7rem\" />\r\n        </div>\r\n        <h1>{name}!</h1>\r\n\r\n        <p>{description}</p>\r\n\r\n        <button onClick={close}>Continuar</button>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n}\r\n",["326","327"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareClientFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Review.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileSettings\\index.tsx",["328","329","330"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { IoSettingsOutline, IoCardOutline } from \"react-icons/io5\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport refreshUserValidate from \"../../utils/refreshUserValidate\";\r\nimport mask from \"../../utils/mask\";\r\nimport api from \"../../services/api\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { PaymentMethodProps } from \"../Modals/PaymentMethod\";\r\n\r\nconst MyProfileSettings = () => {\r\n  const { spinner, sucesso } = useModal();\r\n  const { user, userID } = useAuth();\r\n  const [refreshUser, setRefreshUser] = useState({\r\n    fullName: `${user.firstName} ${user.lastName}`,\r\n    email: `${user.email}`,\r\n    phoneNumber: `${user.phoneNumber}`,\r\n  });\r\n\r\n  const [errors, setErrors] = useState(refreshUserValidate(refreshUser));\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  function validate() {\r\n    setErrors(refreshUserValidate(refreshUser));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setErrors(refreshUserValidate(refreshUser));\r\n  }, [refreshUser]);\r\n\r\n  async function handleSubmitRefreshUser() {\r\n    const loopedErrors = Object.values(errors);\r\n    if (loopedErrors.length > 0) {\r\n      setFormError(\"O formulário possui erros\");\r\n    } else {\r\n      setFormError(\"\");\r\n      spinner.open();\r\n      await api\r\n        .put(`clients/${userID}`, {\r\n          fullName: refreshUser.fullName,\r\n          phoneNumber: refreshUser.phoneNumber,\r\n        })\r\n        .then(() => {\r\n          spinner.close();\r\n          sucesso.open({\r\n            name: `Parabéns ${refreshUser.fullName}`,\r\n            description: \"Dados atualizados com sucesso!\",\r\n            close: () => sucesso.close(),\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-profile-settings\">\r\n      <div className=\"my-profile-settings-nav\">\r\n        <button>\r\n          <IoSettingsOutline size={40} color=\"#07B3D6\" />\r\n          <span>Configurações da minha conta</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"my-profile-settings-info\">\r\n        <h2>Informações da conta</h2>\r\n        <TextField\r\n          value={refreshUser.fullName}\r\n          name=\"fullname\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={(e) => {\r\n            setRefreshUser({ ...refreshUser, fullName: e.target.value });\r\n            validate();\r\n          }}\r\n          error={errors.fullName ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.fullName}</span>\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          value={refreshUser.email}\r\n          name=\"email\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          error={errors.email ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.email}</span>\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          value={refreshUser.phoneNumber}\r\n          name=\"phoneNumber\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Telefone</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={(e) => {\r\n            setRefreshUser({\r\n              ...refreshUser,\r\n              phoneNumber: mask(e.target.value, \"(##) # ####-####\"),\r\n            });\r\n            validate();\r\n          }}\r\n          error={errors.phoneNumber ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.phoneNumber}</span>\r\n          }\r\n        />\r\n\r\n        <button onClick={handleSubmitRefreshUser} type=\"button\">\r\n          Atualizar dados\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfileSettings;\r\n",["331","332"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorList\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Review\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentStatus\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorItem\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DaySchedule\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Main\\index.tsx",["333"],"import { useEffect, useState } from \"react\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport \"./styles.css\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport api from \"../../../services/api\";\r\nimport { AppointmentProps } from \"../../../components/ListAppointments\";\r\nimport check from \"../../../assets/images/icons/check.png\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport wallet from \"../../../assets/images/wallet.svg\";\r\nimport { useModal } from \"../../../context/ModalProvider\";\r\nimport { IoStar } from \"react-icons/io5\";\r\nimport done from \"../../../assets/images/icons/done.png\";\r\n\r\nexport interface AppointmentParams {\r\n  scheduleID: string;\r\n}\r\n\r\nconst AppointmentUniqueMain = ({ previousPage, nextPage }: any) => {\r\n  const { areYouSure } = useModal();\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { scheduleID } = useParams<AppointmentParams>();\r\n  const [appointments, setAppointments] = useState<AppointmentProps[]>([]);\r\n  const [success, setSuccess] = useState(false);\r\n  const rating = [1, 2, 3, 4, 5];\r\n\r\n  function calculateMonth(month: any) {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  const today = new Date();\r\n  const todayString = today.toString();\r\n  const [today_week_day, today_month, today_month_day, today_year, today_time] =\r\n    todayString.split(\" \");\r\n  let [now_hour, now_minute] = today_time.split(\":\");\r\n\r\n  if (now_minute?.length === 1) {\r\n    now_minute = now_minute + \"0\";\r\n  }\r\n\r\n  const stringNowMinuteHour = now_hour.concat(now_minute);\r\n\r\n  const todayNumberMonth = calculateMonth(today_month);\r\n\r\n  const now_totalDate =\r\n    Number(today_month_day) * 10000 +\r\n    todayNumberMonth * 100000 * (Number(today_year) * 1000000) +\r\n    Number(stringNowMinuteHour);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`appointments?scheduleID=${scheduleID}`).then((response: any) => {\r\n      setAppointments(response.data);\r\n      setLoading(false);\r\n    });\r\n  }, [scheduleID, setAppointments]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"var(--color-button-primary)\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <div className=\"success-payment\">\r\n          <h1>Reembolso concluído!</h1>\r\n          <img src={wallet} alt=\"Carteira\" />\r\n          <p>\r\n            A consulta foi cancelada e o dinheiro retornou para sua carteira...\r\n          </p>\r\n          <button\r\n            onClick={() => {\r\n              history.replace(\"/consultas\");\r\n            }}\r\n            className=\"return-button\"\r\n          >\r\n            Voltar para a plataforma\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"client-platform\">\r\n          <SubHeaderPlatform\r\n            title=\"Consultas agendadas\"\r\n            returnFunction={() => {\r\n              previousPage();\r\n            }}\r\n          />\r\n          <div className=\"container\">\r\n            {appointments.map(\r\n              (appointment: AppointmentProps, index: number) => {\r\n                async function refund() {\r\n                  setLoading(true);\r\n                  api\r\n                    .delete(`appointments/${appointment.payment_intent}`)\r\n                    .then((response: any) => {\r\n                      if (response.data.success) {\r\n                        setSuccess(true);\r\n                        setLoading(false);\r\n                      }\r\n                    });\r\n                }\r\n\r\n                const [date, time] = appointment.created_at.split(\"T\");\r\n                const [hours, minutes] = time.split(\".\")[0].split(\":\");\r\n                const [year, month, day] = date.split(\"-\");\r\n\r\n                const [reais, centavos] = appointment.price.split(\",\");\r\n\r\n                const [dateHour, dateMinute] = appointment.time.split(\":\");\r\n\r\n                const stringHourMinte = dateHour.concat(dateMinute);\r\n\r\n                const [monthDate, dayDate, yearDate] =\r\n                  appointment.date.split(\"/\");\r\n                const totalDate =\r\n                  Number(dayDate) * 10000 +\r\n                  Number(monthDate) * 100000 * (Number(year) * 1000000) +\r\n                  Number(stringHourMinte);\r\n\r\n                return (\r\n                  <div key={index} className=\"appointment-unique\">\r\n                    <div className=\"appointment-unique-flex\">\r\n                      <div className=\"medic-info\">\r\n                        <img\r\n                          src={`https://avatars.dicebear.com/api/human/${\r\n                            appointment.first_name + appointment.last_name\r\n                          }.svg`}\r\n                          alt=\"Avatar\"\r\n                        />\r\n                        <div className=\"medic-info-name\">\r\n                          <h1>Dr(a). {appointment.first_name}</h1>\r\n                          <p>{appointment.area}</p>\r\n                        </div>\r\n                      </div>\r\n                      <Link\r\n                        className=\"see-profile\"\r\n                        to={`/medicos/${appointment.medicID}`}\r\n                      >\r\n                        Ver perfil\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"appointment-unique-date\">\r\n                      <p>\r\n                        Consulta às {appointment.time} - {dayDate}/{monthDate}/\r\n                        {yearDate}\r\n                      </p>\r\n                      <div className=\"appointment-unique-date-created_at\">\r\n                        <img src={check} alt=\"Check\" /> Paga às {hours}:\r\n                        {minutes} - {day}/{month}/{year}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{ marginTop: 0 }}\r\n                      className=\"appointment-unique-date\"\r\n                    >\r\n                      <p\r\n                        style={{\r\n                          color: \"#333\",\r\n                          fontSize: \"1.8rem\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        Número da consulta: {appointment.scheduleID}\r\n                      </p>\r\n                      <div className=\"gray-line\"></div>\r\n                      <div className=\"appointment-unique-date-flex\">\r\n                        <div className=\"appointment-unique-date-flex-column\">\r\n                          <div className=\"appointment-unique-date-flex-quantity\">\r\n                            1\r\n                          </div>\r\n                          <p>Consuta {appointment.area.toLowerCase()}</p>\r\n                        </div>\r\n                        <p className=\"appointment-unique-date-flex-price\">\r\n                          R$ {reais},{!centavos ? \"00\" : { centavos }}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"gray-line\"></div>\r\n                      <div className=\"appointment-unique-date-flex\">\r\n                        <p>Pago pelo app</p>\r\n                        <p style={{ color: \"#07B3D6\" }}>Cartão</p>\r\n                      </div>\r\n                      <div className=\"gray-line\"></div>\r\n                      <div className=\"appointment-unique-location\">\r\n                        <p style={{ color: \"#818183\" }}>Endereço de entrega:</p>\r\n                        <p\r\n                          style={{\r\n                            color: \"#333333\",\r\n                            fontSize: \"1.5rem\",\r\n                            marginTop: 0,\r\n                          }}\r\n                        >\r\n                          Rua Capitão Waldemar De Figueiredo, 650 Casa 51 -\r\n                          Royal Park - Ribeirão Preto - SP\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"gray-line\"></div>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          width: \"100%\",\r\n                          marginTop: \"2rem\",\r\n                        }}\r\n                      >\r\n                        {now_totalDate > totalDate ? (\r\n                          <p\r\n                            onClick={() => {\r\n                              areYouSure.open({\r\n                                close: () => {\r\n                                  areYouSure.close();\r\n                                },\r\n                                message:\r\n                                  \"Você tem certeza que deseja cancelar sua consulta?\",\r\n                                buttonMessage: \"Confirmar\",\r\n                                sureFunction: () =>\r\n                                  refund().then(() => {\r\n                                    areYouSure.close();\r\n                                  }),\r\n                              });\r\n                            }}\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              fontSize: \"2rem\",\r\n                              color: \"#16697A\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            Cancelar consulta 😪\r\n                          </p>\r\n                        ) : (\r\n                          <>\r\n                            {appointment.rated ? (\r\n                              <div className=\"rated-appointment\">\r\n                                <img src={done} alt=\"Avaliação já enviada!\" />\r\n                                <h1\r\n                                  style={{\r\n                                    textAlign: \"center\",\r\n                                    color: \"#3EB713\",\r\n                                    fontWeight: \"bold\",\r\n                                  }}\r\n                                >\r\n                                  Avaliação já realizada!\r\n                                </h1>\r\n                              </div>\r\n                            ) : (\r\n                              <div onClick={nextPage} className=\"review-unique\">\r\n                                <h1>Como foi sua consulta?</h1>\r\n                                <div className=\"review-unique-stars\">\r\n                                  {rating.map((index) => {\r\n                                    return (\r\n                                      <IoStar\r\n                                        key={index}\r\n                                        color=\"#CCCCCC\"\r\n                                        size=\"4rem\"\r\n                                      />\r\n                                    );\r\n                                  })}\r\n                                </div>\r\n                                <p>\r\n                                  Escolha de 1 a 5 estrelas para avaliar a\r\n                                  consulta.\r\n                                </p>\r\n                              </div>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentUniqueMain;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileRating\\index.tsx",["334"],"import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport SubHeaderPlatform from \"../SubHeaderPlatform\";\r\nimport \"./styles.css\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ParamTypes } from \"../MedicProfilePages/Main\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\ninterface ReviewProps {\r\n  id: number;\r\n  first_name: string;\r\n  last_name: string;\r\n  stars: number;\r\n  description: string;\r\n}\r\n\r\nconst MedicProfileRating = () => {\r\n  const { medicID } = useParams<ParamTypes>();\r\n  const [reviews, setReviews] = useState<ReviewProps[]>([]);\r\n  const [medicName, setMedicName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`medics?id=${medicID}`).then((response: any) => {\r\n      setMedicName(response.data.first_name);\r\n      api.get(`reviews?medicID=${response.data.id}`).then((res: any) => {\r\n        setReviews(res.data);\r\n        setLoading(false);\r\n      });\r\n    });\r\n  }, [setReviews, medicID]);\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Avaliações do(a) Dr(a) ${medicName}`}\r\n        returnFunction={() => history.goBack()}\r\n      />\r\n      <div\r\n        style={{ alignItems: \"flex-start\", marginTop: \"2rem\" }}\r\n        className=\"container\"\r\n      >\r\n        <h1\r\n          style={{ fontSize: \"3rem\", fontWeight: \"bold\", marginLeft: \"1rem\" }}\r\n        >\r\n          Avaliações:\r\n        </h1>\r\n        {loading ? (\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <div className=\"review-medic-profile\">\r\n            {reviews.map((review: ReviewProps, index: number) => {\r\n              return (\r\n                <div key={index} className=\"review-medic-profile-wrap\">\r\n                  <div className=\"review-medic-profile-wrap-flex\">\r\n                    <img\r\n                      src={`https://avatars.dicebear.com/api/human/${\r\n                        review.first_name + review.last_name\r\n                      }.svg`}\r\n                    />\r\n                    <h1>\r\n                      {review.first_name} {review.last_name}\r\n                    </h1>\r\n\r\n                    <span>{review.stars}.0</span>\r\n                    <FaStar\r\n                      color=\"#FFC107\"\r\n                      style={{ marginTop: \"1.1rem\", marginLeft: \"1.5rem\" }}\r\n                      size=\"3rem\"\r\n                    />\r\n                  </div>\r\n                  <p>{review.description}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicProfileRating;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx",[],["335","336"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\HeaderPlatform\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListAppointments\\index.tsx",["337","338"],"import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport api from \"../../services/api\";\r\nimport \"./styles.css\";\r\n\r\nexport interface AppointmentProps {\r\n  area: string;\r\n  birth_date: string;\r\n  card_id: string;\r\n  clientID: number;\r\n  cpf: string;\r\n  created_at: string;\r\n  crm: \"233133/SP\";\r\n  date: \"5/28/2021\";\r\n  doctorate_degree: string;\r\n  graduation: string;\r\n  id: number;\r\n  master_degree: string;\r\n  medicID: number;\r\n  phoneNumber: string;\r\n  price: string;\r\n  rg: string;\r\n  scheduleID: number;\r\n  time: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  payment_intent: string;\r\n  confirmed: boolean;\r\n  rated: boolean;\r\n}\r\n\r\nconst ListAppointments = () => {\r\n  const { userID } = useAuth();\r\n  const [clientID, setClientID] = useState(\"\");\r\n  const [appointments, setAppointments] = useState<AppointmentProps[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`clients?id=${userID}`).then((response: any) => {\r\n      setClientID(response.data.id);\r\n      setLoading(false);\r\n    });\r\n  }, [userID]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api\r\n      .get(`appointments/${clientID}`)\r\n      .then((response: any) => {\r\n        setAppointments(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [clientID, setAppointments]);\r\n\r\n  function calculateMonth(month: any) {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  if (appointments.length === 0) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          padding: \"1rem\",\r\n        }}\r\n      >\r\n        <h1 style={{ fontSize: \"4rem\", fontWeight: \"bold\" }}>\r\n          Sem consultas agendadas\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-appointments\">\r\n      {loading ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {appointments.map((appointment: AppointmentProps, index: number) => {\r\n            const [month, day, year] = appointment.date.split(\"/\");\r\n            const dateResult = Number(month) * Number(year) + Number(day);\r\n\r\n            const today = new Date();\r\n            const todayString = today.toString();\r\n            const [today_week_day, today_month, today_month_day, today_year] =\r\n              todayString.split(\" \");\r\n            const todayNumberMonth = calculateMonth(today_month);\r\n            const today_totalDate =\r\n              Number(today_month_day) + todayNumberMonth * Number(today_year);\r\n\r\n            return (\r\n              <Link\r\n                key={index}\r\n                to={`/consultas/${appointment.scheduleID}`}\r\n                className=\"list-appointments-unique\"\r\n              >\r\n                <div className=\"list-appoints-unique-information\">\r\n                  <div className=\"list-appoints-unique-information-flex\">\r\n                    <img\r\n                      src={`https://avatars.dicebear.com/api/human/${\r\n                        appointment.first_name + appointment.last_name\r\n                      }.svg`}\r\n                      alt=\"Avatar\"\r\n                      className=\"list-appoints-unique-information-image\"\r\n                    />\r\n                    <div className=\"list-appoints-unique-information-text\">\r\n                      <h2>Consulta Dr(a) {appointment.first_name}</h2>\r\n                      <span>{appointment.area}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list-appoints-unique-status\">\r\n                    {dateResult < today_totalDate ? (\r\n                      <div className=\"list-appoints-unique-status-value\">\r\n                        Concluída\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"list-appoints-unique-status-value\">\r\n                        Ativa\r\n                      </div>\r\n                    )}\r\n                    <p className=\"list-appoints-unique-status-text\">\r\n                      Dia {`${day}/${month}/${year}`}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <footer>\r\n                  <p style={{ marginRight: \"2rem\" }}>{appointment.time}</p>\r\n                </footer>\r\n              </Link>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListAppointments;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\GreenButton\\index.tsx",["339"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PublicRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\InfoProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginPatient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterPaciente\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\services\\api.ts",[],["340","341"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileData\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\LoadMoreButton\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Payment\\index.tsx",["342","343"],"import \"./styles.css\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport PaymentInfo from \"../../../components/PaymentInfo\";\r\nimport { NamesProps } from \"../../Form/Steps/Names\";\r\nimport { useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { PaymentMethodProps } from \"../../Modals/PaymentMethod\";\r\n\r\nconst PaymentMedicProfile = ({ previousPage, nextPage }: NamesProps) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [cardInfo, setCardInfo] = useState<PaymentMethodProps>({\r\n    id: \"\",\r\n    first_digits: \"\",\r\n    last_digits: \"\",\r\n    holder_name: \"\",\r\n    expiration_date: \"\",\r\n    card_cvv: \"\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title=\"Dados da consulta\"\r\n        returnFunction={() => previousPage()}\r\n      />\r\n      <div className=\"container\">\r\n        <PaymentInfo card={cardInfo} setCard={setCardInfo} error={error} />\r\n        {loading ? (\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <>\r\n            <button onClick={nextPage} className=\"green-button\">\r\n              Ir para o pagamento\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentMedicProfile;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\PaymentInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\App.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginSpitalAccount\\index.tsx",["344","345","346","347","348"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ConfirmEmail\\index.tsx",["349"],"import \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport email from \"../../assets/images/email.svg\";\r\n\r\nconst ConfirmEmail = () => {\r\n  return (\r\n    <div className=\"confirm-email\">\r\n      <div className=\"confirm-email-content\">\r\n        <h1>Cadastro realizado com sucesso!</h1>\r\n        <img src={email} alt=\"E-mail\" />\r\n        <h2>\r\n          Precisamos agora que você confirme seu e-mail para realizar-mos o\r\n          login.\r\n        </h2>\r\n        <p>Leia vosso e-mail e clique em confirmar e-mail</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmEmail;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\SearchClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Names.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\calcPercentage.js",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\AuthProvider.tsx",["350"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterMedico\\index.tsx",["351"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PrivateRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentType\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Select\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\refreshUserValidate.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\HomeClient\\index.tsx",["352"],"import { useState, useEffect } from \"react\";\r\nimport Categories from \"../../components/Categories\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport HeaderPlatform from \"../../components/HeaderPlatform\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport api from \"../../services/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport \"./styles.css\";\r\nimport { useInfoData } from \"../../context/InfoProvider\";\r\n\r\nconst HomeClient = () => {\r\n  const { setInfoData, infoData } = useInfoData();\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  let [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n\r\n  async function loadMore() {\r\n    setLoading(true);\r\n    let { data } = await api.get(\r\n      `medics?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    Geocode.fromLatLng(\r\n      `${location?.coords.latitude}`,\r\n      `${location?.coords.longitude}`\r\n    ).then((response: any) => {\r\n      try {\r\n        const address = response.results;\r\n        setInfoData({ ...infoData, location: address[0].formatted_address });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        console.log(\"Você precisa ativar sua localização\");\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n      };\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!location) {\r\n      // Nada\r\n    } else {\r\n      loadMore();\r\n    }\r\n  }, [location]);\r\n\r\n  Geocode.setApiKey(\"AIzaSyDanmMSOYTtyp-Lbu43BVKiSW5EP8FRS9Y\");\r\n  Geocode.setLanguage(\"pt\");\r\n  Geocode.setRegion(\"br\");\r\n  Geocode.enableDebug();\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <HeaderPlatform />\r\n      <div className=\"container\">\r\n        <Categories />\r\n        <DoctorList loading={loading} medics={medics} />\r\n        <LoadMoreButton onClick={loadMore} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeClient;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentUnique\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Location\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\AreYouSure\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\PaymentMethod\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareAppointmentFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Review.tsx",["353"],"import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport api from \"../../../services/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport getPasswordAsterisk from \"../../../utils/HashPassword\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicReviewProps {\r\n  changePage: (index: number) => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicReview = ({ changePage, previousPage }: MedicReviewProps) => {\r\n  const [backendError, setBackEndError] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { medicData } = useShareFormMedic();\r\n\r\n  const history = useHistory();\r\n\r\n  async function handleSubmitClient() {\r\n    setIsLoading(true);\r\n\r\n    await api\r\n      .post(\"medics\", {\r\n        ...medicData,\r\n      })\r\n      .catch((err) => {\r\n        setBackEndError(err.response.data.error);\r\n      });\r\n\r\n    if (backendError !== null) {\r\n      setIsLoading(false);\r\n    } else {\r\n      console.log(\"Cadastro realizado com sucesso!\");\r\n    }\r\n  }\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const hashedPassword = getPasswordAsterisk(medicData?.password ?? \"\");\r\n\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  const formatedBirthDate = medicData?.birthDate?.replace(/[-]/g, \"/\");\r\n\r\n  async function handleSubmitForm(e: any) {\r\n    e.preventDefault();\r\n    const loopedErrors = Object.values(errors);\r\n    console.log(loopedErrors);\r\n    if (loopedErrors.length > 0) {\r\n      setHasError(true);\r\n    } else {\r\n      handleSubmitClient();\r\n      alert(\"Cadastro realizado com sucesso!\");\r\n      setHasError(false);\r\n      history.push(\"/verificar-email\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Revise seus dados</h2>\r\n      <div className=\"line\"></div>\r\n      <RenderAccordion\r\n        summary=\"Nome e telefone\"\r\n        medicInfo={[\r\n          { type: \"Nome\", info: medicData?.firstName },\r\n          { type: \"Sobrenome\", info: medicData?.lastName },\r\n          { type: \"Telefone\", info: medicData?.phoneNumber },\r\n        ]}\r\n        index={0}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Credenciais\"\r\n        medicInfo={[\r\n          { type: \"E-mail\", info: medicData?.email },\r\n          { type: \"Senha\", info: hashedPassword },\r\n        ]}\r\n        index={1}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados acadêmicos\"\r\n        medicInfo={[\r\n          { type: \"Área médica\", info: medicData?.area },\r\n          { type: \"Graduação\", info: medicData?.graduation },\r\n          { type: \"Mestrado\", info: medicData?.masterDegree },\r\n          { type: \"Doutorado\", info: medicData?.doctorateDegree },\r\n        ]}\r\n        index={2}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados pessoais\"\r\n        medicInfo={[\r\n          { type: \"CPF\", info: medicData?.cpf },\r\n          { type: \"RG\", info: medicData?.rg },\r\n          { type: \"Data de nascimento\", info: formatedBirthDate },\r\n        ]}\r\n        index={3}\r\n        changePage={changePage}\r\n      />\r\n\r\n      <p>\r\n        {hasError ? (\r\n          <span\r\n            style={{\r\n              color: \"red\",\r\n              position: \"relative\",\r\n              top: \"1rem\",\r\n              left: \"1rem\",\r\n            }}\r\n          >\r\n            O formulário possui erros...\r\n          </span>\r\n        ) : (\r\n          <span></span>\r\n        )}\r\n      </p>\r\n\r\n      <p\r\n        style={{\r\n          color: \"red\",\r\n          position: \"relative\",\r\n          top: \"1rem\",\r\n          left: \"1rem\",\r\n        }}\r\n      >\r\n        {backendError}\r\n      </p>\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button onClick={handleSubmitForm} className=\"primary\">\r\n        {isLoading ? (\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n          />\r\n        ) : (\r\n          <p>Cadastrar</p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface RenderAccorditionProps {\r\n  summary: string;\r\n  medicInfo: Array<{\r\n    type: string;\r\n    info: string;\r\n  }>;\r\n  index: number;\r\n  changePage: (index: number) => void;\r\n}\r\n\r\nexport const RenderAccordion: React.FC<RenderAccorditionProps> = ({\r\n  summary,\r\n  medicInfo,\r\n  index,\r\n  changePage,\r\n}) => {\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        {summary}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <div>\r\n          <ListItemText>\r\n            {medicInfo.map((data, index) => {\r\n              return (\r\n                <span\r\n                  style={{ display: \"block\", fontWeight: \"normal\" }}\r\n                  key={index}\r\n                  className=\"dados\"\r\n                >\r\n                  <span style={{ fontWeight: \"bold\", marginRight: \"1rem\" }}>\r\n                    {data.type}:\r\n                  </span>\r\n                  {data.info}\r\n                </span>\r\n              );\r\n            })}\r\n          </ListItemText>\r\n          <button onClick={(e) => changePage(index)}>\r\n            <IconButton component=\"span\" color=\"primary\">\r\n              <EditIcon className=\"editar-icone\" />\r\n            </IconButton>\r\n          </button>\r\n        </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default MedicReview;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\HashPassword.js",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Stars\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\Landing\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MyProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicArea\\index.tsx",["354"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\mask.js",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Schedule.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Overlay\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\PersonalData.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SearchInput\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileBox\\index.tsx",["355"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RecoverPassword\\index.tsx",["356"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Phone.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SubHeaderPlatform\\index.tsx",[],{"ruleId":"357","severity":1,"message":"358","line":68,"column":10,"nodeType":"359","messageId":"360","endLine":68,"endColumn":18},{"ruleId":"357","severity":1,"message":"361","line":74,"column":10,"nodeType":"359","messageId":"360","endLine":74,"endColumn":24},{"ruleId":"357","severity":1,"message":"362","line":17,"column":8,"nodeType":"359","messageId":"360","endLine":17,"endColumn":27},{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"363","replacedBy":"367"},{"ruleId":"365","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":33,"column":6,"nodeType":"371","endLine":33,"endColumn":8,"suggestions":"372"},{"ruleId":"363","replacedBy":"373"},{"ruleId":"365","replacedBy":"374"},{"ruleId":"363","replacedBy":"375"},{"ruleId":"365","replacedBy":"376"},{"ruleId":"357","severity":1,"message":"377","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":17},{"ruleId":"363","replacedBy":"378"},{"ruleId":"365","replacedBy":"379"},{"ruleId":"357","severity":1,"message":"380","line":3,"column":29,"nodeType":"359","messageId":"360","endLine":3,"endColumn":42},{"ruleId":"357","severity":1,"message":"381","line":10,"column":10,"nodeType":"359","messageId":"360","endLine":10,"endColumn":28},{"ruleId":"357","severity":1,"message":"382","line":22,"column":10,"nodeType":"359","messageId":"360","endLine":22,"endColumn":19},{"ruleId":"363","replacedBy":"383"},{"ruleId":"365","replacedBy":"384"},{"ruleId":"357","severity":1,"message":"361","line":61,"column":10,"nodeType":"359","messageId":"360","endLine":61,"endColumn":24},{"ruleId":"385","severity":1,"message":"386","line":64,"column":21,"nodeType":"387","endLine":68,"endColumn":23},{"ruleId":"363","replacedBy":"373"},{"ruleId":"365","replacedBy":"374"},{"ruleId":"357","severity":1,"message":"388","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":26},{"ruleId":"357","severity":1,"message":"361","line":139,"column":20,"nodeType":"359","messageId":"360","endLine":139,"endColumn":34},{"ruleId":"357","severity":1,"message":"361","line":62,"column":10,"nodeType":"359","messageId":"360","endLine":62,"endColumn":24},{"ruleId":"363","replacedBy":"389"},{"ruleId":"365","replacedBy":"390"},{"ruleId":"357","severity":1,"message":"391","line":10,"column":19,"nodeType":"359","messageId":"360","endLine":10,"endColumn":29},{"ruleId":"357","severity":1,"message":"392","line":11,"column":17,"nodeType":"359","messageId":"360","endLine":11,"endColumn":25},{"ruleId":"357","severity":1,"message":"393","line":1,"column":30,"nodeType":"359","messageId":"360","endLine":1,"endColumn":39},{"ruleId":"357","severity":1,"message":"394","line":9,"column":8,"nodeType":"359","messageId":"360","endLine":9,"endColumn":14},{"ruleId":"357","severity":1,"message":"395","line":15,"column":18,"nodeType":"359","messageId":"360","endLine":15,"endColumn":27},{"ruleId":"357","severity":1,"message":"396","line":33,"column":10,"nodeType":"359","messageId":"360","endLine":33,"endColumn":19},{"ruleId":"357","severity":1,"message":"397","line":33,"column":21,"nodeType":"359","messageId":"360","endLine":33,"endColumn":33},{"ruleId":"357","severity":1,"message":"398","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"399","line":113,"column":6,"nodeType":"371","endLine":113,"endColumn":8,"suggestions":"400"},{"ruleId":"357","severity":1,"message":"398","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":14},{"ruleId":"369","severity":1,"message":"401","line":76,"column":6,"nodeType":"371","endLine":76,"endColumn":16,"suggestions":"402"},{"ruleId":"357","severity":1,"message":"403","line":54,"column":18,"nodeType":"359","messageId":"360","endLine":54,"endColumn":27},{"ruleId":"369","severity":1,"message":"404","line":102,"column":6,"nodeType":"371","endLine":102,"endColumn":39,"suggestions":"405"},{"ruleId":"357","severity":1,"message":"406","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":16},{"ruleId":"369","severity":1,"message":"407","line":55,"column":6,"nodeType":"371","endLine":55,"endColumn":25,"suggestions":"408"},"@typescript-eslint/no-unused-vars","'week_day' is assigned a value but never used.","Identifier","unusedVar","'today_week_day' is assigned a value but never used.","'RegisterMedicSpital' is defined but never used.","no-native-reassign",["409"],"no-negated-in-lhs",["410"],["409"],["410"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendEmailVerification'. Either include it or remove the dependency array.","ArrayExpression",["411"],["409"],["410"],["409"],["410"],"'IoClose' is defined but never used.",["409"],["410"],"'IoCardOutline' is defined but never used.","'PaymentMethodProps' is defined but never used.","'formError' is assigned a value but never used.",["409"],["410"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CircularProgress' is defined but never used.",["409"],["410"],"'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'useEffect' is defined but never used.","'Loader' is defined but never used.","'confirmed' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'loginWithToken'. Either include it or remove the dependency array.",["412"],"React Hook useEffect has a missing dependency: 'loadMore'. Either include it or remove the dependency array.",["413"],"'setErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["414"],"'IoStar' is defined but never used.","React Hook useCallback has a missing dependency: 'spinner'. Either include it or remove the dependency array.",["415"],"no-global-assign","no-unsafe-negation",{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},"Update the dependencies array to be: [sendEmailVerification]",{"range":"426","text":"427"},"Update the dependencies array to be: [loginWithToken]",{"range":"428","text":"429"},"Update the dependencies array to be: [loadMore, location]",{"range":"430","text":"431"},"Update the dependencies array to be: [location, maxPrice, maxDistance, reload]",{"range":"432","text":"433"},"Update the dependencies array to be: [spinner, token]",{"range":"434","text":"435"},[836,838],"[sendEmailVerification]",[2661,2663],"[loginWithToken]",[2321,2331],"[loadMore, location]",[3318,3351],"[location, maxPrice, maxDistance, reload]",[1581,1600],"[spinner, token]"]