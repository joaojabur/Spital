[{"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Main\\index.tsx":"1","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Schedule\\index.tsx":"2","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\Router.tsx":"3","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterPacient\\index.tsx":"4","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\VerifyEmail\\index.tsx":"5","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentsClient\\index.tsx":"6","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ForgetPassword\\index.tsx":"7","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicProfile\\index.tsx":"8","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Spinner\\index.tsx":"9","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\CadastroSucesso\\index.tsx":"10","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareClientFormProvider.tsx":"11","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Review.tsx":"12","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileSettings\\index.tsx":"13","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorList\\index.tsx":"14","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateInfo.ts":"15","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Review\\index.tsx":"16","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentStatus\\index.tsx":"17","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorItem\\index.tsx":"18","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DaySchedule\\index.tsx":"19","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Main\\index.tsx":"20","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileRating\\index.tsx":"21","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx":"22","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\HeaderPlatform\\index.tsx":"23","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListAppointments\\index.tsx":"24","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\GreenButton\\index.tsx":"25","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\index.tsx":"26","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PublicRoute.tsx":"27","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\InfoProvider.tsx":"28","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginPatient\\index.tsx":"29","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterPaciente\\index.tsx":"30","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\services\\api.ts":"31","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileData\\index.tsx":"32","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\LoadMoreButton\\index.tsx":"33","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Payment\\index.tsx":"34","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\PaymentInfo\\index.tsx":"35","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\App.tsx":"36","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterSpitalAccount\\index.tsx":"37","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginSpitalAccount\\index.tsx":"38","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ConfirmEmail\\index.tsx":"39","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\SearchClient\\index.tsx":"40","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Names.tsx":"41","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\calcPercentage.js":"42","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\AuthProvider.tsx":"43","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterMedico\\index.tsx":"44","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx":"45","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PrivateRoute.tsx":"46","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentType\\index.tsx":"47","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Select\\index.tsx":"48","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\refreshUserValidate.ts":"49","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileInfo\\index.tsx":"50","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\HomeClient\\index.tsx":"51","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentUnique\\index.tsx":"52","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Location\\index.tsx":"53","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\AreYouSure\\index.tsx":"54","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\PaymentMethod\\index.tsx":"55","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareAppointmentFormProvider.tsx":"56","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Review.tsx":"57","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\HashPassword.js":"58","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Stars\\index.tsx":"59","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\Landing\\index.tsx":"60","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MyProfile\\index.tsx":"61","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicArea\\index.tsx":"62","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Credentials.tsx":"63","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Credentials.tsx":"64","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\mask.js":"65","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Schedule.tsx":"66","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Overlay\\index.tsx":"67","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\PersonalData.tsx":"68","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SearchInput\\index.tsx":"69","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileBox\\index.tsx":"70","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RecoverPassword\\index.tsx":"71","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Phone.tsx":"72","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SubHeaderPlatform\\index.tsx":"73","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateNewPassword.ts":"74","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareMedicFormProvider.tsx":"75","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Header\\index.tsx":"76","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListMedicAreas\\index.tsx":"77","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Filtro\\index.tsx":"78","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileInfo\\index.tsx":"79","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\AcademicData.tsx":"80","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateMedicInfo.ts":"81","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Names.tsx":"82","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\404\\index.tsx":"83","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Categories\\index.tsx":"84"},{"size":2708,"mtime":1624053545831,"results":"85","hashOfConfig":"86"},{"size":4912,"mtime":1623851246169,"results":"87","hashOfConfig":"86"},{"size":3974,"mtime":1624127890731,"results":"88","hashOfConfig":"86"},{"size":2069,"mtime":1622996488908,"results":"89","hashOfConfig":"86"},{"size":1141,"mtime":1624059985767,"results":"90","hashOfConfig":"86"},{"size":536,"mtime":1622161349981,"results":"91","hashOfConfig":"86"},{"size":1947,"mtime":1621383938996,"results":"92","hashOfConfig":"86"},{"size":1354,"mtime":1624059774860,"results":"93","hashOfConfig":"86"},{"size":336,"mtime":1621110381583,"results":"94","hashOfConfig":"86"},{"size":706,"mtime":1622320400631,"results":"95","hashOfConfig":"86"},{"size":1056,"mtime":1623286185313,"results":"96","hashOfConfig":"86"},{"size":5544,"mtime":1624059371684,"results":"97","hashOfConfig":"86"},{"size":4179,"mtime":1622320407375,"results":"98","hashOfConfig":"86"},{"size":1300,"mtime":1622376740286,"results":"99","hashOfConfig":"86"},{"size":2554,"mtime":1623351811852,"results":"100","hashOfConfig":"86"},{"size":4908,"mtime":1624059127455,"results":"101","hashOfConfig":"86"},{"size":1306,"mtime":1624059089125,"results":"102","hashOfConfig":"86"},{"size":1479,"mtime":1622377077171,"results":"103","hashOfConfig":"86"},{"size":4183,"mtime":1624129626934,"results":"104","hashOfConfig":"86"},{"size":11986,"mtime":1624059102515,"results":"105","hashOfConfig":"86"},{"size":3382,"mtime":1623849881252,"results":"106","hashOfConfig":"86"},{"size":9300,"mtime":1624129936726,"results":"107","hashOfConfig":"86"},{"size":3944,"mtime":1623938141084,"results":"108","hashOfConfig":"86"},{"size":5362,"mtime":1624059525792,"results":"109","hashOfConfig":"86"},{"size":2893,"mtime":1622250321965,"results":"110","hashOfConfig":"86"},{"size":197,"mtime":1612257692987,"results":"111","hashOfConfig":"86"},{"size":409,"mtime":1622644701226,"results":"112","hashOfConfig":"86"},{"size":814,"mtime":1622382902434,"results":"113","hashOfConfig":"86"},{"size":2022,"mtime":1621717088474,"results":"114","hashOfConfig":"86"},{"size":1195,"mtime":1625052229884,"results":"115","hashOfConfig":"86"},{"size":206,"mtime":1624994556398,"results":"116","hashOfConfig":"86"},{"size":774,"mtime":1624053038494,"results":"117","hashOfConfig":"86"},{"size":315,"mtime":1620501804232,"results":"118","hashOfConfig":"86"},{"size":1447,"mtime":1622121005123,"results":"119","hashOfConfig":"86"},{"size":2092,"mtime":1624129928750,"results":"120","hashOfConfig":"86"},{"size":385,"mtime":1620485131634,"results":"121","hashOfConfig":"86"},{"size":1669,"mtime":1623621488142,"results":"122","hashOfConfig":"86"},{"size":4258,"mtime":1623621384307,"results":"123","hashOfConfig":"86"},{"size":552,"mtime":1624059886637,"results":"124","hashOfConfig":"86"},{"size":838,"mtime":1624059866945,"results":"125","hashOfConfig":"86"},{"size":2030,"mtime":1624059332765,"results":"126","hashOfConfig":"86"},{"size":171,"mtime":1620257582863,"results":"127","hashOfConfig":"86"},{"size":3205,"mtime":1624127542008,"results":"128","hashOfConfig":"86"},{"size":1182,"mtime":1624059922301,"results":"129","hashOfConfig":"86"},{"size":2055,"mtime":1624059956310,"results":"130","hashOfConfig":"86"},{"size":372,"mtime":1620433335573,"results":"131","hashOfConfig":"86"},{"size":1362,"mtime":1621378511392,"results":"132","hashOfConfig":"86"},{"size":709,"mtime":1618011502175,"results":"133","hashOfConfig":"86"},{"size":1001,"mtime":1621638808930,"results":"134","hashOfConfig":"86"},{"size":3672,"mtime":1624891068061,"results":"135","hashOfConfig":"86"},{"size":3600,"mtime":1625939770899,"results":"136","hashOfConfig":"86"},{"size":946,"mtime":1622376740354,"results":"137","hashOfConfig":"86"},{"size":866,"mtime":1622418256516,"results":"138","hashOfConfig":"86"},{"size":1060,"mtime":1622376740311,"results":"139","hashOfConfig":"86"},{"size":1591,"mtime":1624059699986,"results":"140","hashOfConfig":"86"},{"size":1320,"mtime":1624129381674,"results":"141","hashOfConfig":"86"},{"size":5931,"mtime":1624059441444,"results":"142","hashOfConfig":"86"},{"size":169,"mtime":1615729035026,"results":"143","hashOfConfig":"86"},{"size":1687,"mtime":1624059759063,"results":"144","hashOfConfig":"86"},{"size":1304,"mtime":1625051700977,"results":"145","hashOfConfig":"86"},{"size":596,"mtime":1619481693785,"results":"146","hashOfConfig":"86"},{"size":4582,"mtime":1624059847018,"results":"147","hashOfConfig":"86"},{"size":3168,"mtime":1624141015704,"results":"148","hashOfConfig":"86"},{"size":3361,"mtime":1619828038487,"results":"149","hashOfConfig":"86"},{"size":187,"mtime":1618582087838,"results":"150","hashOfConfig":"86"},{"size":4568,"mtime":1624059464906,"results":"151","hashOfConfig":"86"},{"size":239,"mtime":1621110295186,"results":"152","hashOfConfig":"86"},{"size":2779,"mtime":1621628880706,"results":"153","hashOfConfig":"86"},{"size":774,"mtime":1622458622209,"results":"154","hashOfConfig":"86"},{"size":910,"mtime":1624053027352,"results":"155","hashOfConfig":"86"},{"size":3971,"mtime":1624059949286,"results":"156","hashOfConfig":"86"},{"size":2095,"mtime":1623286185309,"results":"157","hashOfConfig":"86"},{"size":654,"mtime":1620517092480,"results":"158","hashOfConfig":"86"},{"size":673,"mtime":1621385686096,"results":"159","hashOfConfig":"86"},{"size":1292,"mtime":1620344201336,"results":"160","hashOfConfig":"86"},{"size":829,"mtime":1620258622446,"results":"161","hashOfConfig":"86"},{"size":5493,"mtime":1621717088440,"results":"162","hashOfConfig":"86"},{"size":3084,"mtime":1624059685260,"results":"163","hashOfConfig":"86"},{"size":2182,"mtime":1624059709912,"results":"164","hashOfConfig":"86"},{"size":5812,"mtime":1624059402155,"results":"165","hashOfConfig":"86"},{"size":3769,"mtime":1623885509327,"results":"166","hashOfConfig":"86"},{"size":2736,"mtime":1624059417071,"results":"167","hashOfConfig":"86"},{"size":543,"mtime":1624126121850,"results":"168","hashOfConfig":"86"},{"size":1718,"mtime":1619893148929,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},"1jczwlb",{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"185"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"177"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"177"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"239"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"185"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"177"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"306"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"177"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Main\\index.tsx",["370"],"import { useParams } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport MedicProfileBox from \"../../../components/MedicProfileBox\";\r\nimport MedicProfileInfo from \"../../../components/MedicProfileInfo\";\r\nimport MedicProfileData from \"../../../components/MedicProfileData\";\r\nimport api from \"../../../services/api\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NamesProps } from \"../../Form/Steps/Names\";\r\n\r\nexport interface ParamTypes {\r\n  medicID: string;\r\n}\r\n\r\nexport interface MedicProps {\r\n  id: string | undefined;\r\n  userID: string;\r\n  area: string;\r\n  birth_date: string;\r\n  cpf: string;\r\n  doctorate_degree: string;\r\n  graduation: string;\r\n  rg: string;\r\n  phoneNumber: string;\r\n  master_degree: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  rating: string;\r\n  location: {\r\n    address: string;\r\n    number: number;\r\n  };\r\n}\r\n\r\nconst MainProfileMedic = ({ nextPage }: NamesProps) => {\r\n  const history = useHistory();\r\n\r\n  const date = new Date();\r\n  const dateString = date.toString();\r\n  const week_day = dateString.split(\" \")[0];\r\n\r\n  const [medic, setMedic] = useState<MedicProps | null>(null);\r\n\r\n  const { medicID } = useParams<ParamTypes>();\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`medics?id=${medicID}`)\r\n      .then((response) => {\r\n        setMedic(response.data);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 404) {\r\n          history.replace(\"/404\");\r\n        }\r\n      });\r\n  }, [medicID]);\r\n\r\n  function getWeekday() {\r\n    switch (week_day) {\r\n      case \"Sun\":\r\n        return 0;\r\n      case \"Mon\":\r\n        return 1;\r\n      case \"Tue\":\r\n        return 2;\r\n      case \"Wed\":\r\n        return 3;\r\n      case \"Thu\":\r\n        return 4;\r\n      case \"Fri\":\r\n        return 5;\r\n      case \"Sat\":\r\n        return 6;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Perfil de Dr(a). ${medic?.firstName}`}\r\n        returnFunction={() => history.goBack()}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"container-perfil\">\r\n          <MedicProfileBox\r\n            nextPage={nextPage}\r\n            medic={medic}\r\n            rating={Number(medic?.rating ? medic.rating : 4)}\r\n            area={medic?.area}\r\n          />\r\n          <MedicProfileInfo\r\n            id={medicID}\r\n            week_day={getWeekday()}\r\n            medic={medic}\r\n          />\r\n        </div>\r\n        <MedicProfileData medic={medic} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainProfileMedic;\r\n",["371","372"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Schedule\\index.tsx",["373","374"],"import { useParams } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../../../services/api\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport {\r\n  ParamTypes,\r\n  MedicProps,\r\n} from \"../../../components/MedicProfilePages/Main\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport {\r\n  IoChevronBackOutline,\r\n  IoChevronForwardOutline,\r\n  IoArrowUndoSharp,\r\n  IoArrowRedoSharp,\r\n} from \"react-icons/io5\";\r\nimport DaySchedule from \"../../../components/DaySchedule\";\r\nimport AppointmentType from \"../../../components/AppointmentType\";\r\nimport GreenButton from \"../../../components/GreenButton\";\r\nimport { NamesProps } from \"../../Form/Steps/Names\";\r\n\r\ninterface ConsultTypeProps {\r\n  type: string;\r\n  price: string;\r\n}\r\n\r\nconst ScheduleMedicProfile = ({ nextPage, previousPage }: NamesProps) => {\r\n  const [consultTypes, setConsultTypes] = useState<ConsultTypeProps[]>([]);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const [medic, setMedic] = useState<MedicProps | null>(null);\r\n\r\n  function calculateMonth(month: any) {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  const dateString = date.toString();\r\n\r\n  const [week_day, month, month_day, year] = dateString.split(\" \");\r\n  const numberMonth = calculateMonth(month);\r\n  const totalDate = Number(month_day) + numberMonth * Number(year);\r\n\r\n  const today = new Date();\r\n  const todayString = today.toString();\r\n  const [today_week_day, today_month, today_month_day, today_year] =\r\n    todayString.split(\" \");\r\n\r\n  const todayNumberMonth = calculateMonth(today_month);\r\n  const today_totalDate =\r\n    Number(today_month_day) + todayNumberMonth * Number(today_year);\r\n\r\n  const { medicID } = useParams<ParamTypes>();\r\n\r\n  useEffect(() => {\r\n    api.get(`medics?id=${medicID}`).then((response: any) => {\r\n      setMedic(response.data);\r\n    });\r\n  }, [medicID]);\r\n\r\n  useEffect(() => {\r\n    api.get(`consult-type?medicID=${medic?.id}`).then((response: any) => {\r\n      setConsultTypes(response.data);\r\n    });\r\n  }, [medic, setConsultTypes]);\r\n\r\n  function transformMonth() {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Agendar consulta com Dr(a). ${medic?.firstName}`}\r\n        returnFunction={() => previousPage()}\r\n      />\r\n      <div className=\"container\">\r\n        <Calendar\r\n          prevLabel={<IoChevronBackOutline color=\"#07B3D6\" />}\r\n          nextLabel={<IoChevronForwardOutline color=\"#07B3D6\" />}\r\n          prev2Label={<IoArrowUndoSharp color=\"#07B3D6\" />}\r\n          next2Label={<IoArrowRedoSharp color=\"#07B3D6\" />}\r\n          className=\"big-calendar\"\r\n          value={date}\r\n          onChange={(e: any) => {\r\n            setDate(e);\r\n          }}\r\n        />\r\n\r\n        {totalDate < today_totalDate ? (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"2rem\",\r\n              backgroundColor: \"#fff\",\r\n              fontSize: \"1.5rem\",\r\n              marginTop: \"2rem\",\r\n              borderRadius: \"4rem\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Você por acaso possui uma máquina de tempo?\r\n          </div>\r\n        ) : (\r\n          <DaySchedule\r\n            getMonth={transformMonth}\r\n            year={year}\r\n            monthDay={month_day}\r\n            medic_id={medic?.id}\r\n          />\r\n        )}\r\n\r\n        <AppointmentType consultTypes={consultTypes} />\r\n\r\n        <GreenButton\r\n          nextPage={nextPage}\r\n          getMonth={transformMonth}\r\n          year={year}\r\n          monthDay={month_day}\r\n          label=\"Revisar consulta\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScheduleMedicProfile;\r\n",["375","376"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\Router.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterPacient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\VerifyEmail\\index.tsx",["377"],"import { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport verified from \"../../assets/images/verified.svg\";\r\nimport api from \"../../services/api\";\r\n\r\nimport \"./styles.css\";\r\n\r\ninterface VerifyEmailParams {\r\n  token: string;\r\n}\r\n\r\nexport default function VerifyEmail() {\r\n  const history = useHistory();\r\n  const { token } = useParams<VerifyEmailParams>();\r\n\r\n  async function sendEmailVerification() {\r\n    try {\r\n      let response = await api.get(`/users/${token}`);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(response.data.error);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        history.replace(\"/entrar-paciente\");\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    sendEmailVerification();\r\n  }, []);\r\n  return (\r\n    <div className=\"confirm-email\">\r\n      <div className=\"confirm-email-content\">\r\n        <h1>E-mail verificado!</h1>\r\n        <img src={verified} alt=\"E-mail\" />\r\n        <h2>\r\n          Espere 3 segundos e será redirecionado para a página de login...\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["378","379"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentsClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ForgetPassword\\index.tsx",[],["380","381"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicProfile\\index.tsx",[],["382","383"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Spinner\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\CadastroSucesso\\index.tsx",["384"],"import { IoClose } from \"react-icons/io5\";\r\nimport Overlay from \"../Overlay\";\r\nimport \"./styles.css\";\r\nimport { IoCheckmarkOutline } from \"react-icons/io5\";\r\n\r\nexport interface CadastroSucessoProps {\r\n  name: string;\r\n  description: string;\r\n  close?: () => void;\r\n}\r\nexport default function CadastroSucesso({\r\n  name,\r\n  close,\r\n  description,\r\n}: CadastroSucessoProps) {\r\n  return (\r\n    <Overlay>\r\n      <div className=\"modal-success\">\r\n        <div className=\"success-icon\">\r\n          <IoCheckmarkOutline color=\"#fff\" size=\"7rem\" />\r\n        </div>\r\n        <h1>{name}!</h1>\r\n\r\n        <p>{description}</p>\r\n\r\n        <button onClick={close}>Continuar</button>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareClientFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Review.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileSettings\\index.tsx",["385","386","387"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { IoSettingsOutline, IoCardOutline } from \"react-icons/io5\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport refreshUserValidate from \"../../utils/refreshUserValidate\";\r\nimport mask from \"../../utils/mask\";\r\nimport api from \"../../services/api\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { PaymentMethodProps } from \"../Modals/PaymentMethod\";\r\n\r\nconst MyProfileSettings = () => {\r\n  const { spinner, sucesso } = useModal();\r\n  const { user, userID } = useAuth();\r\n  const [refreshUser, setRefreshUser] = useState({\r\n    fullName: `${user.firstName} ${user.lastName}`,\r\n    email: `${user.email}`,\r\n    phoneNumber: `${user.phoneNumber}`,\r\n  });\r\n\r\n  const [errors, setErrors] = useState(refreshUserValidate(refreshUser));\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  function validate() {\r\n    setErrors(refreshUserValidate(refreshUser));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setErrors(refreshUserValidate(refreshUser));\r\n  }, [refreshUser]);\r\n\r\n  async function handleSubmitRefreshUser() {\r\n    const loopedErrors = Object.values(errors);\r\n    if (loopedErrors.length > 0) {\r\n      setFormError(\"O formulário possui erros\");\r\n    } else {\r\n      setFormError(\"\");\r\n      spinner.open();\r\n      await api\r\n        .put(`clients/${userID}`, {\r\n          fullName: refreshUser.fullName,\r\n          phoneNumber: refreshUser.phoneNumber,\r\n        })\r\n        .then(() => {\r\n          spinner.close();\r\n          sucesso.open({\r\n            name: `Parabéns ${refreshUser.fullName}`,\r\n            description: \"Dados atualizados com sucesso!\",\r\n            close: () => sucesso.close(),\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-profile-settings\">\r\n      <div className=\"my-profile-settings-nav\">\r\n        <button>\r\n          <IoSettingsOutline size={40} color=\"#07B3D6\" />\r\n          <span>Configurações da minha conta</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"my-profile-settings-info\">\r\n        <h2>Informações da conta</h2>\r\n        <TextField\r\n          value={refreshUser.fullName}\r\n          name=\"fullname\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={(e) => {\r\n            setRefreshUser({ ...refreshUser, fullName: e.target.value });\r\n            validate();\r\n          }}\r\n          error={errors.fullName ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.fullName}</span>\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          value={refreshUser.email}\r\n          name=\"email\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          error={errors.email ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.email}</span>\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          value={refreshUser.phoneNumber}\r\n          name=\"phoneNumber\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Telefone</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={(e) => {\r\n            setRefreshUser({\r\n              ...refreshUser,\r\n              phoneNumber: mask(e.target.value, \"(##) # ####-####\"),\r\n            });\r\n            validate();\r\n          }}\r\n          error={errors.phoneNumber ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.phoneNumber}</span>\r\n          }\r\n        />\r\n\r\n        <button onClick={handleSubmitRefreshUser} type=\"button\">\r\n          Atualizar dados\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfileSettings;\r\n",["388","389"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorList\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Review\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentStatus\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorItem\\index.tsx",[],["390","391"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DaySchedule\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Main\\index.tsx",["392","393","394"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileRating\\index.tsx",["395"],"import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport SubHeaderPlatform from \"../SubHeaderPlatform\";\r\nimport \"./styles.css\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { ParamTypes } from \"../MedicProfilePages/Main\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\ninterface ReviewProps {\r\n  id: number;\r\n  first_name: string;\r\n  last_name: string;\r\n  stars: number;\r\n  description: string;\r\n}\r\n\r\nconst MedicProfileRating = () => {\r\n  const { medicID } = useParams<ParamTypes>();\r\n  const [reviews, setReviews] = useState<ReviewProps[]>([]);\r\n  const [medicName, setMedicName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`medics?id=${medicID}`).then((response: any) => {\r\n      setMedicName(response.data.firstName);\r\n      api.get(`reviews?medicID=${response.data.id}`).then((res: any) => {\r\n        setReviews(res.data);\r\n        setLoading(false);\r\n      });\r\n    });\r\n  }, [setReviews, medicID]);\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Avaliações do(a) Dr(a) ${medicName}`}\r\n        returnFunction={() => history.goBack()}\r\n      />\r\n      <div\r\n        style={{ alignItems: \"flex-start\", marginTop: \"2rem\" }}\r\n        className=\"container\"\r\n      >\r\n        {reviews.length === 0 ? (\r\n          <div style={{ textAlign: \"center\", width: \"100%\", fontSize: '4rem', fontWeight: 'bold', color: \"#2ea7a0\" }}>\r\n            Nenhuma avaliação registrada\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <h1\r\n              style={{\r\n                fontSize: \"3rem\",\r\n                fontWeight: \"bold\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n            >\r\n              Avaliações:\r\n            </h1>\r\n            {loading ? (\r\n              <Loader\r\n                type=\"TailSpin\"\r\n                color=\"var(--color-button-primary)\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              <div className=\"review-medic-profile\">\r\n                {reviews.map((review: ReviewProps, index: number) => {\r\n                  return (\r\n                    <div key={index} className=\"review-medic-profile-wrap\">\r\n                      <div className=\"review-medic-profile-wrap-flex\">\r\n                        <img\r\n                          src={`https://avatars.dicebear.com/api/human/${\r\n                            review.first_name + review.last_name\r\n                          }.svg`}\r\n                        />\r\n                        <h1>\r\n                          {review.first_name} {review.last_name}\r\n                        </h1>\r\n\r\n                        <span>{review.stars}.0</span>\r\n                        <FaStar\r\n                          color=\"#FFC107\"\r\n                          style={{ marginTop: \"1.1rem\", marginLeft: \"1.5rem\" }}\r\n                          size=\"3rem\"\r\n                        />\r\n                      </div>\r\n                      <p>{review.description}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicProfileRating;\r\n",["396","397"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx",[],["398","399"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\HeaderPlatform\\index.tsx",[],["400","401"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListAppointments\\index.tsx",["402"],"import { useEffect, useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport api from \"../../services/api\";\r\nimport \"./styles.css\";\r\n\r\nexport interface AppointmentProps {\r\n  area: string;\r\n  birth_date: string;\r\n  card_id: string;\r\n  clientID: number;\r\n  cpf: string;\r\n  created_at: string;\r\n  crm: string;\r\n  date: string;\r\n  doctorate_degree: string;\r\n  graduation: string;\r\n  id: number;\r\n  master_degree: string;\r\n  medicID: number;\r\n  phoneNumber: string;\r\n  price: string;\r\n  rg: string;\r\n  scheduleID: number;\r\n  time: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  paymentID: string;\r\n  confirmed: boolean;\r\n  rated: boolean;\r\n}\r\n\r\nconst ListAppointments = () => {\r\n  const { userID } = useAuth();\r\n  const [clientID, setClientID] = useState(\"\");\r\n  const [appointments, setAppointments] = useState<AppointmentProps[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`clients?id=${userID}`).then((response: any) => {\r\n      setClientID(response.data.id);\r\n      setLoading(false);\r\n    });\r\n  }, [userID]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.get(`appointments/${clientID}`).then((response: any) => {\r\n      setAppointments(response.data);\r\n      setLoading(false);\r\n    });\r\n  }, [clientID, setAppointments]);\r\n\r\n  function calculateMonth(month: any) {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  if (appointments.length === 0) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          padding: \"1rem\",\r\n        }}\r\n      >\r\n        <h1 style={{ fontSize: \"4rem\", fontWeight: \"bold\" }}>\r\n          Sem consultas agendadas\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-appointments\">\r\n      {loading ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {appointments.map((appointment: AppointmentProps, index: number) => {\r\n            const [month, day, year] = appointment.date.split(\"/\");\r\n            const dateResult = Number(month) * Number(year) + Number(day);\r\n\r\n            const today = new Date();\r\n            const todayString = today.toString();\r\n            const [today_week_day, today_month, today_month_day, today_year] =\r\n              todayString.split(\" \");\r\n            const todayNumberMonth = calculateMonth(today_month);\r\n            const today_totalDate =\r\n              Number(today_month_day) + todayNumberMonth * Number(today_year);\r\n\r\n            return (\r\n              <Link\r\n                key={index}\r\n                to={`/consultas/${appointment.scheduleID}`}\r\n                className=\"list-appointments-unique\"\r\n              >\r\n                <div className=\"list-appoints-unique-information\">\r\n                  <div className=\"list-appoints-unique-information-flex\">\r\n                    <img\r\n                      src={`https://avatars.dicebear.com/api/human/${\r\n                        appointment.first_name + appointment.last_name\r\n                      }.svg`}\r\n                      alt=\"Avatar\"\r\n                      className=\"list-appoints-unique-information-image\"\r\n                    />\r\n                    <div className=\"list-appoints-unique-information-text\">\r\n                      <h2>Consulta Dr(a) {appointment.first_name}</h2>\r\n                      <span>{appointment.area}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list-appoints-unique-status\">\r\n                    {dateResult < today_totalDate ? (\r\n                      <div className=\"list-appoints-unique-status-value\">\r\n                        Concluída\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"list-appoints-unique-status-value\">\r\n                        Ativa\r\n                      </div>\r\n                    )}\r\n                    <p className=\"list-appoints-unique-status-text\">\r\n                      Dia {`${day}/${month}/${year}`}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <footer>\r\n                  <p style={{ marginRight: \"2rem\" }}>{appointment.time}</p>\r\n                </footer>\r\n              </Link>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListAppointments;\r\n",["403","404"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\GreenButton\\index.tsx",["405"],"import \"./styles.css\";\r\nimport { useShareAppointmentForm } from \"../../context/ShareAppointmentFormProvider\";\r\n\r\ninterface GreenButtonInterface {\r\n  label: string;\r\n  getMonth: () => number;\r\n  year: string;\r\n  monthDay: string;\r\n  nextPage: () => void;\r\n}\r\n\r\nconst GreenButton = ({\r\n  label,\r\n  getMonth,\r\n  year,\r\n  monthDay,\r\n  nextPage,\r\n}: GreenButtonInterface) => {\r\n  const { appointmentData, setAppointmentData, error, setError } =\r\n    useShareAppointmentForm();\r\n\r\n  const month = getMonth();\r\n\r\n  function calculateMonth(month: any) {\r\n    switch (month) {\r\n      case \"Jan\":\r\n        return 1;\r\n      case \"Feb\":\r\n        return 2;\r\n      case \"Mar\":\r\n        return 3;\r\n      case \"Apr\":\r\n        return 4;\r\n      case \"May\":\r\n        return 5;\r\n      case \"Jun\":\r\n        return 6;\r\n      case \"Jul\":\r\n        return 7;\r\n      case \"Aug\":\r\n        return 8;\r\n      case \"Sep\":\r\n        return 9;\r\n      case \"Oct\":\r\n        return 10;\r\n      case \"Nov\":\r\n        return 11;\r\n      case \"Dec\":\r\n        return 12;\r\n\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  const totalDate =\r\n    Number(monthDay) * 10000 +\r\n    Number(month) * 100000 * (Number(year) * 1000000);\r\n\r\n  const today = new Date();\r\n  const todayString = today.toString();\r\n  const [today_week_day, today_month, today_month_day, today_year, today_time] =\r\n    todayString.split(\" \");\r\n  let [now_hour, now_minute] = today_time.split(\":\");\r\n\r\n  if (now_minute?.length === 1) {\r\n    now_minute = now_minute + \"0\";\r\n  }\r\n\r\n  const stringNowMinuteHour = now_hour.concat(now_minute);\r\n\r\n  const todayNumberMonth = calculateMonth(today_month);\r\n\r\n  const now_totalDate =\r\n    Number(today_month_day) * 10000 +\r\n    todayNumberMonth * 100000 * (Number(today_year) * 1000000) +\r\n    Number(stringNowMinuteHour);\r\n\r\n  let hour = appointmentData?.time?.split(\":\")[0];\r\n  let minute: any = appointmentData?.time?.split(\":\")[1];\r\n\r\n  if (minute?.length === 1) {\r\n    minute = minute + \"0\";\r\n  }\r\n\r\n  const stringMinuteHour = hour?.concat(minute);\r\n\r\n  function verifyAppointmentData() {\r\n    if (!appointmentData?.type || !appointmentData?.time) {\r\n      setError(\"Consulta ou horário não selecionado(s)\");\r\n    } else if (now_totalDate > totalDate + Number(stringMinuteHour)) {\r\n      setError(\"Não é possível viajar no tempo...\");\r\n    } else {\r\n      setError(\"\");\r\n      setAppointmentData({\r\n        ...appointmentData,\r\n        date: `${monthDay}/${month}/${year}`,\r\n      });\r\n      nextPage();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error?.length === 0 ? (\r\n        <span></span>\r\n      ) : (\r\n        <div className=\"error-container\">\r\n          <span>{error}</span>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        onClick={verifyAppointmentData}\r\n        className=\"green-button\"\r\n        type=\"button\"\r\n      >\r\n        {label}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GreenButton;\r\n",["406","407"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PublicRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\InfoProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginPatient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterPaciente\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\services\\api.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileData\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\LoadMoreButton\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Payment\\index.tsx",["408","409"],"import \"./styles.css\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport PaymentInfo from \"../../../components/PaymentInfo\";\r\nimport { NamesProps } from \"../../Form/Steps/Names\";\r\nimport { useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { PaymentMethodProps } from \"../../Modals/PaymentMethod\";\r\n\r\nconst PaymentMedicProfile = ({ previousPage, nextPage }: NamesProps) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [cardInfo, setCardInfo] = useState<PaymentMethodProps>({\r\n    id: \"\",\r\n    first_digits: \"\",\r\n    last_digits: \"\",\r\n    holder_name: \"\",\r\n    expiration_date: \"\",\r\n    card_cvv: \"\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title=\"Dados da consulta\"\r\n        returnFunction={() => previousPage()}\r\n      />\r\n      <div className=\"container\">\r\n        <PaymentInfo card={cardInfo} setCard={setCardInfo} error={error} />\r\n        {loading ? (\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <>\r\n            <button onClick={nextPage} className=\"green-button\">\r\n              Ir para o pagamento\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentMedicProfile;\r\n",["410","411"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\PaymentInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\App.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginSpitalAccount\\index.tsx",["412","413","414","415","416"],"import { Fragment, useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport returnIcon from \"../../assets/images/icons/return.svg\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\nconst LoginSpitalAccount = () => {\r\n  const { spinner } = useModal();\r\n  const { login, confirmed } = useAuth();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  async function handleSubmitLogin(e: any) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n\r\n    const { error } = await login(user.email, user.password);\r\n\r\n    spinner.close();\r\n    setError(error);\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"header-login\">\r\n        <div className=\"container header-context\">\r\n          <Link className=\"return-link\" to={`/entrar-registrar-paciente`}>\r\n            <img src={returnIcon} alt=\"Retornar\" className=\"return\" />\r\n          </Link>\r\n          <div className=\"header-title\">\r\n            <h1>\r\n              Insira suas informações para que a gente consiga realizar seu\r\n              cadastro\r\n            </h1>\r\n          </div>\r\n          <img className=\"logo\" src={logo} alt=\"Spital\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"login-spital-account\">\r\n        <div className=\"login-spital-account-credentials\">\r\n          <form className=\"login-spital-account-form\">\r\n            <div className=\"login-spital-account-form-flex\">\r\n              <h2>Entre com seu e-mail e senha</h2>\r\n\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleShowPassword();\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                <span>{showPassword ? \"Esconder senha\" : \"Mostrar senha\"}</span>\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"gray-line\"></div>\r\n\r\n            <div className=\"login-spital-account-form-inputs\">\r\n              <TextField\r\n                type=\"email\"\r\n                value={user.email}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setUser({ ...user, email: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n                placeholder=\"Digite seu e-mail\"\r\n              />\r\n\r\n              <TextField\r\n                value={user.password}\r\n                style={{ marginTop: \"2rem\" }}\r\n                fullWidth\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                onChange={(e) => {\r\n                  setUser({ ...user, password: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>Senha</span>}\r\n                placeholder=\"Digite sua senha\"\r\n              />\r\n            </div>\r\n\r\n            <p\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                color: \"red\",\r\n                position: \"relative\",\r\n                top: \"-10px\",\r\n              }}\r\n            >\r\n              {error}\r\n            </p>\r\n\r\n            <div className=\"gray-line\" id=\"gray-line-2\"></div>\r\n            <Link\r\n              style={{\r\n                color: \"#07B3D6\",\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                marginTop: \"1.5rem\",\r\n              }}\r\n              to=\"/recuperar\"\r\n            >\r\n              Esqueci minha senha\r\n            </Link>\r\n\r\n            <button onClick={handleSubmitLogin} className=\"login-button\">\r\n              Entrar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginSpitalAccount;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ConfirmEmail\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\SearchClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Names.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\calcPercentage.js",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\AuthProvider.tsx",["417"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterMedico\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PrivateRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentType\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Select\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\refreshUserValidate.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\HomeClient\\index.tsx",["418"],"import { useState, useEffect } from \"react\";\r\nimport Categories from \"../../components/Categories\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport HeaderPlatform from \"../../components/HeaderPlatform\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport api from \"../../services/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport \"./styles.css\";\r\nimport { useInfoData } from \"../../context/InfoProvider\";\r\n\r\nconst HomeClient = () => {\r\n  const { setInfoData, infoData } = useInfoData();\r\n  const [isLocationActivated, setIsLocationActivated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  let [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n\r\n  async function loadMore() {\r\n    setLoading(true);\r\n    let { data } = await api.get(\r\n      `medics?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    Geocode.fromLatLng(\r\n      `${location?.coords.latitude}`,\r\n      `${location?.coords.longitude}`\r\n    ).then((response: any) => {\r\n      try {\r\n        const address = response.results;\r\n        setInfoData({ ...infoData, location: address[0].formatted_address });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        setIsLocationActivated(true);\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        console.log(\"Você precisa ativar sua localização\");\r\n        setIsLocationActivated(false);\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n      };\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!location) {\r\n      // Nada\r\n    } else {\r\n      loadMore();\r\n    }\r\n  }, [location]);\r\n\r\n  Geocode.setApiKey(\"AIzaSyDanmMSOYTtyp-Lbu43BVKiSW5EP8FRS9Y\");\r\n  Geocode.setLanguage(\"pt\");\r\n  Geocode.setRegion(\"br\");\r\n  Geocode.enableDebug();\r\n\r\n  return (\r\n    <>\r\n      {isLocationActivated ? (\r\n        <div className=\"client-platform\">\r\n          <HeaderPlatform />\r\n          <div className=\"container\">\r\n            <Categories />\r\n            <DoctorList loading={loading} medics={medics} />\r\n            <LoadMoreButton onClick={loadMore} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"location-message\">\r\n          <h1>Você precisa ativar sua localização para continuarmos</h1>\r\n          <p>\r\n            Caso tenha dificuldades, isso pode de ajudar:{\" \"}\r\n            <a\r\n              href=\"https://support.google.com/chrome/answer/142065?co=GENIE.Platform%3DDesktop&hl=pt\"\r\n              rel=\"noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              https://support.google.com/chrome/answer/142065?co=GENIE.Platform%3DDesktop&hl=pt\r\n            </a>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeClient;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentUnique\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Location\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\AreYouSure\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\PaymentMethod\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareAppointmentFormProvider.tsx",[],["419","420"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Review.tsx",["421"],"import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport api from \"../../../services/api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport getPasswordAsterisk from \"../../../utils/HashPassword\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicReviewProps {\r\n  changePage: (index: number) => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicReview = ({ changePage, previousPage }: MedicReviewProps) => {\r\n  const [backendError, setBackEndError] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { medicData } = useShareFormMedic();\r\n\r\n  const history = useHistory();\r\n\r\n  async function handleSubmitClient() {\r\n    setIsLoading(true);\r\n\r\n    await api\r\n      .post(\"medics\", {\r\n        ...medicData,\r\n      })\r\n      .catch((err) => {\r\n        setBackEndError(err.response.data.error);\r\n      });\r\n\r\n    if (backendError !== null) {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const hashedPassword = getPasswordAsterisk(medicData?.password ?? \"\");\r\n\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  const formatedBirthDate = medicData?.birthDate?.replace(/[-]/g, \"/\");\r\n\r\n  async function handleSubmitForm(e: any) {\r\n    e.preventDefault();\r\n    const loopedErrors = Object.values(errors);\r\n    if (loopedErrors.length > 0) {\r\n      setHasError(true);\r\n    } else {\r\n      handleSubmitClient();\r\n      alert(\"Cadastro realizado com sucesso!\");\r\n      setHasError(false);\r\n      history.push(\"/verificar-email\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Revise seus dados</h2>\r\n      <div className=\"line\"></div>\r\n      <RenderAccordion\r\n        summary=\"Nome e telefone\"\r\n        medicInfo={[\r\n          { type: \"Nome\", info: medicData?.firstName },\r\n          { type: \"Sobrenome\", info: medicData?.lastName },\r\n          { type: \"Telefone\", info: medicData?.phoneNumber },\r\n        ]}\r\n        index={0}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Credenciais\"\r\n        medicInfo={[\r\n          { type: \"E-mail\", info: medicData?.email },\r\n          { type: \"Senha\", info: hashedPassword },\r\n        ]}\r\n        index={1}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados acadêmicos\"\r\n        medicInfo={[\r\n          { type: \"Área médica\", info: medicData?.area },\r\n          { type: \"Graduação\", info: medicData?.graduation },\r\n          { type: \"Mestrado\", info: medicData?.masterDegree },\r\n          { type: \"Doutorado\", info: medicData?.doctorateDegree },\r\n        ]}\r\n        index={2}\r\n        changePage={changePage}\r\n      />\r\n      <RenderAccordion\r\n        summary=\"Dados pessoais\"\r\n        medicInfo={[\r\n          { type: \"CPF\", info: medicData?.cpf },\r\n          { type: \"RG\", info: medicData?.rg },\r\n          { type: \"Data de nascimento\", info: formatedBirthDate },\r\n        ]}\r\n        index={3}\r\n        changePage={changePage}\r\n      />\r\n\r\n      <p>\r\n        {hasError ? (\r\n          <span\r\n            style={{\r\n              color: \"red\",\r\n              position: \"relative\",\r\n              top: \"1rem\",\r\n              left: \"1rem\",\r\n            }}\r\n          >\r\n            O formulário possui erros...\r\n          </span>\r\n        ) : (\r\n          <span></span>\r\n        )}\r\n      </p>\r\n\r\n      <p\r\n        style={{\r\n          color: \"red\",\r\n          position: \"relative\",\r\n          top: \"1rem\",\r\n          left: \"1rem\",\r\n        }}\r\n      >\r\n        {backendError}\r\n      </p>\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button onClick={handleSubmitForm} className=\"primary\">\r\n        {isLoading ? (\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n          />\r\n        ) : (\r\n          <p>Cadastrar</p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface RenderAccorditionProps {\r\n  summary: string;\r\n  medicInfo: Array<{\r\n    type: string;\r\n    info: string;\r\n  }>;\r\n  index: number;\r\n  changePage: (index: number) => void;\r\n}\r\n\r\nexport const RenderAccordion: React.FC<RenderAccorditionProps> = ({\r\n  summary,\r\n  medicInfo,\r\n  index,\r\n  changePage,\r\n}) => {\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        {summary}\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <div>\r\n          <ListItemText>\r\n            {medicInfo.map((data, index) => {\r\n              return (\r\n                <span\r\n                  style={{ display: \"block\", fontWeight: \"normal\" }}\r\n                  key={index}\r\n                  className=\"dados\"\r\n                >\r\n                  <span style={{ fontWeight: \"bold\", marginRight: \"1rem\" }}>\r\n                    {data.type}:\r\n                  </span>\r\n                  {data.info}\r\n                </span>\r\n              );\r\n            })}\r\n          </ListItemText>\r\n          <button onClick={(e) => changePage(index)}>\r\n            <IconButton component=\"span\" color=\"primary\">\r\n              <EditIcon className=\"editar-icone\" />\r\n            </IconButton>\r\n          </button>\r\n        </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default MedicReview;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\HashPassword.js",[],["422","423"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Stars\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\Landing\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MyProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicArea\\index.tsx",["424"],"import \"./styles.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SearchInput from \"../../components/SearchInput\";\r\nimport api from \"../../services/api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport SubHeaderPlatform from \"../../components/SubHeaderPlatform\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IoFilterOutline } from \"react-icons/io5\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\ninterface ParamTypes {\r\n  area: string;\r\n}\r\n\r\nconst MedicArea = () => {\r\n  const { filter } = useModal();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  const [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n  const [medicName, setMedicName] = useState<string>(\"\");\r\n  const [maxPrice, setMaxPrice] = useState<number>(500);\r\n  const [maxDistance, setMaxDistance] = useState<number>(9999);\r\n\r\n  function changePrice(price: number) {\r\n    setMaxPrice(price);\r\n  }\r\n\r\n  function changeDistance(distance: number) {\r\n    setMaxDistance(distance);\r\n  }\r\n\r\n  async function loadMore() {\r\n    let name = medicName.replace(/[^0-9a-zA-Z:,]+/, \"\").toLowerCase();\r\n    let { data } = await api.get(\r\n      `medics/${capitalizeArea}?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}&name=${name}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function reload() {\r\n    let name = medicName.replace(/[^0-9a-zA-Z:,]+/, \"\").toLowerCase();\r\n    let { data } = await api.get(\r\n      `medics/${capitalizeArea}?lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}&name=${name}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics(data);\r\n    setPage(1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        //\r\n        console.log(\"Você precisa ativar sua localização\");\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n      };\r\n    }\r\n  }\r\n\r\n  const { area } = useParams<ParamTypes>();\r\n\r\n  let capitalizeArea = area.charAt(0).toUpperCase() + area.slice(1);\r\n  if (capitalizeArea === \"Alergistas-e-imunologista\") {\r\n    capitalizeArea = \"Alergista-e-Imunologista\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUserLocation();\r\n  }, [capitalizeArea]);\r\n\r\n  useEffect(() => {\r\n    if (location?.coords.latitude !== undefined) {\r\n      reload();\r\n    }\r\n  }, [location, maxPrice, maxDistance]);\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Busque os melhores ${area}s da sua região!`}\r\n        returnFunction={() => history.goBack()}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"search-flex\">\r\n          <div className=\"search-flex-input\">\r\n            <SearchInput\r\n              placeholder=\"Busque pelo nome do médico...\"\r\n              onChange={(e) => setMedicName(e.currentTarget.value)}\r\n              onKeyDown={(e) => (e.key === \"Enter\" ? reload() : null)}\r\n              reload={reload}\r\n            />\r\n          </div>\r\n          <div\r\n            onClick={() =>\r\n              filter.open({\r\n                changePrice,\r\n                changeDistance,\r\n                currentDistance: maxDistance,\r\n                currentPrice: maxPrice,\r\n              })\r\n            }\r\n            className=\"search-flex-filter-button\"\r\n          >\r\n            <IoFilterOutline size={22} color=\"#000000\" />\r\n          </div>\r\n        </div>\r\n        <DoctorList medics={medics} loading={loading} />\r\n        {!loading && !medics.length && <h1>Nada encontrado</h1>}\r\n        <LoadMoreButton onClick={loadMore} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicArea;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\mask.js",[],["425","426"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Schedule.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Overlay\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\PersonalData.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SearchInput\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileBox\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RecoverPassword\\index.tsx",["427"],"import { IconButton, TextField } from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport api from \"../../services/api\";\r\nimport validateNewPassword from \"../../utils/validateNewPassword\";\r\nimport \"./styles.css\";\r\n\r\ninterface RecoverPasswordParams {\r\n  token?: string;\r\n}\r\n\r\nexport default function RecoverPassword() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  let { token } = useParams<RecoverPasswordParams>();\r\n  const { spinner } = useModal();\r\n  const [isValid, setIsValid] = useState<boolean | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [newPassword, setNewPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState(validateNewPassword(newPassword));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }, [newPassword]);\r\n\r\n  function validate() {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  if (!token || (isValid !== null && !isValid)) {\r\n    spinner.close();\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  const verifyToken = useCallback(async () => {\r\n    spinner.open();\r\n    let response = await api.get(`/users/recover/${token}`);\r\n\r\n    if (response.status === 202) {\r\n      setIsValid(true);\r\n    }\r\n\r\n    setIsLoading(false);\r\n    spinner.close();\r\n  }, [setIsValid, token]);\r\n\r\n  useEffect(() => {\r\n    verifyToken();\r\n  }, [verifyToken]);\r\n\r\n  if (isLoading) {\r\n    return <div></div>;\r\n  }\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n    if (newPassword.password !== newPassword.confirmPassword) {\r\n      spinner.close();\r\n      return;\r\n    }\r\n\r\n    let response = await api.put(`/users/recover/${token}`, {\r\n      password: newPassword.password,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      history.replace(\"/\");\r\n    }\r\n\r\n    spinner.close();\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit}>\r\n      <div id=\"flex\">\r\n        <h2>Seu e-mail</h2>\r\n        <IconButton\r\n          onClick={() => {\r\n            handleShowPassword();\r\n          }}\r\n          className=\"show-password-button\"\r\n          color=\"primary\"\r\n        >\r\n          {showPassword ? \"Esconder senha\" : \"Mostrar senha\"}\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={newPassword.password}\r\n        name=\"password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Nova senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setNewPassword({ ...newPassword, password: e.target.value });\r\n          validate();\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors.password ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1.5rem\" }}>{errors.password}</span>\r\n        }\r\n      />\r\n      <TextField\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={newPassword.confirmPassword}\r\n        style={{ marginTop: \"1rem\" }}\r\n        name=\"confirm_password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Confirmar nova senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setNewPassword({ ...newPassword, confirmPassword: e.target.value });\r\n          validate();\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors.confirmPassword ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1.5rem\" }}>{errors.confirmPassword}</span>\r\n        }\r\n      />\r\n      <button className=\"recover-password-button\">Alterar senha</button>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Phone.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SubHeaderPlatform\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateNewPassword.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareMedicFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Header\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListMedicAreas\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Filtro\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\AcademicData.tsx",["428"],"import { useEffect, useState } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"../../Select\";\r\nimport \"./styles.css\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicNamesProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicAcademicData = ({ nextPage, previousPage }: MedicNamesProps) => {\r\n  const areaOptions = [\r\n    {\r\n      label: \"Alergista e Imunologista\",\r\n      value: \"Alergista e Imunologista\",\r\n    },\r\n    {\r\n      label: \"Angiologista\",\r\n      value: \"Angiologista\",\r\n    },\r\n    {\r\n      label: \"Cardiologista\",\r\n      value: \"Cardiologista\",\r\n    },\r\n    {\r\n      label: \"Coloproctologista\",\r\n      value: \"Coloproctologista\",\r\n    },\r\n    {\r\n      label: \"Dermatologista\",\r\n      value: \"Dermatologista\",\r\n    },\r\n    {\r\n      label: \"Endocrinologista\",\r\n      value: \"Endocrinologista\",\r\n    },\r\n    {\r\n      label: \"Endoscopista\",\r\n      value: \"Endoscopista\",\r\n    },\r\n    {\r\n      label: \"Gastroenterologista\",\r\n      value: \"Gastroenterologista\",\r\n    },\r\n    {\r\n      label: \"Geriatra\",\r\n      value: \"Geriatra\",\r\n    },\r\n    {\r\n      label: \"Ginecologista\",\r\n      value: \"Ginecologista\",\r\n    },\r\n    {\r\n      label: \"Hematologista\",\r\n      value: \"Hematologista\",\r\n    },\r\n    {\r\n      label: \"Infectologista\",\r\n      value: \"Infectologista\",\r\n    },\r\n    {\r\n      label: \"Nefrologista\",\r\n      value: \"Nefrologista\",\r\n    },\r\n    {\r\n      label: \"Neurologista\",\r\n      value: \"Neurologista\",\r\n    },\r\n    {\r\n      label: \"Nutrologo\",\r\n      value: \"Nutrologo\",\r\n    },\r\n    {\r\n      label: \"Obstetricista\",\r\n      value: \"Obstetricista\",\r\n    },\r\n    {\r\n      label: \"Oftalmologista\",\r\n      value: \"Oftalmologista\",\r\n    },\r\n    {\r\n      label: \"Ortopedista\",\r\n      value: \"Ortopedista\",\r\n    },\r\n    {\r\n      label: \"Otorrinolaringologista\",\r\n      value: \"Otorrinolaringologista\",\r\n    },\r\n    {\r\n      label: \"Pediatra\",\r\n      value: \"Pediatra\",\r\n    },\r\n    {\r\n      label: \"Pneumologista\",\r\n      value: \"Pneumologista\",\r\n    },\r\n    {\r\n      label: \"Radiologista\",\r\n      value: \"Radiologista\",\r\n    },\r\n    {\r\n      label: \"Radioterapista\",\r\n      value: \"Radioterapista\",\r\n    },\r\n    {\r\n      label: \"Reumatologista\",\r\n      value: \"Reumatologista\",\r\n    },\r\n    {\r\n      label: \"Urologista\",\r\n      value: \"Urologista\",\r\n    },\r\n  ];\r\n\r\n  const { medicData, setMedicData } = useShareFormMedic();\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  useEffect(() => {\r\n    setMedicData((previousState) => ({\r\n      ...previousState,\r\n      area: areaOptions[0].value,\r\n    }));\r\n  }, [areaOptions]);\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Dados Acadêmicos</h2>\r\n      <div className=\"line\"></div>\r\n      <Select\r\n        name=\"week_day\"\r\n        onChange={(e: any) =>\r\n          setMedicData({ ...medicData, area: e.target.value })\r\n        }\r\n        value={medicData?.area}\r\n        options={areaOptions}\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"Universidade de São Paulo\"\r\n        value={medicData?.graduation}\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Graduação</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, graduation: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"graduação\"\r\n        error={errors?.graduation ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.graduation}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.masterDegree}\r\n        placeholder=\"Universidade de Campinas\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Mestrado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, masterDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"mestrado\"\r\n        error={errors?.masterDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.masterDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.doctorateDegree}\r\n        placeholder=\"Universidade Estadual Paulista\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Doutorado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, doctorateDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.doctorateDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.doctorateDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.crm}\r\n        placeholder=\"010201/SP\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>CRM</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, crm: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.crm ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.crm}</span>}\r\n      />\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button className=\"primary\" onClick={(e) => nextPage()}>\r\n        Próximo\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicAcademicData;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateMedicInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Names.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\404\\index.tsx",["429"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport image404 from \"../../assets/images/404.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div className=\"page-404\">\r\n      <h1>Página não encontrada...</h1>\r\n      <img src={image404} />\r\n      <p>\r\n        Página ou usuário não encontrado. Podem ter sido excluídos, atualizados\r\n        ou nem se quer ter existido.\r\n      </p>\r\n      <Link to=\"/\">Voltar para página principal</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Categories\\index.tsx",[],{"ruleId":"430","severity":1,"message":"431","line":59,"column":6,"nodeType":"432","endLine":59,"endColumn":15,"suggestions":"433"},{"ruleId":"434","replacedBy":"435"},{"ruleId":"436","replacedBy":"437"},{"ruleId":"438","severity":1,"message":"439","line":68,"column":10,"nodeType":"440","messageId":"441","endLine":68,"endColumn":18},{"ruleId":"438","severity":1,"message":"442","line":74,"column":10,"nodeType":"440","messageId":"441","endLine":74,"endColumn":24},{"ruleId":"434","replacedBy":"443"},{"ruleId":"436","replacedBy":"444"},{"ruleId":"430","severity":1,"message":"445","line":33,"column":6,"nodeType":"432","endLine":33,"endColumn":8,"suggestions":"446"},{"ruleId":"434","replacedBy":"447"},{"ruleId":"436","replacedBy":"448"},{"ruleId":"434","replacedBy":"449"},{"ruleId":"436","replacedBy":"450"},{"ruleId":"434","replacedBy":"451"},{"ruleId":"436","replacedBy":"452"},{"ruleId":"438","severity":1,"message":"453","line":1,"column":10,"nodeType":"440","messageId":"441","endLine":1,"endColumn":17},{"ruleId":"438","severity":1,"message":"454","line":3,"column":29,"nodeType":"440","messageId":"441","endLine":3,"endColumn":42},{"ruleId":"438","severity":1,"message":"455","line":10,"column":10,"nodeType":"440","messageId":"441","endLine":10,"endColumn":28},{"ruleId":"438","severity":1,"message":"456","line":22,"column":10,"nodeType":"440","messageId":"441","endLine":22,"endColumn":19},{"ruleId":"434","replacedBy":"457"},{"ruleId":"436","replacedBy":"458"},{"ruleId":"434","replacedBy":"459"},{"ruleId":"436","replacedBy":"460"},{"ruleId":"438","severity":1,"message":"442","line":61,"column":10,"nodeType":"440","messageId":"441","endLine":61,"endColumn":24},{"ruleId":"438","severity":1,"message":"461","line":73,"column":9,"nodeType":"440","messageId":"441","endLine":73,"endColumn":22},{"ruleId":"438","severity":1,"message":"462","line":150,"column":23,"nodeType":"440","messageId":"441","endLine":150,"endColumn":32},{"ruleId":"463","severity":1,"message":"464","line":74,"column":25,"nodeType":"465","endLine":78,"endColumn":27},{"ruleId":"434","replacedBy":"466"},{"ruleId":"436","replacedBy":"467"},{"ruleId":"434","replacedBy":"468"},{"ruleId":"436","replacedBy":"469"},{"ruleId":"434","replacedBy":"468"},{"ruleId":"436","replacedBy":"469"},{"ruleId":"438","severity":1,"message":"442","line":133,"column":20,"nodeType":"440","messageId":"441","endLine":133,"endColumn":34},{"ruleId":"434","replacedBy":"470"},{"ruleId":"436","replacedBy":"471"},{"ruleId":"438","severity":1,"message":"442","line":62,"column":10,"nodeType":"440","messageId":"441","endLine":62,"endColumn":24},{"ruleId":"434","replacedBy":"472"},{"ruleId":"436","replacedBy":"473"},{"ruleId":"438","severity":1,"message":"474","line":10,"column":19,"nodeType":"440","messageId":"441","endLine":10,"endColumn":29},{"ruleId":"438","severity":1,"message":"475","line":11,"column":17,"nodeType":"440","messageId":"441","endLine":11,"endColumn":25},{"ruleId":"434","replacedBy":"476"},{"ruleId":"436","replacedBy":"477"},{"ruleId":"438","severity":1,"message":"478","line":1,"column":30,"nodeType":"440","messageId":"441","endLine":1,"endColumn":39},{"ruleId":"438","severity":1,"message":"479","line":9,"column":8,"nodeType":"440","messageId":"441","endLine":9,"endColumn":14},{"ruleId":"438","severity":1,"message":"480","line":15,"column":18,"nodeType":"440","messageId":"441","endLine":15,"endColumn":27},{"ruleId":"438","severity":1,"message":"481","line":33,"column":10,"nodeType":"440","messageId":"441","endLine":33,"endColumn":19},{"ruleId":"438","severity":1,"message":"482","line":33,"column":21,"nodeType":"440","messageId":"441","endLine":33,"endColumn":33},{"ruleId":"430","severity":1,"message":"483","line":119,"column":6,"nodeType":"432","endLine":119,"endColumn":8,"suggestions":"484"},{"ruleId":"430","severity":1,"message":"485","line":79,"column":6,"nodeType":"432","endLine":79,"endColumn":16,"suggestions":"486"},{"ruleId":"434","replacedBy":"487"},{"ruleId":"436","replacedBy":"488"},{"ruleId":"438","severity":1,"message":"489","line":52,"column":18,"nodeType":"440","messageId":"441","endLine":52,"endColumn":27},{"ruleId":"434","replacedBy":"449"},{"ruleId":"436","replacedBy":"450"},{"ruleId":"430","severity":1,"message":"490","line":101,"column":6,"nodeType":"432","endLine":101,"endColumn":39,"suggestions":"491"},{"ruleId":"434","replacedBy":"443"},{"ruleId":"436","replacedBy":"444"},{"ruleId":"430","severity":1,"message":"492","line":55,"column":6,"nodeType":"432","endLine":55,"endColumn":25,"suggestions":"493"},{"ruleId":"430","severity":1,"message":"494","line":130,"column":6,"nodeType":"432","endLine":130,"endColumn":19,"suggestions":"495"},{"ruleId":"463","severity":1,"message":"464","line":10,"column":7,"nodeType":"465","endLine":10,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["496"],"no-native-reassign",["497"],"no-negated-in-lhs",["498"],"@typescript-eslint/no-unused-vars","'week_day' is assigned a value but never used.","Identifier","unusedVar","'today_week_day' is assigned a value but never used.",["497"],["498"],"React Hook useEffect has a missing dependency: 'sendEmailVerification'. Either include it or remove the dependency array.",["499"],["497"],["498"],["497"],["498"],["497"],["498"],"'IoClose' is defined but never used.","'IoCardOutline' is defined but never used.","'PaymentMethodProps' is defined but never used.","'formError' is assigned a value but never used.",["497"],["498"],["497"],["498"],"'now_totalDate' is assigned a value but never used.","'totalDate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["497"],["498"],["497"],["498"],["497"],["498"],["497"],["498"],"'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.",["497"],["498"],"'useEffect' is defined but never used.","'Loader' is defined but never used.","'confirmed' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loginWithToken'. Either include it or remove the dependency array.",["500"],"React Hook useEffect has a missing dependency: 'loadMore'. Either include it or remove the dependency array.",["501"],["497"],["498"],"'setErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["502"],"React Hook useCallback has a missing dependency: 'spinner'. Either include it or remove the dependency array.",["503"],"React Hook useEffect has a missing dependency: 'setMedicData'. Either include it or remove the dependency array.",["504"],{"desc":"505","fix":"506"},"no-global-assign","no-unsafe-negation",{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},"Update the dependencies array to be: [history, medicID]",{"range":"519","text":"520"},"Update the dependencies array to be: [sendEmailVerification]",{"range":"521","text":"522"},"Update the dependencies array to be: [loginWithToken]",{"range":"523","text":"524"},"Update the dependencies array to be: [loadMore, location]",{"range":"525","text":"526"},"Update the dependencies array to be: [location, maxPrice, maxDistance, reload]",{"range":"527","text":"528"},"Update the dependencies array to be: [spinner, token]",{"range":"529","text":"530"},"Update the dependencies array to be: [areaOptions, setMedicData]",{"range":"531","text":"532"},[1593,1602],"[history, medicID]",[815,817],"[sendEmailVerification]",[2847,2849],"[loginWithToken]",[2474,2484],"[loadMore, location]",[3278,3311],"[location, maxPrice, maxDistance, reload]",[1581,1600],"[spinner, token]",[2819,2832],"[areaOptions, setMedicData]"]