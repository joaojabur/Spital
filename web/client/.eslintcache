[{"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\App.tsx":"1","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\InfoProvider.tsx":"2","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterPaciente\\index.tsx":"3","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx":"4","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\VerifyEmail\\index.tsx":"5","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentsClient\\index.tsx":"6","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\CadastroSucesso\\index.tsx":"7","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareAppointmentFormProvider.tsx":"8","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Credentials.tsx":"9","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateNewPassword.ts":"10","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SearchInput\\index.tsx":"11","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Overlay\\index.tsx":"12","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\LoadMoreButton\\index.tsx":"13","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileInfo\\index.tsx":"14","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentType\\index.tsx":"15","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Stars\\index.tsx":"16","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx":"17","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\AuthProvider.tsx":"18","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicArea\\index.tsx":"19","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Filtro\\index.tsx":"20","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Names.tsx":"21","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Names.tsx":"22","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ConfirmEmail\\index.tsx":"23","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterPacient\\index.tsx":"24","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterSpitalAccount\\index.tsx":"25","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RecoverPassword\\index.tsx":"26","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\SearchClient\\index.tsx":"27","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\404\\index.tsx":"28","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\HomeClient\\index.tsx":"29","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Location\\index.tsx":"30","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Schedule.tsx":"31","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Review.tsx":"32","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Header\\index.tsx":"33","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateInfo.ts":"34","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileSettings\\index.tsx":"35","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Schedule\\index.tsx":"36","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentStatus\\index.tsx":"37","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileInfo\\index.tsx":"38","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PrivateRoute.tsx":"39","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginPatient\\index.tsx":"40","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginSpitalAccount\\index.tsx":"41","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\Landing\\index.tsx":"42","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\PaymentMethod\\index.tsx":"43","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicProfile\\index.tsx":"44","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareClientFormProvider.tsx":"45","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Phone.tsx":"46","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\mask.js":"47","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PublicRoute.tsx":"48","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileRating\\index.tsx":"49","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MyProfile\\index.tsx":"50","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Spinner\\index.tsx":"51","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Credentials.tsx":"52","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\HeaderPlatform\\index.tsx":"53","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Review\\index.tsx":"54","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Main\\index.tsx":"55","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileData\\index.tsx":"56","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ForgetPassword\\index.tsx":"57","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentUnique\\index.tsx":"58","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\AreYouSure\\index.tsx":"59","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareMedicFormProvider.tsx":"60","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorList\\index.tsx":"61","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Payment\\index.tsx":"62","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\AcademicData.tsx":"63","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListMedicAreas\\index.tsx":"64","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterMedico\\index.tsx":"65","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateMedicInfo.ts":"66","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\PaymentInfo\\index.tsx":"67","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Review.tsx":"68","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Main\\index.tsx":"69","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListAppointments\\index.tsx":"70","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\GreenButton\\index.tsx":"71","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorItem\\index.tsx":"72"},{"size":534,"mtime":1627592407007,"results":"73","hashOfConfig":"74"},{"size":814,"mtime":1622382902434,"results":"75","hashOfConfig":"74"},{"size":1195,"mtime":1625052229884,"results":"76","hashOfConfig":"74"},{"size":2055,"mtime":1624059956310,"results":"77","hashOfConfig":"74"},{"size":1147,"mtime":1626197316491,"results":"78","hashOfConfig":"74"},{"size":536,"mtime":1622161349981,"results":"79","hashOfConfig":"74"},{"size":706,"mtime":1622320400631,"results":"80","hashOfConfig":"74"},{"size":1320,"mtime":1624129381674,"results":"81","hashOfConfig":"74"},{"size":3168,"mtime":1624141015704,"results":"82","hashOfConfig":"74"},{"size":673,"mtime":1621385686096,"results":"83","hashOfConfig":"74"},{"size":774,"mtime":1622458622209,"results":"84","hashOfConfig":"74"},{"size":239,"mtime":1621110295186,"results":"85","hashOfConfig":"74"},{"size":319,"mtime":1627592670311,"results":"86","hashOfConfig":"74"},{"size":2182,"mtime":1624059709912,"results":"87","hashOfConfig":"74"},{"size":1362,"mtime":1621378511392,"results":"88","hashOfConfig":"74"},{"size":1687,"mtime":1624059759063,"results":"89","hashOfConfig":"74"},{"size":8621,"mtime":1628975009897,"results":"90","hashOfConfig":"74"},{"size":3205,"mtime":1624127542008,"results":"91","hashOfConfig":"74"},{"size":4582,"mtime":1624059847018,"results":"92","hashOfConfig":"74"},{"size":3084,"mtime":1624059685260,"results":"93","hashOfConfig":"74"},{"size":2030,"mtime":1624059332765,"results":"94","hashOfConfig":"74"},{"size":2736,"mtime":1624059417071,"results":"95","hashOfConfig":"74"},{"size":609,"mtime":1626196887447,"results":"96","hashOfConfig":"74"},{"size":2069,"mtime":1622996488908,"results":"97","hashOfConfig":"74"},{"size":1669,"mtime":1623621488142,"results":"98","hashOfConfig":"74"},{"size":3971,"mtime":1624059949286,"results":"99","hashOfConfig":"74"},{"size":838,"mtime":1624059866945,"results":"100","hashOfConfig":"74"},{"size":543,"mtime":1624126121850,"results":"101","hashOfConfig":"74"},{"size":3600,"mtime":1625939770899,"results":"102","hashOfConfig":"74"},{"size":866,"mtime":1622418256516,"results":"103","hashOfConfig":"74"},{"size":4568,"mtime":1624059464906,"results":"104","hashOfConfig":"74"},{"size":5706,"mtime":1626484224157,"results":"105","hashOfConfig":"74"},{"size":829,"mtime":1620258622446,"results":"106","hashOfConfig":"74"},{"size":2554,"mtime":1623351811852,"results":"107","hashOfConfig":"74"},{"size":4179,"mtime":1622320407375,"results":"108","hashOfConfig":"74"},{"size":4912,"mtime":1623851246169,"results":"109","hashOfConfig":"74"},{"size":1306,"mtime":1624059089125,"results":"110","hashOfConfig":"74"},{"size":3672,"mtime":1624891068061,"results":"111","hashOfConfig":"74"},{"size":372,"mtime":1620433335573,"results":"112","hashOfConfig":"74"},{"size":2022,"mtime":1621717088474,"results":"113","hashOfConfig":"74"},{"size":4258,"mtime":1623621384307,"results":"114","hashOfConfig":"74"},{"size":1304,"mtime":1625051700977,"results":"115","hashOfConfig":"74"},{"size":1591,"mtime":1624059699986,"results":"116","hashOfConfig":"74"},{"size":1354,"mtime":1624059774860,"results":"117","hashOfConfig":"74"},{"size":1056,"mtime":1623286185313,"results":"118","hashOfConfig":"74"},{"size":2095,"mtime":1623286185309,"results":"119","hashOfConfig":"74"},{"size":187,"mtime":1618582087838,"results":"120","hashOfConfig":"74"},{"size":409,"mtime":1622644701226,"results":"121","hashOfConfig":"74"},{"size":3382,"mtime":1623849881252,"results":"122","hashOfConfig":"74"},{"size":596,"mtime":1619481693785,"results":"123","hashOfConfig":"74"},{"size":336,"mtime":1621110381583,"results":"124","hashOfConfig":"74"},{"size":3361,"mtime":1619828038487,"results":"125","hashOfConfig":"74"},{"size":3944,"mtime":1623938141084,"results":"126","hashOfConfig":"74"},{"size":4910,"mtime":1626788045607,"results":"127","hashOfConfig":"74"},{"size":2708,"mtime":1624053545831,"results":"128","hashOfConfig":"74"},{"size":774,"mtime":1624053038494,"results":"129","hashOfConfig":"74"},{"size":1947,"mtime":1621383938996,"results":"130","hashOfConfig":"74"},{"size":946,"mtime":1622376740354,"results":"131","hashOfConfig":"74"},{"size":1060,"mtime":1622376740311,"results":"132","hashOfConfig":"74"},{"size":1292,"mtime":1620344201336,"results":"133","hashOfConfig":"74"},{"size":1335,"mtime":1627592389512,"results":"134","hashOfConfig":"74"},{"size":1447,"mtime":1622121005123,"results":"135","hashOfConfig":"74"},{"size":5812,"mtime":1624059402155,"results":"136","hashOfConfig":"74"},{"size":5493,"mtime":1621717088440,"results":"137","hashOfConfig":"74"},{"size":1182,"mtime":1624059922301,"results":"138","hashOfConfig":"74"},{"size":3769,"mtime":1623885509327,"results":"139","hashOfConfig":"74"},{"size":2092,"mtime":1624129928750,"results":"140","hashOfConfig":"74"},{"size":5931,"mtime":1624059441444,"results":"141","hashOfConfig":"74"},{"size":12033,"mtime":1628975834120,"results":"142","hashOfConfig":"74"},{"size":5346,"mtime":1628975760153,"results":"143","hashOfConfig":"74"},{"size":2893,"mtime":1622250321965,"results":"144","hashOfConfig":"74"},{"size":1446,"mtime":1626543603976,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"1jczwlb",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"148"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"148"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"159"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"172"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"172"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"192"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"167"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\App.tsx",[],["309","310"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\InfoProvider.tsx",[],["311","312"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterPaciente\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterMedicalSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\VerifyEmail\\index.tsx",["313"],"import { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport verified from \"../../assets/images/verified.svg\";\r\nimport api from \"../../services/api\";\r\n\r\nimport \"./styles.css\";\r\n\r\ninterface VerifyEmailParams {\r\n  token: string;\r\n}\r\n\r\nexport default function VerifyEmail() {\r\n  const history = useHistory();\r\n  const { token } = useParams<VerifyEmailParams>();\r\n\r\n  async function sendEmailVerification() {\r\n    try {\r\n      let response = await api.get(`/users/${token}`);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(response.data.error);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        history.replace(\"/login-spital-paciente\");\r\n      }, 3000);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    sendEmailVerification();\r\n  }, []);\r\n  return (\r\n    <div className=\"confirm-email\">\r\n      <div className=\"confirm-email-content\">\r\n        <h1>E-mail verificado!</h1>\r\n        <img src={verified} alt=\"E-mail\" />\r\n        <h2>\r\n          Espere 3 segundos e será redirecionado para a página de login...\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["314","315"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentsClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\CadastroSucesso\\index.tsx",["316"],"import { IoClose } from \"react-icons/io5\";\r\nimport Overlay from \"../Overlay\";\r\nimport \"./styles.css\";\r\nimport { IoCheckmarkOutline } from \"react-icons/io5\";\r\n\r\nexport interface CadastroSucessoProps {\r\n  name: string;\r\n  description: string;\r\n  close?: () => void;\r\n}\r\nexport default function CadastroSucesso({\r\n  name,\r\n  close,\r\n  description,\r\n}: CadastroSucessoProps) {\r\n  return (\r\n    <Overlay>\r\n      <div className=\"modal-success\">\r\n        <div className=\"success-icon\">\r\n          <IoCheckmarkOutline color=\"#fff\" size=\"7rem\" />\r\n        </div>\r\n        <h1>{name}!</h1>\r\n\r\n        <p>{description}</p>\r\n\r\n        <button onClick={close}>Continuar</button>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareAppointmentFormProvider.tsx",[],["317","318"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateNewPassword.ts",[],["319","320"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\SearchInput\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Overlay\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\LoadMoreButton\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentType\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Stars\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\FinalizePayment\\index.jsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\AuthProvider.tsx",["321"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicArea\\index.tsx",["322"],"import \"./styles.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SearchInput from \"../../components/SearchInput\";\r\nimport api from \"../../services/api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport SubHeaderPlatform from \"../../components/SubHeaderPlatform\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IoFilterOutline } from \"react-icons/io5\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\ninterface ParamTypes {\r\n  area: string;\r\n}\r\n\r\nconst MedicArea = () => {\r\n  const { filter } = useModal();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  const [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n  const [medicName, setMedicName] = useState<string>(\"\");\r\n  const [maxPrice, setMaxPrice] = useState<number>(500);\r\n  const [maxDistance, setMaxDistance] = useState<number>(9999);\r\n\r\n  function changePrice(price: number) {\r\n    setMaxPrice(price);\r\n  }\r\n\r\n  function changeDistance(distance: number) {\r\n    setMaxDistance(distance);\r\n  }\r\n\r\n  async function loadMore() {\r\n    let name = medicName.replace(/[^0-9a-zA-Z:,]+/, \"\").toLowerCase();\r\n    let { data } = await api.get(\r\n      `medics/${capitalizeArea}?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}&name=${name}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function reload() {\r\n    let name = medicName.replace(/[^0-9a-zA-Z:,]+/, \"\").toLowerCase();\r\n    let { data } = await api.get(\r\n      `medics/${capitalizeArea}?lat=${location?.coords.latitude}&lon=${location?.coords.longitude}&distance=${maxDistance}&name=${name}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    setMedics(data);\r\n    setPage(1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        //\r\n        console.log(\"Você precisa ativar sua localização\");\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n      };\r\n    }\r\n  }\r\n\r\n  const { area } = useParams<ParamTypes>();\r\n\r\n  let capitalizeArea = area.charAt(0).toUpperCase() + area.slice(1);\r\n  if (capitalizeArea === \"Alergistas-e-imunologista\") {\r\n    capitalizeArea = \"Alergista-e-Imunologista\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUserLocation();\r\n  }, [capitalizeArea]);\r\n\r\n  useEffect(() => {\r\n    if (location?.coords.latitude !== undefined) {\r\n      reload();\r\n    }\r\n  }, [location, maxPrice, maxDistance]);\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title={`Busque os melhores ${area}s da sua região!`}\r\n        returnFunction={() => history.goBack()}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"search-flex\">\r\n          <div className=\"search-flex-input\">\r\n            <SearchInput\r\n              placeholder=\"Busque pelo nome do médico...\"\r\n              onChange={(e) => setMedicName(e.currentTarget.value)}\r\n              onKeyDown={(e) => (e.key === \"Enter\" ? reload() : null)}\r\n              reload={reload}\r\n            />\r\n          </div>\r\n          <div\r\n            onClick={() =>\r\n              filter.open({\r\n                changePrice,\r\n                changeDistance,\r\n                currentDistance: maxDistance,\r\n                currentPrice: maxPrice,\r\n              })\r\n            }\r\n            className=\"search-flex-filter-button\"\r\n          >\r\n            <IoFilterOutline size={22} color=\"#000000\" />\r\n          </div>\r\n        </div>\r\n        <DoctorList medics={medics} loading={loading} />\r\n        {!loading && !medics.length && <h1>Nada encontrado</h1>}\r\n        <LoadMoreButton onClick={loadMore} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicArea;\r\n",["323","324"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Filtro\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Names.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Names.tsx",[],["325","326"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ConfirmEmail\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterPacient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RegisterSpitalAccount\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\RecoverPassword\\index.tsx",["327"],"import { IconButton, TextField } from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport api from \"../../services/api\";\r\nimport validateNewPassword from \"../../utils/validateNewPassword\";\r\nimport \"./styles.css\";\r\n\r\ninterface RecoverPasswordParams {\r\n  token?: string;\r\n}\r\n\r\nexport default function RecoverPassword() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  let { token } = useParams<RecoverPasswordParams>();\r\n  const { spinner } = useModal();\r\n  const [isValid, setIsValid] = useState<boolean | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [newPassword, setNewPassword] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState(validateNewPassword(newPassword));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }, [newPassword]);\r\n\r\n  function validate() {\r\n    setErrors(validateNewPassword(newPassword));\r\n  }\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  if (!token || (isValid !== null && !isValid)) {\r\n    spinner.close();\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  const verifyToken = useCallback(async () => {\r\n    spinner.open();\r\n    let response = await api.get(`/users/recover/${token}`);\r\n\r\n    if (response.status === 202) {\r\n      setIsValid(true);\r\n    }\r\n\r\n    setIsLoading(false);\r\n    spinner.close();\r\n  }, [setIsValid, token]);\r\n\r\n  useEffect(() => {\r\n    verifyToken();\r\n  }, [verifyToken]);\r\n\r\n  if (isLoading) {\r\n    return <div></div>;\r\n  }\r\n\r\n  async function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n    if (newPassword.password !== newPassword.confirmPassword) {\r\n      spinner.close();\r\n      return;\r\n    }\r\n\r\n    let response = await api.put(`/users/recover/${token}`, {\r\n      password: newPassword.password,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      history.replace(\"/\");\r\n    }\r\n\r\n    spinner.close();\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit}>\r\n      <div id=\"flex\">\r\n        <h2>Seu e-mail</h2>\r\n        <IconButton\r\n          onClick={() => {\r\n            handleShowPassword();\r\n          }}\r\n          className=\"show-password-button\"\r\n          color=\"primary\"\r\n        >\r\n          {showPassword ? \"Esconder senha\" : \"Mostrar senha\"}\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className=\"line\"></div>\r\n      <TextField\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={newPassword.password}\r\n        name=\"password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Nova senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setNewPassword({ ...newPassword, password: e.target.value });\r\n          validate();\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors.password ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1.5rem\" }}>{errors.password}</span>\r\n        }\r\n      />\r\n      <TextField\r\n        type={showPassword ? \"text\" : \"password\"}\r\n        value={newPassword.confirmPassword}\r\n        style={{ marginTop: \"1rem\" }}\r\n        name=\"confirm_password\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Confirmar nova senha</span>}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setNewPassword({ ...newPassword, confirmPassword: e.target.value });\r\n          validate();\r\n        }}\r\n        autoComplete=\"off\"\r\n        required\r\n        error={errors.confirmPassword ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1.5rem\" }}>{errors.confirmPassword}</span>\r\n        }\r\n      />\r\n      <button className=\"recover-password-button\">Alterar senha</button>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\SearchClient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\404\\index.tsx",["328"],"import React from \"react\";\r\nimport \"./styles.css\";\r\nimport image404 from \"../../assets/images/404.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div className=\"page-404\">\r\n      <h1>Página não encontrada...</h1>\r\n      <img src={image404} />\r\n      <p>\r\n        Página ou usuário não encontrado. Podem ter sido excluídos, atualizados\r\n        ou nem se quer ter existido.\r\n      </p>\r\n      <Link to=\"/\">Voltar para página principal</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\HomeClient\\index.tsx",["329"],"import { useState, useEffect } from \"react\";\r\nimport Categories from \"../../components/Categories\";\r\nimport DoctorList, { Medic } from \"../../components/DoctorList\";\r\nimport HeaderPlatform from \"../../components/HeaderPlatform\";\r\nimport LoadMoreButton from \"../../components/LoadMoreButton\";\r\nimport api from \"../../services/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport \"./styles.css\";\r\nimport { useInfoData } from \"../../context/InfoProvider\";\r\n\r\nconst HomeClient = () => {\r\n  const { setInfoData, infoData } = useInfoData();\r\n  const [isLocationActivated, setIsLocationActivated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(0);\r\n  const [medics, setMedics] = useState<Array<Medic>>([]);\r\n  let [location, setLocation] = useState<null | GeolocationPosition>(null);\r\n\r\n  async function loadMore() {\r\n    setLoading(true);\r\n    let { data } = await api.get(\r\n      `medics?offset=${page}&lat=${location?.coords.latitude}&lon=${location?.coords.longitude}`\r\n    );\r\n    data = data.map((medic: Medic) => medic);\r\n\r\n    Geocode.fromLatLng(\r\n      `${location?.coords.latitude}`,\r\n      `${location?.coords.longitude}`\r\n    ).then((response: any) => {\r\n      try {\r\n        const address = response.results;\r\n        setInfoData({ ...infoData, location: address[0].formatted_address });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n\r\n    setMedics((previousState) => [...previousState, ...data]);\r\n    setPage(page + 1);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function getUserLocation() {\r\n    if (navigator.geolocation) {\r\n      let permission = await navigator.permissions.query({\r\n        name: \"geolocation\",\r\n      });\r\n\r\n      if (permission.state === \"granted\" || permission.state === \"prompt\") {\r\n        setIsLocationActivated(true);\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos: GeolocationPosition) => {\r\n            setLocation(pos);\r\n          },\r\n          () => {},\r\n          { enableHighAccuracy: true }\r\n        );\r\n      } else if (permission.state === \"denied\") {\r\n        console.log(\"Você precisa ativar sua localização\");\r\n        setIsLocationActivated(false);\r\n      }\r\n\r\n      permission.onchange = () => {\r\n        console.log(\"Estado alterado\");\r\n      };\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserLocation();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!location) {\r\n      // Nada\r\n    } else {\r\n      loadMore();\r\n    }\r\n  }, [location]);\r\n\r\n  Geocode.setApiKey(\"AIzaSyDanmMSOYTtyp-Lbu43BVKiSW5EP8FRS9Y\");\r\n  Geocode.setLanguage(\"pt\");\r\n  Geocode.setRegion(\"br\");\r\n  Geocode.enableDebug();\r\n\r\n  return (\r\n    <>\r\n      {isLocationActivated ? (\r\n        <div className=\"client-platform\">\r\n          <HeaderPlatform />\r\n          <div className=\"container\">\r\n            <Categories />\r\n            <DoctorList loading={loading} medics={medics} />\r\n            <LoadMoreButton onClick={loadMore} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"location-message\">\r\n          <h1>Você precisa ativar sua localização para continuarmos</h1>\r\n          <p>\r\n            Caso tenha dificuldades, isso pode de ajudar:{\" \"}\r\n            <a\r\n              href=\"https://support.google.com/chrome/answer/142065?co=GENIE.Platform%3DDesktop&hl=pt\"\r\n              rel=\"noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              https://support.google.com/chrome/answer/142065?co=GENIE.Platform%3DDesktop&hl=pt\r\n            </a>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeClient;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Location\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Schedule.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Review.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Header\\index.tsx",[],["330","331"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MyProfileSettings\\index.tsx",["332","333","334"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { IoSettingsOutline, IoCardOutline } from \"react-icons/io5\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport refreshUserValidate from \"../../utils/refreshUserValidate\";\r\nimport mask from \"../../utils/mask\";\r\nimport api from \"../../services/api\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\nimport { PaymentMethodProps } from \"../Modals/PaymentMethod\";\r\n\r\nconst MyProfileSettings = () => {\r\n  const { spinner, sucesso } = useModal();\r\n  const { user, userID } = useAuth();\r\n  const [refreshUser, setRefreshUser] = useState({\r\n    fullName: `${user.firstName} ${user.lastName}`,\r\n    email: `${user.email}`,\r\n    phoneNumber: `${user.phoneNumber}`,\r\n  });\r\n\r\n  const [errors, setErrors] = useState(refreshUserValidate(refreshUser));\r\n  const [formError, setFormError] = useState(\"\");\r\n\r\n  function validate() {\r\n    setErrors(refreshUserValidate(refreshUser));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setErrors(refreshUserValidate(refreshUser));\r\n  }, [refreshUser]);\r\n\r\n  async function handleSubmitRefreshUser() {\r\n    const loopedErrors = Object.values(errors);\r\n    if (loopedErrors.length > 0) {\r\n      setFormError(\"O formulário possui erros\");\r\n    } else {\r\n      setFormError(\"\");\r\n      spinner.open();\r\n      await api\r\n        .put(`clients/${userID}`, {\r\n          fullName: refreshUser.fullName,\r\n          phoneNumber: refreshUser.phoneNumber,\r\n        })\r\n        .then(() => {\r\n          spinner.close();\r\n          sucesso.open({\r\n            name: `Parabéns ${refreshUser.fullName}`,\r\n            description: \"Dados atualizados com sucesso!\",\r\n            close: () => sucesso.close(),\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-profile-settings\">\r\n      <div className=\"my-profile-settings-nav\">\r\n        <button>\r\n          <IoSettingsOutline size={40} color=\"#07B3D6\" />\r\n          <span>Configurações da minha conta</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"my-profile-settings-info\">\r\n        <h2>Informações da conta</h2>\r\n        <TextField\r\n          value={refreshUser.fullName}\r\n          name=\"fullname\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={(e) => {\r\n            setRefreshUser({ ...refreshUser, fullName: e.target.value });\r\n            validate();\r\n          }}\r\n          error={errors.fullName ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.fullName}</span>\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          value={refreshUser.email}\r\n          name=\"email\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Nome</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          error={errors.email ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.email}</span>\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          value={refreshUser.phoneNumber}\r\n          name=\"phoneNumber\"\r\n          label={<span style={{ fontSize: \"1.5rem\" }}>Telefone</span>}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          required\r\n          onChange={(e) => {\r\n            setRefreshUser({\r\n              ...refreshUser,\r\n              phoneNumber: mask(e.target.value, \"(##) # ####-####\"),\r\n            });\r\n            validate();\r\n          }}\r\n          error={errors.phoneNumber ? true : false}\r\n          style={{ width: \"85%\", marginLeft: \"3rem\" }}\r\n          helperText={\r\n            <span style={{ fontSize: \"1.5rem\" }}>{errors.phoneNumber}</span>\r\n          }\r\n        />\r\n\r\n        <button onClick={handleSubmitRefreshUser} type=\"button\">\r\n          Atualizar dados\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfileSettings;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Schedule\\index.tsx",["335","336"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentStatus\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PrivateRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginPatient\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginSpitalAccount\\index.tsx",["337","338","339","340","341"],"import { Fragment, useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport returnIcon from \"../../assets/images/icons/return.svg\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useAuth } from \"../../context/AuthProvider\";\r\nimport { useModal } from \"../../context/ModalProvider\";\r\n\r\nconst LoginSpitalAccount = () => {\r\n  const { spinner } = useModal();\r\n  const { login, confirmed } = useAuth();\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  async function handleSubmitLogin(e: any) {\r\n    e.preventDefault();\r\n    spinner.open();\r\n\r\n    const { error } = await login(user.email, user.password);\r\n\r\n    spinner.close();\r\n    setError(error);\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  function handleShowPassword() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"header-login\">\r\n        <div className=\"container header-context\">\r\n          <Link className=\"return-link\" to={`/entrar-registrar-paciente`}>\r\n            <img src={returnIcon} alt=\"Retornar\" className=\"return\" />\r\n          </Link>\r\n          <div className=\"header-title\">\r\n            <h1>\r\n              Insira suas informações para que a gente consiga realizar seu\r\n              cadastro\r\n            </h1>\r\n          </div>\r\n          <img className=\"logo\" src={logo} alt=\"Spital\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"login-spital-account\">\r\n        <div className=\"login-spital-account-credentials\">\r\n          <form className=\"login-spital-account-form\">\r\n            <div className=\"login-spital-account-form-flex\">\r\n              <h2>Entre com seu e-mail e senha</h2>\r\n\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleShowPassword();\r\n                }}\r\n                color=\"primary\"\r\n              >\r\n                <span>{showPassword ? \"Esconder senha\" : \"Mostrar senha\"}</span>\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"gray-line\"></div>\r\n\r\n            <div className=\"login-spital-account-form-inputs\">\r\n              <TextField\r\n                type=\"email\"\r\n                value={user.email}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setUser({ ...user, email: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>E-mail</span>}\r\n                placeholder=\"Digite seu e-mail\"\r\n              />\r\n\r\n              <TextField\r\n                value={user.password}\r\n                style={{ marginTop: \"2rem\" }}\r\n                fullWidth\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                onChange={(e) => {\r\n                  setUser({ ...user, password: e.target.value });\r\n                }}\r\n                variant=\"outlined\"\r\n                label={<span style={{ fontSize: \"1.5rem\" }}>Senha</span>}\r\n                placeholder=\"Digite sua senha\"\r\n              />\r\n            </div>\r\n\r\n            <p\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                color: \"red\",\r\n                position: \"relative\",\r\n                top: \"-10px\",\r\n              }}\r\n            >\r\n              {error}\r\n            </p>\r\n\r\n            <div className=\"gray-line\" id=\"gray-line-2\"></div>\r\n            <Link\r\n              style={{\r\n                color: \"#07B3D6\",\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: \"bold\",\r\n                marginTop: \"1.5rem\",\r\n              }}\r\n              to=\"/recuperar\"\r\n            >\r\n              Esqueci minha senha\r\n            </Link>\r\n\r\n            <button onClick={handleSubmitLogin} className=\"login-button\">\r\n              Entrar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginSpitalAccount;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\Landing\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\PaymentMethod\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MedicProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareClientFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Form\\Steps\\Phone.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\mask.js",[],["342","343"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\routes\\PublicRoute.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileRating\\index.tsx",["344"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\MyProfile\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\Spinner\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Credentials.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\HeaderPlatform\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Review\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Main\\index.tsx",["345"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfileData\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\ForgetPassword\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\platform-pages\\AppointmentUnique\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\Modals\\AreYouSure\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\context\\ShareMedicFormProvider.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorList\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\MedicProfilePages\\Payment\\index.tsx",["346","347"],"import \"./styles.css\";\r\nimport SubHeaderPlatform from \"../../../components/SubHeaderPlatform\";\r\nimport PaymentInfo from \"../../../components/PaymentInfo\";\r\nimport { NamesProps } from \"../../Form/Steps/Names\";\r\nimport { useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { PaymentMethodProps } from \"../../Modals/PaymentMethod\";\r\n\r\nconst PaymentMedicProfile = ({ previousPage, nextPage }: NamesProps) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [cardInfo, setCardInfo] = useState<PaymentMethodProps>({\r\n    id: \"\",\r\n    first_digits: \"\",\r\n    last_digits: \"\",\r\n    holder_name: \"\",\r\n    expiration_date: \"\",\r\n    card_cvv: \"\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"client-platform\">\r\n      <SubHeaderPlatform\r\n        title=\"Dados da consulta\"\r\n        returnFunction={() => previousPage()}\r\n      />\r\n      <div className=\"container\">\r\n        <PaymentInfo card={cardInfo} setCard={setCardInfo} error={error} />\r\n        {loading ? (\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"var(--color-button-primary)\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <>\r\n            <button onClick={nextPage} className=\"green-button\">\r\n              Ir para o pagamento\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentMedicProfile;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\AcademicData.tsx",["348"],"import { useEffect, useState } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"../../Select\";\r\nimport \"./styles.css\";\r\nimport validateMedicInfo from \"../../../utils/validateMedicInfo\";\r\nimport { useShareFormMedic } from \"../../../context/ShareMedicFormProvider\";\r\n\r\ninterface MedicNamesProps {\r\n  nextPage: () => void;\r\n  previousPage: () => void;\r\n}\r\n\r\nconst MedicAcademicData = ({ nextPage, previousPage }: MedicNamesProps) => {\r\n  const areaOptions = [\r\n    {\r\n      label: \"Alergista e Imunologista\",\r\n      value: \"Alergista e Imunologista\",\r\n    },\r\n    {\r\n      label: \"Angiologista\",\r\n      value: \"Angiologista\",\r\n    },\r\n    {\r\n      label: \"Cardiologista\",\r\n      value: \"Cardiologista\",\r\n    },\r\n    {\r\n      label: \"Coloproctologista\",\r\n      value: \"Coloproctologista\",\r\n    },\r\n    {\r\n      label: \"Dermatologista\",\r\n      value: \"Dermatologista\",\r\n    },\r\n    {\r\n      label: \"Endocrinologista\",\r\n      value: \"Endocrinologista\",\r\n    },\r\n    {\r\n      label: \"Endoscopista\",\r\n      value: \"Endoscopista\",\r\n    },\r\n    {\r\n      label: \"Gastroenterologista\",\r\n      value: \"Gastroenterologista\",\r\n    },\r\n    {\r\n      label: \"Geriatra\",\r\n      value: \"Geriatra\",\r\n    },\r\n    {\r\n      label: \"Ginecologista\",\r\n      value: \"Ginecologista\",\r\n    },\r\n    {\r\n      label: \"Hematologista\",\r\n      value: \"Hematologista\",\r\n    },\r\n    {\r\n      label: \"Infectologista\",\r\n      value: \"Infectologista\",\r\n    },\r\n    {\r\n      label: \"Nefrologista\",\r\n      value: \"Nefrologista\",\r\n    },\r\n    {\r\n      label: \"Neurologista\",\r\n      value: \"Neurologista\",\r\n    },\r\n    {\r\n      label: \"Nutrologo\",\r\n      value: \"Nutrologo\",\r\n    },\r\n    {\r\n      label: \"Obstetricista\",\r\n      value: \"Obstetricista\",\r\n    },\r\n    {\r\n      label: \"Oftalmologista\",\r\n      value: \"Oftalmologista\",\r\n    },\r\n    {\r\n      label: \"Ortopedista\",\r\n      value: \"Ortopedista\",\r\n    },\r\n    {\r\n      label: \"Otorrinolaringologista\",\r\n      value: \"Otorrinolaringologista\",\r\n    },\r\n    {\r\n      label: \"Pediatra\",\r\n      value: \"Pediatra\",\r\n    },\r\n    {\r\n      label: \"Pneumologista\",\r\n      value: \"Pneumologista\",\r\n    },\r\n    {\r\n      label: \"Radiologista\",\r\n      value: \"Radiologista\",\r\n    },\r\n    {\r\n      label: \"Radioterapista\",\r\n      value: \"Radioterapista\",\r\n    },\r\n    {\r\n      label: \"Reumatologista\",\r\n      value: \"Reumatologista\",\r\n    },\r\n    {\r\n      label: \"Urologista\",\r\n      value: \"Urologista\",\r\n    },\r\n  ];\r\n\r\n  const { medicData, setMedicData } = useShareFormMedic();\r\n  const [errors, setErrors] = useState(validateMedicInfo(medicData));\r\n\r\n  useEffect(() => {\r\n    setErrors(validateMedicInfo(medicData));\r\n  }, [medicData]);\r\n\r\n  useEffect(() => {\r\n    setMedicData((previousState) => ({\r\n      ...previousState,\r\n      area: areaOptions[0].value,\r\n    }));\r\n  }, [areaOptions]);\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Dados Acadêmicos</h2>\r\n      <div className=\"line\"></div>\r\n      <Select\r\n        name=\"week_day\"\r\n        onChange={(e: any) =>\r\n          setMedicData({ ...medicData, area: e.target.value })\r\n        }\r\n        value={medicData?.area}\r\n        options={areaOptions}\r\n      />\r\n\r\n      <TextField\r\n        placeholder=\"Universidade de São Paulo\"\r\n        value={medicData?.graduation}\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Graduação</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, graduation: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"graduação\"\r\n        error={errors?.graduation ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.graduation}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.masterDegree}\r\n        placeholder=\"Universidade de Campinas\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Mestrado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, masterDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"mestrado\"\r\n        error={errors?.masterDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.masterDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.doctorateDegree}\r\n        placeholder=\"Universidade Estadual Paulista\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>Doutorado (opcional)</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, doctorateDegree: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.doctorateDegree ? true : false}\r\n        helperText={\r\n          <span style={{ fontSize: \"1rem\" }}>{errors?.doctorateDegree}</span>\r\n        }\r\n      />\r\n\r\n      <TextField\r\n        value={medicData?.crm}\r\n        placeholder=\"010201/SP\"\r\n        label={<span style={{ fontSize: \"1.5rem\" }}>CRM</span>}\r\n        style={{ marginTop: \"1rem\" }}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => {\r\n          setMedicData({ ...medicData, crm: e.target.value });\r\n        }}\r\n        autoComplete=\"off\"\r\n        name=\"phone\"\r\n        error={errors?.crm ? true : false}\r\n        helperText={<span style={{ fontSize: \"1rem\" }}>{errors?.crm}</span>}\r\n      />\r\n\r\n      <button className=\"secondary\" onClick={(e) => previousPage()}>\r\n        Anterior\r\n      </button>\r\n      <button className=\"primary\" onClick={(e) => nextPage()}>\r\n        Próximo\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicAcademicData;\r\n","C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListMedicAreas\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\pages\\LoginAndRegisterMedico\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\utils\\validateMedicInfo.ts",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\PaymentInfo\\index.tsx",[],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\FormMedic\\Steps\\Review.tsx",["349"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\AppointmentUniquePages\\Main\\index.tsx",["350","351","352"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\ListAppointments\\index.tsx",["353"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\GreenButton\\index.tsx",["354"],"C:\\Users\\joaoz\\OneDrive\\Área de Trabalho\\Spital\\web\\client\\src\\components\\DoctorItem\\index.tsx",[],{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","replacedBy":"358"},{"ruleId":"355","replacedBy":"359"},{"ruleId":"357","replacedBy":"360"},{"ruleId":"361","severity":1,"message":"362","line":33,"column":6,"nodeType":"363","endLine":33,"endColumn":8,"suggestions":"364"},{"ruleId":"355","replacedBy":"365"},{"ruleId":"357","replacedBy":"366"},{"ruleId":"367","severity":1,"message":"368","line":1,"column":10,"nodeType":"369","messageId":"370","endLine":1,"endColumn":17},{"ruleId":"355","replacedBy":"371"},{"ruleId":"357","replacedBy":"372"},{"ruleId":"355","replacedBy":"373"},{"ruleId":"357","replacedBy":"374"},{"ruleId":"361","severity":1,"message":"375","line":119,"column":6,"nodeType":"363","endLine":119,"endColumn":8,"suggestions":"376"},{"ruleId":"361","severity":1,"message":"377","line":101,"column":6,"nodeType":"363","endLine":101,"endColumn":39,"suggestions":"378"},{"ruleId":"355","replacedBy":"379"},{"ruleId":"357","replacedBy":"380"},{"ruleId":"355","replacedBy":"381"},{"ruleId":"357","replacedBy":"382"},{"ruleId":"361","severity":1,"message":"383","line":55,"column":6,"nodeType":"363","endLine":55,"endColumn":25,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":10,"column":7,"nodeType":"387","endLine":10,"endColumn":29},{"ruleId":"361","severity":1,"message":"388","line":79,"column":6,"nodeType":"363","endLine":79,"endColumn":16,"suggestions":"389"},{"ruleId":"355","replacedBy":"390"},{"ruleId":"357","replacedBy":"391"},{"ruleId":"367","severity":1,"message":"392","line":3,"column":29,"nodeType":"369","messageId":"370","endLine":3,"endColumn":42},{"ruleId":"367","severity":1,"message":"393","line":10,"column":10,"nodeType":"369","messageId":"370","endLine":10,"endColumn":28},{"ruleId":"367","severity":1,"message":"394","line":22,"column":10,"nodeType":"369","messageId":"370","endLine":22,"endColumn":19},{"ruleId":"367","severity":1,"message":"395","line":68,"column":10,"nodeType":"369","messageId":"370","endLine":68,"endColumn":18},{"ruleId":"367","severity":1,"message":"396","line":74,"column":10,"nodeType":"369","messageId":"370","endLine":74,"endColumn":24},{"ruleId":"367","severity":1,"message":"397","line":1,"column":30,"nodeType":"369","messageId":"370","endLine":1,"endColumn":39},{"ruleId":"367","severity":1,"message":"398","line":9,"column":8,"nodeType":"369","messageId":"370","endLine":9,"endColumn":14},{"ruleId":"367","severity":1,"message":"399","line":15,"column":18,"nodeType":"369","messageId":"370","endLine":15,"endColumn":27},{"ruleId":"367","severity":1,"message":"400","line":33,"column":10,"nodeType":"369","messageId":"370","endLine":33,"endColumn":19},{"ruleId":"367","severity":1,"message":"401","line":33,"column":21,"nodeType":"369","messageId":"370","endLine":33,"endColumn":33},{"ruleId":"355","replacedBy":"379"},{"ruleId":"357","replacedBy":"380"},{"ruleId":"385","severity":1,"message":"386","line":74,"column":25,"nodeType":"387","endLine":78,"endColumn":27},{"ruleId":"361","severity":1,"message":"402","line":59,"column":6,"nodeType":"363","endLine":59,"endColumn":15,"suggestions":"403"},{"ruleId":"367","severity":1,"message":"404","line":10,"column":19,"nodeType":"369","messageId":"370","endLine":10,"endColumn":29},{"ruleId":"367","severity":1,"message":"405","line":11,"column":17,"nodeType":"369","messageId":"370","endLine":11,"endColumn":25},{"ruleId":"361","severity":1,"message":"406","line":130,"column":6,"nodeType":"363","endLine":130,"endColumn":19,"suggestions":"407"},{"ruleId":"367","severity":1,"message":"408","line":52,"column":18,"nodeType":"369","messageId":"370","endLine":52,"endColumn":27},{"ruleId":"367","severity":1,"message":"396","line":61,"column":10,"nodeType":"369","messageId":"370","endLine":61,"endColumn":24},{"ruleId":"367","severity":1,"message":"409","line":73,"column":9,"nodeType":"369","messageId":"370","endLine":73,"endColumn":22},{"ruleId":"367","severity":1,"message":"410","line":151,"column":23,"nodeType":"369","messageId":"370","endLine":151,"endColumn":32},{"ruleId":"367","severity":1,"message":"396","line":132,"column":20,"nodeType":"369","messageId":"370","endLine":132,"endColumn":34},{"ruleId":"367","severity":1,"message":"396","line":62,"column":10,"nodeType":"369","messageId":"370","endLine":62,"endColumn":24},"no-native-reassign",["411"],"no-negated-in-lhs",["412"],["411"],["412"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendEmailVerification'. Either include it or remove the dependency array.","ArrayExpression",["413"],["411"],["412"],"@typescript-eslint/no-unused-vars","'IoClose' is defined but never used.","Identifier","unusedVar",["411"],["412"],["411"],["412"],"React Hook useEffect has a missing dependency: 'loginWithToken'. Either include it or remove the dependency array.",["414"],"React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["415"],["411"],["412"],["411"],["412"],"React Hook useCallback has a missing dependency: 'spinner'. Either include it or remove the dependency array.",["416"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadMore'. Either include it or remove the dependency array.",["417"],["411"],["412"],"'IoCardOutline' is defined but never used.","'PaymentMethodProps' is defined but never used.","'formError' is assigned a value but never used.","'week_day' is assigned a value but never used.","'today_week_day' is assigned a value but never used.","'useEffect' is defined but never used.","'Loader' is defined but never used.","'confirmed' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["418"],"'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setMedicData'. Either include it or remove the dependency array.",["419"],"'setErrors' is assigned a value but never used.","'now_totalDate' is assigned a value but never used.","'totalDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},"Update the dependencies array to be: [sendEmailVerification]",{"range":"434","text":"435"},"Update the dependencies array to be: [loginWithToken]",{"range":"436","text":"437"},"Update the dependencies array to be: [location, maxPrice, maxDistance, reload]",{"range":"438","text":"439"},"Update the dependencies array to be: [spinner, token]",{"range":"440","text":"441"},"Update the dependencies array to be: [loadMore, location]",{"range":"442","text":"443"},"Update the dependencies array to be: [history, medicID]",{"range":"444","text":"445"},"Update the dependencies array to be: [areaOptions, setMedicData]",{"range":"446","text":"447"},[821,823],"[sendEmailVerification]",[2847,2849],"[loginWithToken]",[3278,3311],"[location, maxPrice, maxDistance, reload]",[1581,1600],"[spinner, token]",[2474,2484],"[loadMore, location]",[1593,1602],"[history, medicID]",[2819,2832],"[areaOptions, setMedicData]"]